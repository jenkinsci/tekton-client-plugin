/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cert.manager.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * ACME specific status options. This field should only be set if the Issuer is configured to use an ACME server to issue certificates.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-01T07:00:20.132973Z[Etc/UTC]")
public class V1ClusterIssuerStatusAcme {
  public static final String SERIALIZED_NAME_LAST_PRIVATE_KEY_HASH = "lastPrivateKeyHash";
  @SerializedName(SERIALIZED_NAME_LAST_PRIVATE_KEY_HASH)
  private String lastPrivateKeyHash;

  public static final String SERIALIZED_NAME_LAST_REGISTERED_EMAIL = "lastRegisteredEmail";
  @SerializedName(SERIALIZED_NAME_LAST_REGISTERED_EMAIL)
  private String lastRegisteredEmail;

  public static final String SERIALIZED_NAME_URI = "uri";
  @SerializedName(SERIALIZED_NAME_URI)
  private String uri;

  public V1ClusterIssuerStatusAcme() {
  }

  public V1ClusterIssuerStatusAcme lastPrivateKeyHash(String lastPrivateKeyHash) {
    
    this.lastPrivateKeyHash = lastPrivateKeyHash;
    return this;
  }

   /**
   * LastPrivateKeyHash is a hash of the private key associated with the latest registered ACME account, in order to track changes made to registered account associated with the Issuer
   * @return lastPrivateKeyHash
  **/
  @jakarta.annotation.Nullable
  public String getLastPrivateKeyHash() {
    return lastPrivateKeyHash;
  }


  public void setLastPrivateKeyHash(String lastPrivateKeyHash) {
    this.lastPrivateKeyHash = lastPrivateKeyHash;
  }


  public V1ClusterIssuerStatusAcme lastRegisteredEmail(String lastRegisteredEmail) {
    
    this.lastRegisteredEmail = lastRegisteredEmail;
    return this;
  }

   /**
   * LastRegisteredEmail is the email associated with the latest registered ACME account, in order to track changes made to registered account associated with the  Issuer
   * @return lastRegisteredEmail
  **/
  @jakarta.annotation.Nullable
  public String getLastRegisteredEmail() {
    return lastRegisteredEmail;
  }


  public void setLastRegisteredEmail(String lastRegisteredEmail) {
    this.lastRegisteredEmail = lastRegisteredEmail;
  }


  public V1ClusterIssuerStatusAcme uri(String uri) {
    
    this.uri = uri;
    return this;
  }

   /**
   * URI is the unique account identifier, which can also be used to retrieve account details from the CA
   * @return uri
  **/
  @jakarta.annotation.Nullable
  public String getUri() {
    return uri;
  }


  public void setUri(String uri) {
    this.uri = uri;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1ClusterIssuerStatusAcme v1ClusterIssuerStatusAcme = (V1ClusterIssuerStatusAcme) o;
    return Objects.equals(this.lastPrivateKeyHash, v1ClusterIssuerStatusAcme.lastPrivateKeyHash) &&
        Objects.equals(this.lastRegisteredEmail, v1ClusterIssuerStatusAcme.lastRegisteredEmail) &&
        Objects.equals(this.uri, v1ClusterIssuerStatusAcme.uri);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastPrivateKeyHash, lastRegisteredEmail, uri);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1ClusterIssuerStatusAcme {\n");
    sb.append("    lastPrivateKeyHash: ").append(toIndentedString(lastPrivateKeyHash)).append("\n");
    sb.append("    lastRegisteredEmail: ").append(toIndentedString(lastRegisteredEmail)).append("\n");
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("lastPrivateKeyHash");
    openapiFields.add("lastRegisteredEmail");
    openapiFields.add("uri");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1ClusterIssuerStatusAcme
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1ClusterIssuerStatusAcme.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1ClusterIssuerStatusAcme is not found in the empty JSON string", V1ClusterIssuerStatusAcme.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1ClusterIssuerStatusAcme.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1ClusterIssuerStatusAcme` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("lastPrivateKeyHash") != null && !jsonObj.get("lastPrivateKeyHash").isJsonNull()) && !jsonObj.get("lastPrivateKeyHash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastPrivateKeyHash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastPrivateKeyHash").toString()));
      }
      if ((jsonObj.get("lastRegisteredEmail") != null && !jsonObj.get("lastRegisteredEmail").isJsonNull()) && !jsonObj.get("lastRegisteredEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastRegisteredEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastRegisteredEmail").toString()));
      }
      if ((jsonObj.get("uri") != null && !jsonObj.get("uri").isJsonNull()) && !jsonObj.get("uri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `uri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("uri").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1ClusterIssuerStatusAcme.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1ClusterIssuerStatusAcme' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1ClusterIssuerStatusAcme> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1ClusterIssuerStatusAcme.class));

       return (TypeAdapter<T>) new TypeAdapter<V1ClusterIssuerStatusAcme>() {
           @Override
           public void write(JsonWriter out, V1ClusterIssuerStatusAcme value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1ClusterIssuerStatusAcme read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1ClusterIssuerStatusAcme given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1ClusterIssuerStatusAcme
  * @throws IOException if the JSON string is invalid with respect to V1ClusterIssuerStatusAcme
  */
  public static V1ClusterIssuerStatusAcme fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1ClusterIssuerStatusAcme.class);
  }

 /**
  * Convert an instance of V1ClusterIssuerStatusAcme to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

