// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: k8s.io/api/certificates/v1/generated.proto
// Protobuf Java Version: 4.26.1

package io.kubernetes.client.proto;

public final class V1Certificates {
  private V1Certificates() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      V1Certificates.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CertificateSigningRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.certificates.v1.CertificateSigningRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ObjectMeta getMetadata();
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * spec contains the certificate request, and is immutable after creation.
     * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
     * Other fields are derived by Kubernetes and cannot be modified by users.
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    boolean hasSpec();
    /**
     * <pre>
     * spec contains the certificate request, and is immutable after creation.
     * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
     * Other fields are derived by Kubernetes and cannot be modified by users.
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
     * @return The spec.
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec getSpec();
    /**
     * <pre>
     * spec contains the certificate request, and is immutable after creation.
     * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
     * Other fields are derived by Kubernetes and cannot be modified by users.
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder getSpecOrBuilder();

    /**
     * <pre>
     * status contains information about whether the request is approved or denied,
     * and the certificate issued by the signer, or the failure condition indicating signer failure.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * status contains information about whether the request is approved or denied,
     * and the certificate issued by the signer, or the failure condition indicating signer failure.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
     * @return The status.
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus getStatus();
    /**
     * <pre>
     * status contains information about whether the request is approved or denied,
     * and the certificate issued by the signer, or the failure condition indicating signer failure.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder getStatusOrBuilder();
  }
  /**
   * <pre>
   * CertificateSigningRequest objects provide a mechanism to obtain x509 certificates
   * by submitting a certificate signing request, and having it asynchronously approved and issued.
   *
   * Kubelets use this API to obtain:
   * 1. client certificates to authenticate to kube-apiserver (with the "kubernetes.io/kube-apiserver-client-kubelet" signerName).
   * 2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the "kubernetes.io/kubelet-serving" signerName).
   *
   * This API can be used to request client certificates to authenticate to kube-apiserver
   * (with the "kubernetes.io/kube-apiserver-client" signerName),
   * or to obtain certificates from custom non-Kubernetes signers.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequest}
   */
  public static final class CertificateSigningRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.certificates.v1.CertificateSigningRequest)
      CertificateSigningRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateSigningRequest.class.getName());
    }
    // Use CertificateSigningRequest.newBuilder() to construct.
    private CertificateSigningRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateSigningRequest() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }

    public static final int SPEC_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec spec_;
    /**
     * <pre>
     * spec contains the certificate request, and is immutable after creation.
     * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
     * Other fields are derived by Kubernetes and cannot be modified by users.
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    @java.lang.Override
    public boolean hasSpec() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * spec contains the certificate request, and is immutable after creation.
     * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
     * Other fields are derived by Kubernetes and cannot be modified by users.
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
     * @return The spec.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec getSpec() {
      return spec_ == null ? io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance() : spec_;
    }
    /**
     * <pre>
     * spec contains the certificate request, and is immutable after creation.
     * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
     * Other fields are derived by Kubernetes and cannot be modified by users.
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder getSpecOrBuilder() {
      return spec_ == null ? io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance() : spec_;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus status_;
    /**
     * <pre>
     * status contains information about whether the request is approved or denied,
     * and the certificate issued by the signer, or the failure condition indicating signer failure.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * status contains information about whether the request is approved or denied,
     * and the certificate issued by the signer, or the failure condition indicating signer failure.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus getStatus() {
      return status_ == null ? io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance() : status_;
    }
    /**
     * <pre>
     * status contains information about whether the request is approved or denied,
     * and the certificate issued by the signer, or the failure condition indicating signer failure.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder getStatusOrBuilder() {
      return status_ == null ? io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance() : status_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSpec());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getStatus());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSpec());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest other = (io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasSpec() != other.hasSpec()) return false;
      if (hasSpec()) {
        if (!getSpec()
            .equals(other.getSpec())) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasSpec()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getSpec().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CertificateSigningRequest objects provide a mechanism to obtain x509 certificates
     * by submitting a certificate signing request, and having it asynchronously approved and issued.
     *
     * Kubelets use this API to obtain:
     * 1. client certificates to authenticate to kube-apiserver (with the "kubernetes.io/kube-apiserver-client-kubelet" signerName).
     * 2. serving certificates for TLS endpoints kube-apiserver can connect to securely (with the "kubernetes.io/kubelet-serving" signerName).
     *
     * This API can be used to request client certificates to authenticate to kube-apiserver
     * (with the "kubernetes.io/kube-apiserver-client" signerName),
     * or to obtain certificates from custom non-Kubernetes signers.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.certificates.v1.CertificateSigningRequest)
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getSpecFieldBuilder();
          getStatusFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest build() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest buildPartial() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest result = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.spec_ = specBuilder_ == null
              ? spec_
              : specBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.status_ = statusBuilder_ == null
              ? status_
              : statusBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest) {
          return mergeFrom((io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest other) {
        if (other == io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasSpec()) {
          mergeSpec(other.getSpec());
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSpecFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ObjectMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec spec_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder> specBuilder_;
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       * @return Whether the spec field is set.
       */
      public boolean hasSpec() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       * @return The spec.
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec getSpec() {
        if (specBuilder_ == null) {
          return spec_ == null ? io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance() : spec_;
        } else {
          return specBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      public Builder setSpec(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec value) {
        if (specBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
        } else {
          specBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      public Builder setSpec(
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder builderForValue) {
        if (specBuilder_ == null) {
          spec_ = builderForValue.build();
        } else {
          specBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      public Builder mergeSpec(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec value) {
        if (specBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            spec_ != null &&
            spec_ != io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance()) {
            getSpecBuilder().mergeFrom(value);
          } else {
            spec_ = value;
          }
        } else {
          specBuilder_.mergeFrom(value);
        }
        if (spec_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      public Builder clearSpec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder getSpecBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder getSpecOrBuilder() {
        if (specBuilder_ != null) {
          return specBuilder_.getMessageOrBuilder();
        } else {
          return spec_ == null ?
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance() : spec_;
        }
      }
      /**
       * <pre>
       * spec contains the certificate request, and is immutable after creation.
       * Only the request, signerName, expirationSeconds, and usages fields can be set on creation.
       * Other fields are derived by Kubernetes and cannot be modified by users.
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestSpec spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder> 
          getSpecFieldBuilder() {
        if (specBuilder_ == null) {
          specBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder>(
                  getSpec(),
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        return specBuilder_;
      }

      private io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus status_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder> statusBuilder_;
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       * @return The status.
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      public Builder setStatus(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      public Builder setStatus(
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      public Builder mergeStatus(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            status_ != null &&
            status_ != io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance()) {
            getStatusBuilder().mergeFrom(value);
          } else {
            status_ = value;
          }
        } else {
          statusBuilder_.mergeFrom(value);
        }
        if (status_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance() : status_;
        }
      }
      /**
       * <pre>
       * status contains information about whether the request is approved or denied,
       * and the certificate issued by the signer, or the failure condition indicating signer failure.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.certificates.v1.CertificateSigningRequestStatus status = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.certificates.v1.CertificateSigningRequest)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.certificates.v1.CertificateSigningRequest)
    private static final io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest();
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateSigningRequest>
        PARSER = new com.google.protobuf.AbstractParser<CertificateSigningRequest>() {
      @java.lang.Override
      public CertificateSigningRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateSigningRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateSigningRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateSigningRequestConditionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.certificates.v1.CertificateSigningRequestCondition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
     *
     * An "Approved" condition is added via the /approval subresource,
     * indicating the request was approved and should be issued by the signer.
     *
     * A "Denied" condition is added via the /approval subresource,
     * indicating the request was denied and should not be issued by the signer.
     *
     * A "Failed" condition is added via the /status subresource,
     * indicating the signer failed to issue the certificate.
     *
     * Approved and Denied conditions are mutually exclusive.
     * Approved, Denied, and Failed conditions cannot be removed once added.
     *
     * Only one condition of a given type is allowed.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
     *
     * An "Approved" condition is added via the /approval subresource,
     * indicating the request was approved and should be issued by the signer.
     *
     * A "Denied" condition is added via the /approval subresource,
     * indicating the request was denied and should not be issued by the signer.
     *
     * A "Failed" condition is added via the /status subresource,
     * indicating the signer failed to issue the certificate.
     *
     * Approved and Denied conditions are mutually exclusive.
     * Approved, Denied, and Failed conditions cannot be removed once added.
     *
     * Only one condition of a given type is allowed.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     * @return The type.
     */
    java.lang.String getType();
    /**
     * <pre>
     * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
     *
     * An "Approved" condition is added via the /approval subresource,
     * indicating the request was approved and should be issued by the signer.
     *
     * A "Denied" condition is added via the /approval subresource,
     * indicating the request was denied and should not be issued by the signer.
     *
     * A "Failed" condition is added via the /status subresource,
     * indicating the signer failed to issue the certificate.
     *
     * Approved and Denied conditions are mutually exclusive.
     * Approved, Denied, and Failed conditions cannot be removed once added.
     *
     * Only one condition of a given type is allowed.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     * @return The bytes for type.
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <pre>
     * status of the condition, one of True, False, Unknown.
     * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
     * </pre>
     *
     * <code>optional string status = 6;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * status of the condition, one of True, False, Unknown.
     * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
     * </pre>
     *
     * <code>optional string status = 6;</code>
     * @return The status.
     */
    java.lang.String getStatus();
    /**
     * <pre>
     * status of the condition, one of True, False, Unknown.
     * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
     * </pre>
     *
     * <code>optional string status = 6;</code>
     * @return The bytes for status.
     */
    com.google.protobuf.ByteString
        getStatusBytes();

    /**
     * <pre>
     * reason indicates a brief reason for the request state
     * +optional
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     * @return Whether the reason field is set.
     */
    boolean hasReason();
    /**
     * <pre>
     * reason indicates a brief reason for the request state
     * +optional
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     * @return The reason.
     */
    java.lang.String getReason();
    /**
     * <pre>
     * reason indicates a brief reason for the request state
     * +optional
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     * @return The bytes for reason.
     */
    com.google.protobuf.ByteString
        getReasonBytes();

    /**
     * <pre>
     * message contains a human readable message with details about the request state
     * +optional
     * </pre>
     *
     * <code>optional string message = 3;</code>
     * @return Whether the message field is set.
     */
    boolean hasMessage();
    /**
     * <pre>
     * message contains a human readable message with details about the request state
     * +optional
     * </pre>
     *
     * <code>optional string message = 3;</code>
     * @return The message.
     */
    java.lang.String getMessage();
    /**
     * <pre>
     * message contains a human readable message with details about the request state
     * +optional
     * </pre>
     *
     * <code>optional string message = 3;</code>
     * @return The bytes for message.
     */
    com.google.protobuf.ByteString
        getMessageBytes();

    /**
     * <pre>
     * lastUpdateTime is the time of the last update to this condition
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
     * @return Whether the lastUpdateTime field is set.
     */
    boolean hasLastUpdateTime();
    /**
     * <pre>
     * lastUpdateTime is the time of the last update to this condition
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
     * @return The lastUpdateTime.
     */
    io.kubernetes.client.proto.Meta.Time getLastUpdateTime();
    /**
     * <pre>
     * lastUpdateTime is the time of the last update to this condition
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
     */
    io.kubernetes.client.proto.Meta.TimeOrBuilder getLastUpdateTimeOrBuilder();

    /**
     * <pre>
     * lastTransitionTime is the time the condition last transitioned from one status to another.
     * If unset, when a new condition type is added or an existing condition's status is changed,
     * the server defaults this to the current time.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
     * @return Whether the lastTransitionTime field is set.
     */
    boolean hasLastTransitionTime();
    /**
     * <pre>
     * lastTransitionTime is the time the condition last transitioned from one status to another.
     * If unset, when a new condition type is added or an existing condition's status is changed,
     * the server defaults this to the current time.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
     * @return The lastTransitionTime.
     */
    io.kubernetes.client.proto.Meta.Time getLastTransitionTime();
    /**
     * <pre>
     * lastTransitionTime is the time the condition last transitioned from one status to another.
     * If unset, when a new condition type is added or an existing condition's status is changed,
     * the server defaults this to the current time.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
     */
    io.kubernetes.client.proto.Meta.TimeOrBuilder getLastTransitionTimeOrBuilder();
  }
  /**
   * <pre>
   * CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestCondition}
   */
  public static final class CertificateSigningRequestCondition extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.certificates.v1.CertificateSigningRequestCondition)
      CertificateSigningRequestConditionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateSigningRequestCondition.class.getName());
    }
    // Use CertificateSigningRequestCondition.newBuilder() to construct.
    private CertificateSigningRequestCondition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateSigningRequestCondition() {
      type_ = "";
      status_ = "";
      reason_ = "";
      message_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object type_ = "";
    /**
     * <pre>
     * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
     *
     * An "Approved" condition is added via the /approval subresource,
     * indicating the request was approved and should be issued by the signer.
     *
     * A "Denied" condition is added via the /approval subresource,
     * indicating the request was denied and should not be issued by the signer.
     *
     * A "Failed" condition is added via the /status subresource,
     * indicating the signer failed to issue the certificate.
     *
     * Approved and Denied conditions are mutually exclusive.
     * Approved, Denied, and Failed conditions cannot be removed once added.
     *
     * Only one condition of a given type is allowed.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
     *
     * An "Approved" condition is added via the /approval subresource,
     * indicating the request was approved and should be issued by the signer.
     *
     * A "Denied" condition is added via the /approval subresource,
     * indicating the request was denied and should not be issued by the signer.
     *
     * A "Failed" condition is added via the /status subresource,
     * indicating the signer failed to issue the certificate.
     *
     * Approved and Denied conditions are mutually exclusive.
     * Approved, Denied, and Failed conditions cannot be removed once added.
     *
     * Only one condition of a given type is allowed.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
     *
     * An "Approved" condition is added via the /approval subresource,
     * indicating the request was approved and should be issued by the signer.
     *
     * A "Denied" condition is added via the /approval subresource,
     * indicating the request was denied and should not be issued by the signer.
     *
     * A "Failed" condition is added via the /status subresource,
     * indicating the signer failed to issue the certificate.
     *
     * Approved and Denied conditions are mutually exclusive.
     * Approved, Denied, and Failed conditions cannot be removed once added.
     *
     * Only one condition of a given type is allowed.
     * </pre>
     *
     * <code>optional string type = 1;</code>
     * @return The bytes for type.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object status_ = "";
    /**
     * <pre>
     * status of the condition, one of True, False, Unknown.
     * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
     * </pre>
     *
     * <code>optional string status = 6;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * status of the condition, one of True, False, Unknown.
     * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
     * </pre>
     *
     * <code>optional string status = 6;</code>
     * @return The status.
     */
    @java.lang.Override
    public java.lang.String getStatus() {
      java.lang.Object ref = status_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          status_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * status of the condition, one of True, False, Unknown.
     * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
     * </pre>
     *
     * <code>optional string status = 6;</code>
     * @return The bytes for status.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStatusBytes() {
      java.lang.Object ref = status_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        status_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REASON_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object reason_ = "";
    /**
     * <pre>
     * reason indicates a brief reason for the request state
     * +optional
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     * @return Whether the reason field is set.
     */
    @java.lang.Override
    public boolean hasReason() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * reason indicates a brief reason for the request state
     * +optional
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     * @return The reason.
     */
    @java.lang.Override
    public java.lang.String getReason() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          reason_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * reason indicates a brief reason for the request state
     * +optional
     * </pre>
     *
     * <code>optional string reason = 2;</code>
     * @return The bytes for reason.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getReasonBytes() {
      java.lang.Object ref = reason_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MESSAGE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object message_ = "";
    /**
     * <pre>
     * message contains a human readable message with details about the request state
     * +optional
     * </pre>
     *
     * <code>optional string message = 3;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * message contains a human readable message with details about the request state
     * +optional
     * </pre>
     *
     * <code>optional string message = 3;</code>
     * @return The message.
     */
    @java.lang.Override
    public java.lang.String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          message_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * message contains a human readable message with details about the request state
     * +optional
     * </pre>
     *
     * <code>optional string message = 3;</code>
     * @return The bytes for message.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LASTUPDATETIME_FIELD_NUMBER = 4;
    private io.kubernetes.client.proto.Meta.Time lastUpdateTime_;
    /**
     * <pre>
     * lastUpdateTime is the time of the last update to this condition
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
     * @return Whether the lastUpdateTime field is set.
     */
    @java.lang.Override
    public boolean hasLastUpdateTime() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * lastUpdateTime is the time of the last update to this condition
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
     * @return The lastUpdateTime.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.Time getLastUpdateTime() {
      return lastUpdateTime_ == null ? io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastUpdateTime_;
    }
    /**
     * <pre>
     * lastUpdateTime is the time of the last update to this condition
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.TimeOrBuilder getLastUpdateTimeOrBuilder() {
      return lastUpdateTime_ == null ? io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastUpdateTime_;
    }

    public static final int LASTTRANSITIONTIME_FIELD_NUMBER = 5;
    private io.kubernetes.client.proto.Meta.Time lastTransitionTime_;
    /**
     * <pre>
     * lastTransitionTime is the time the condition last transitioned from one status to another.
     * If unset, when a new condition type is added or an existing condition's status is changed,
     * the server defaults this to the current time.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
     * @return Whether the lastTransitionTime field is set.
     */
    @java.lang.Override
    public boolean hasLastTransitionTime() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * lastTransitionTime is the time the condition last transitioned from one status to another.
     * If unset, when a new condition type is added or an existing condition's status is changed,
     * the server defaults this to the current time.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
     * @return The lastTransitionTime.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.Time getLastTransitionTime() {
      return lastTransitionTime_ == null ? io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastTransitionTime_;
    }
    /**
     * <pre>
     * lastTransitionTime is the time the condition last transitioned from one status to another.
     * If unset, when a new condition type is added or an existing condition's status is changed,
     * the server defaults this to the current time.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.TimeOrBuilder getLastTransitionTimeOrBuilder() {
      return lastTransitionTime_ == null ? io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastTransitionTime_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, type_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, reason_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, message_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(4, getLastUpdateTime());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(5, getLastTransitionTime());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, status_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, type_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, reason_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, message_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLastUpdateTime());
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getLastTransitionTime());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, status_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition other = (io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (hasReason() != other.hasReason()) return false;
      if (hasReason()) {
        if (!getReason()
            .equals(other.getReason())) return false;
      }
      if (hasMessage() != other.hasMessage()) return false;
      if (hasMessage()) {
        if (!getMessage()
            .equals(other.getMessage())) return false;
      }
      if (hasLastUpdateTime() != other.hasLastUpdateTime()) return false;
      if (hasLastUpdateTime()) {
        if (!getLastUpdateTime()
            .equals(other.getLastUpdateTime())) return false;
      }
      if (hasLastTransitionTime() != other.hasLastTransitionTime()) return false;
      if (hasLastTransitionTime()) {
        if (!getLastTransitionTime()
            .equals(other.getLastTransitionTime())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      if (hasReason()) {
        hash = (37 * hash) + REASON_FIELD_NUMBER;
        hash = (53 * hash) + getReason().hashCode();
      }
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      if (hasLastUpdateTime()) {
        hash = (37 * hash) + LASTUPDATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getLastUpdateTime().hashCode();
      }
      if (hasLastTransitionTime()) {
        hash = (37 * hash) + LASTTRANSITIONTIME_FIELD_NUMBER;
        hash = (53 * hash) + getLastTransitionTime().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CertificateSigningRequestCondition describes a condition of a CertificateSigningRequest object
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestCondition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.certificates.v1.CertificateSigningRequestCondition)
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getLastUpdateTimeFieldBuilder();
          getLastTransitionTimeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = "";
        status_ = "";
        reason_ = "";
        message_ = "";
        lastUpdateTime_ = null;
        if (lastUpdateTimeBuilder_ != null) {
          lastUpdateTimeBuilder_.dispose();
          lastUpdateTimeBuilder_ = null;
        }
        lastTransitionTime_ = null;
        if (lastTransitionTimeBuilder_ != null) {
          lastTransitionTimeBuilder_.dispose();
          lastTransitionTimeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition build() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition buildPartial() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition result = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.status_ = status_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.reason_ = reason_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.message_ = message_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.lastUpdateTime_ = lastUpdateTimeBuilder_ == null
              ? lastUpdateTime_
              : lastUpdateTimeBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.lastTransitionTime_ = lastTransitionTimeBuilder_ == null
              ? lastTransitionTime_
              : lastTransitionTimeBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition) {
          return mergeFrom((io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition other) {
        if (other == io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.getDefaultInstance()) return this;
        if (other.hasType()) {
          type_ = other.type_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasStatus()) {
          status_ = other.status_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasReason()) {
          reason_ = other.reason_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasMessage()) {
          message_ = other.message_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasLastUpdateTime()) {
          mergeLastUpdateTime(other.getLastUpdateTime());
        }
        if (other.hasLastTransitionTime()) {
          mergeLastTransitionTime(other.getLastTransitionTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                type_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                reason_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 18
              case 26: {
                message_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getLastUpdateTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getLastTransitionTimeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 42
              case 50: {
                status_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <pre>
       * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
       *
       * An "Approved" condition is added via the /approval subresource,
       * indicating the request was approved and should be issued by the signer.
       *
       * A "Denied" condition is added via the /approval subresource,
       * indicating the request was denied and should not be issued by the signer.
       *
       * A "Failed" condition is added via the /status subresource,
       * indicating the signer failed to issue the certificate.
       *
       * Approved and Denied conditions are mutually exclusive.
       * Approved, Denied, and Failed conditions cannot be removed once added.
       *
       * Only one condition of a given type is allowed.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
       *
       * An "Approved" condition is added via the /approval subresource,
       * indicating the request was approved and should be issued by the signer.
       *
       * A "Denied" condition is added via the /approval subresource,
       * indicating the request was denied and should not be issued by the signer.
       *
       * A "Failed" condition is added via the /status subresource,
       * indicating the signer failed to issue the certificate.
       *
       * Approved and Denied conditions are mutually exclusive.
       * Approved, Denied, and Failed conditions cannot be removed once added.
       *
       * Only one condition of a given type is allowed.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return The type.
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
       *
       * An "Approved" condition is added via the /approval subresource,
       * indicating the request was approved and should be issued by the signer.
       *
       * A "Denied" condition is added via the /approval subresource,
       * indicating the request was denied and should not be issued by the signer.
       *
       * A "Failed" condition is added via the /status subresource,
       * indicating the signer failed to issue the certificate.
       *
       * Approved and Denied conditions are mutually exclusive.
       * Approved, Denied, and Failed conditions cannot be removed once added.
       *
       * Only one condition of a given type is allowed.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return The bytes for type.
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
       *
       * An "Approved" condition is added via the /approval subresource,
       * indicating the request was approved and should be issued by the signer.
       *
       * A "Denied" condition is added via the /approval subresource,
       * indicating the request was denied and should not be issued by the signer.
       *
       * A "Failed" condition is added via the /status subresource,
       * indicating the signer failed to issue the certificate.
       *
       * Approved and Denied conditions are mutually exclusive.
       * Approved, Denied, and Failed conditions cannot be removed once added.
       *
       * Only one condition of a given type is allowed.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
       *
       * An "Approved" condition is added via the /approval subresource,
       * indicating the request was approved and should be issued by the signer.
       *
       * A "Denied" condition is added via the /approval subresource,
       * indicating the request was denied and should not be issued by the signer.
       *
       * A "Failed" condition is added via the /status subresource,
       * indicating the signer failed to issue the certificate.
       *
       * Approved and Denied conditions are mutually exclusive.
       * Approved, Denied, and Failed conditions cannot be removed once added.
       *
       * Only one condition of a given type is allowed.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        type_ = getDefaultInstance().getType();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * type of the condition. Known conditions are "Approved", "Denied", and "Failed".
       *
       * An "Approved" condition is added via the /approval subresource,
       * indicating the request was approved and should be issued by the signer.
       *
       * A "Denied" condition is added via the /approval subresource,
       * indicating the request was denied and should not be issued by the signer.
       *
       * A "Failed" condition is added via the /status subresource,
       * indicating the signer failed to issue the certificate.
       *
       * Approved and Denied conditions are mutually exclusive.
       * Approved, Denied, and Failed conditions cannot be removed once added.
       *
       * Only one condition of a given type is allowed.
       * </pre>
       *
       * <code>optional string type = 1;</code>
       * @param value The bytes for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object status_ = "";
      /**
       * <pre>
       * status of the condition, one of True, False, Unknown.
       * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
       * </pre>
       *
       * <code>optional string status = 6;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * status of the condition, one of True, False, Unknown.
       * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
       * </pre>
       *
       * <code>optional string status = 6;</code>
       * @return The status.
       */
      public java.lang.String getStatus() {
        java.lang.Object ref = status_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            status_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * status of the condition, one of True, False, Unknown.
       * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
       * </pre>
       *
       * <code>optional string status = 6;</code>
       * @return The bytes for status.
       */
      public com.google.protobuf.ByteString
          getStatusBytes() {
        java.lang.Object ref = status_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          status_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * status of the condition, one of True, False, Unknown.
       * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
       * </pre>
       *
       * <code>optional string status = 6;</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        status_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status of the condition, one of True, False, Unknown.
       * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
       * </pre>
       *
       * <code>optional string status = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        status_ = getDefaultInstance().getStatus();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status of the condition, one of True, False, Unknown.
       * Approved, Denied, and Failed conditions may not be "False" or "Unknown".
       * </pre>
       *
       * <code>optional string status = 6;</code>
       * @param value The bytes for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        status_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object reason_ = "";
      /**
       * <pre>
       * reason indicates a brief reason for the request state
       * +optional
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       * @return Whether the reason field is set.
       */
      public boolean hasReason() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * reason indicates a brief reason for the request state
       * +optional
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       * @return The reason.
       */
      public java.lang.String getReason() {
        java.lang.Object ref = reason_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            reason_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * reason indicates a brief reason for the request state
       * +optional
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       * @return The bytes for reason.
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        java.lang.Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * reason indicates a brief reason for the request state
       * +optional
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       * @param value The reason to set.
       * @return This builder for chaining.
       */
      public Builder setReason(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        reason_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reason indicates a brief reason for the request state
       * +optional
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReason() {
        reason_ = getDefaultInstance().getReason();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * reason indicates a brief reason for the request state
       * +optional
       * </pre>
       *
       * <code>optional string reason = 2;</code>
       * @param value The bytes for reason to set.
       * @return This builder for chaining.
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        reason_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object message_ = "";
      /**
       * <pre>
       * message contains a human readable message with details about the request state
       * +optional
       * </pre>
       *
       * <code>optional string message = 3;</code>
       * @return Whether the message field is set.
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * message contains a human readable message with details about the request state
       * +optional
       * </pre>
       *
       * <code>optional string message = 3;</code>
       * @return The message.
       */
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            message_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * message contains a human readable message with details about the request state
       * +optional
       * </pre>
       *
       * <code>optional string message = 3;</code>
       * @return The bytes for message.
       */
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * message contains a human readable message with details about the request state
       * +optional
       * </pre>
       *
       * <code>optional string message = 3;</code>
       * @param value The message to set.
       * @return This builder for chaining.
       */
      public Builder setMessage(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * message contains a human readable message with details about the request state
       * +optional
       * </pre>
       *
       * <code>optional string message = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessage() {
        message_ = getDefaultInstance().getMessage();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * message contains a human readable message with details about the request state
       * +optional
       * </pre>
       *
       * <code>optional string message = 3;</code>
       * @param value The bytes for message to set.
       * @return This builder for chaining.
       */
      public Builder setMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        message_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.Meta.Time lastUpdateTime_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.Time, io.kubernetes.client.proto.Meta.Time.Builder, io.kubernetes.client.proto.Meta.TimeOrBuilder> lastUpdateTimeBuilder_;
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       * @return Whether the lastUpdateTime field is set.
       */
      public boolean hasLastUpdateTime() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       * @return The lastUpdateTime.
       */
      public io.kubernetes.client.proto.Meta.Time getLastUpdateTime() {
        if (lastUpdateTimeBuilder_ == null) {
          return lastUpdateTime_ == null ? io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastUpdateTime_;
        } else {
          return lastUpdateTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      public Builder setLastUpdateTime(io.kubernetes.client.proto.Meta.Time value) {
        if (lastUpdateTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastUpdateTime_ = value;
        } else {
          lastUpdateTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      public Builder setLastUpdateTime(
          io.kubernetes.client.proto.Meta.Time.Builder builderForValue) {
        if (lastUpdateTimeBuilder_ == null) {
          lastUpdateTime_ = builderForValue.build();
        } else {
          lastUpdateTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      public Builder mergeLastUpdateTime(io.kubernetes.client.proto.Meta.Time value) {
        if (lastUpdateTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            lastUpdateTime_ != null &&
            lastUpdateTime_ != io.kubernetes.client.proto.Meta.Time.getDefaultInstance()) {
            getLastUpdateTimeBuilder().mergeFrom(value);
          } else {
            lastUpdateTime_ = value;
          }
        } else {
          lastUpdateTimeBuilder_.mergeFrom(value);
        }
        if (lastUpdateTime_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      public Builder clearLastUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        lastUpdateTime_ = null;
        if (lastUpdateTimeBuilder_ != null) {
          lastUpdateTimeBuilder_.dispose();
          lastUpdateTimeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      public io.kubernetes.client.proto.Meta.Time.Builder getLastUpdateTimeBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getLastUpdateTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      public io.kubernetes.client.proto.Meta.TimeOrBuilder getLastUpdateTimeOrBuilder() {
        if (lastUpdateTimeBuilder_ != null) {
          return lastUpdateTimeBuilder_.getMessageOrBuilder();
        } else {
          return lastUpdateTime_ == null ?
              io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastUpdateTime_;
        }
      }
      /**
       * <pre>
       * lastUpdateTime is the time of the last update to this condition
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastUpdateTime = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.Time, io.kubernetes.client.proto.Meta.Time.Builder, io.kubernetes.client.proto.Meta.TimeOrBuilder> 
          getLastUpdateTimeFieldBuilder() {
        if (lastUpdateTimeBuilder_ == null) {
          lastUpdateTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.Time, io.kubernetes.client.proto.Meta.Time.Builder, io.kubernetes.client.proto.Meta.TimeOrBuilder>(
                  getLastUpdateTime(),
                  getParentForChildren(),
                  isClean());
          lastUpdateTime_ = null;
        }
        return lastUpdateTimeBuilder_;
      }

      private io.kubernetes.client.proto.Meta.Time lastTransitionTime_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.Time, io.kubernetes.client.proto.Meta.Time.Builder, io.kubernetes.client.proto.Meta.TimeOrBuilder> lastTransitionTimeBuilder_;
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       * @return Whether the lastTransitionTime field is set.
       */
      public boolean hasLastTransitionTime() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       * @return The lastTransitionTime.
       */
      public io.kubernetes.client.proto.Meta.Time getLastTransitionTime() {
        if (lastTransitionTimeBuilder_ == null) {
          return lastTransitionTime_ == null ? io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastTransitionTime_;
        } else {
          return lastTransitionTimeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      public Builder setLastTransitionTime(io.kubernetes.client.proto.Meta.Time value) {
        if (lastTransitionTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastTransitionTime_ = value;
        } else {
          lastTransitionTimeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      public Builder setLastTransitionTime(
          io.kubernetes.client.proto.Meta.Time.Builder builderForValue) {
        if (lastTransitionTimeBuilder_ == null) {
          lastTransitionTime_ = builderForValue.build();
        } else {
          lastTransitionTimeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      public Builder mergeLastTransitionTime(io.kubernetes.client.proto.Meta.Time value) {
        if (lastTransitionTimeBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            lastTransitionTime_ != null &&
            lastTransitionTime_ != io.kubernetes.client.proto.Meta.Time.getDefaultInstance()) {
            getLastTransitionTimeBuilder().mergeFrom(value);
          } else {
            lastTransitionTime_ = value;
          }
        } else {
          lastTransitionTimeBuilder_.mergeFrom(value);
        }
        if (lastTransitionTime_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      public Builder clearLastTransitionTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lastTransitionTime_ = null;
        if (lastTransitionTimeBuilder_ != null) {
          lastTransitionTimeBuilder_.dispose();
          lastTransitionTimeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      public io.kubernetes.client.proto.Meta.Time.Builder getLastTransitionTimeBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getLastTransitionTimeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      public io.kubernetes.client.proto.Meta.TimeOrBuilder getLastTransitionTimeOrBuilder() {
        if (lastTransitionTimeBuilder_ != null) {
          return lastTransitionTimeBuilder_.getMessageOrBuilder();
        } else {
          return lastTransitionTime_ == null ?
              io.kubernetes.client.proto.Meta.Time.getDefaultInstance() : lastTransitionTime_;
        }
      }
      /**
       * <pre>
       * lastTransitionTime is the time the condition last transitioned from one status to another.
       * If unset, when a new condition type is added or an existing condition's status is changed,
       * the server defaults this to the current time.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.Time lastTransitionTime = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.Time, io.kubernetes.client.proto.Meta.Time.Builder, io.kubernetes.client.proto.Meta.TimeOrBuilder> 
          getLastTransitionTimeFieldBuilder() {
        if (lastTransitionTimeBuilder_ == null) {
          lastTransitionTimeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.Time, io.kubernetes.client.proto.Meta.Time.Builder, io.kubernetes.client.proto.Meta.TimeOrBuilder>(
                  getLastTransitionTime(),
                  getParentForChildren(),
                  isClean());
          lastTransitionTime_ = null;
        }
        return lastTransitionTimeBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.certificates.v1.CertificateSigningRequestCondition)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.certificates.v1.CertificateSigningRequestCondition)
    private static final io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition();
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateSigningRequestCondition>
        PARSER = new com.google.protobuf.AbstractParser<CertificateSigningRequestCondition>() {
      @java.lang.Override
      public CertificateSigningRequestCondition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateSigningRequestCondition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateSigningRequestCondition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateSigningRequestListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.certificates.v1.CertificateSigningRequestList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ListMeta getMetadata();
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest> 
        getItemsList();
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest getItems(int index);
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    int getItemsCount();
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * CertificateSigningRequestList is a collection of CertificateSigningRequest objects
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestList}
   */
  public static final class CertificateSigningRequestList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.certificates.v1.CertificateSigningRequestList)
      CertificateSigningRequestListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateSigningRequestList.class.getName());
    }
    // Use CertificateSigningRequestList.newBuilder() to construct.
    private CertificateSigningRequestList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateSigningRequestList() {
      items_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ListMeta metadata_;
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest> items_;
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest> getItemsList() {
      return items_;
    }
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    @java.lang.Override
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest getItems(int index) {
      return items_.get(index);
    }
    /**
     * <pre>
     * items is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList other = (io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CertificateSigningRequestList is a collection of CertificateSigningRequest objects
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.certificates.v1.CertificateSigningRequestList)
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
        } else {
          items_ = null;
          itemsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList build() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList buildPartial() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList result = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList result) {
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList) {
          return mergeFrom((io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList other) {
        if (other == io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.parser(),
                        extensionRegistry);
                if (itemsBuilder_ == null) {
                  ensureItemsIsMutable();
                  items_.add(m);
                } else {
                  itemsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ListMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ListMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          items_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest>(items_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder> itemsBuilder_;

      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder addItems(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder addItems(
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.getDefaultInstance());
      }
      /**
       * <pre>
       * items is a collection of CertificateSigningRequest objects
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequest items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequest.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.certificates.v1.CertificateSigningRequestList)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.certificates.v1.CertificateSigningRequestList)
    private static final io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList();
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateSigningRequestList>
        PARSER = new com.google.protobuf.AbstractParser<CertificateSigningRequestList>() {
      @java.lang.Override
      public CertificateSigningRequestList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateSigningRequestList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateSigningRequestList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateSigningRequestSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.certificates.v1.CertificateSigningRequestSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
     * When serialized as JSON or YAML, the data is additionally base64-encoded.
     * +listType=atomic
     * </pre>
     *
     * <code>optional bytes request = 1;</code>
     * @return Whether the request field is set.
     */
    boolean hasRequest();
    /**
     * <pre>
     * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
     * When serialized as JSON or YAML, the data is additionally base64-encoded.
     * +listType=atomic
     * </pre>
     *
     * <code>optional bytes request = 1;</code>
     * @return The request.
     */
    com.google.protobuf.ByteString getRequest();

    /**
     * <pre>
     * signerName indicates the requested signer, and is a qualified name.
     *
     * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
     *
     * Well-known Kubernetes signers are:
     * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
     * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
     * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
     * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
     * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     *
     * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
     *
     * Custom signerNames can also be specified. The signer defines:
     * 1. Trust distribution: how trust (CA bundles) are distributed.
     * 2. Permitted subjects: and behavior when a disallowed subject is requested.
     * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
     * 4. Required, permitted, or forbidden key usages / extended key usages.
     * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
     * 6. Whether or not requests for CA certificates are allowed.
     * </pre>
     *
     * <code>optional string signerName = 7;</code>
     * @return Whether the signerName field is set.
     */
    boolean hasSignerName();
    /**
     * <pre>
     * signerName indicates the requested signer, and is a qualified name.
     *
     * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
     *
     * Well-known Kubernetes signers are:
     * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
     * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
     * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
     * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
     * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     *
     * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
     *
     * Custom signerNames can also be specified. The signer defines:
     * 1. Trust distribution: how trust (CA bundles) are distributed.
     * 2. Permitted subjects: and behavior when a disallowed subject is requested.
     * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
     * 4. Required, permitted, or forbidden key usages / extended key usages.
     * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
     * 6. Whether or not requests for CA certificates are allowed.
     * </pre>
     *
     * <code>optional string signerName = 7;</code>
     * @return The signerName.
     */
    java.lang.String getSignerName();
    /**
     * <pre>
     * signerName indicates the requested signer, and is a qualified name.
     *
     * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
     *
     * Well-known Kubernetes signers are:
     * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
     * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
     * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
     * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
     * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     *
     * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
     *
     * Custom signerNames can also be specified. The signer defines:
     * 1. Trust distribution: how trust (CA bundles) are distributed.
     * 2. Permitted subjects: and behavior when a disallowed subject is requested.
     * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
     * 4. Required, permitted, or forbidden key usages / extended key usages.
     * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
     * 6. Whether or not requests for CA certificates are allowed.
     * </pre>
     *
     * <code>optional string signerName = 7;</code>
     * @return The bytes for signerName.
     */
    com.google.protobuf.ByteString
        getSignerNameBytes();

    /**
     * <pre>
     * expirationSeconds is the requested duration of validity of the issued
     * certificate. The certificate signer may issue a certificate with a different
     * validity duration so a client must check the delta between the notBefore and
     * and notAfter fields in the issued certificate to determine the actual duration.
     *
     * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
     * honor this field as long as the requested duration is not greater than the
     * maximum duration they will honor per the --cluster-signing-duration CLI
     * flag to the Kubernetes controller manager.
     *
     * Certificate signers may not honor this field for various reasons:
     *
     * 1. Old signer that is unaware of the field (such as the in-tree
     * implementations prior to v1.22)
     * 2. Signer whose configured maximum is shorter than the requested duration
     * 3. Signer whose configured minimum is longer than the requested duration
     *
     * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
     *
     * +optional
     * </pre>
     *
     * <code>optional int32 expirationSeconds = 8;</code>
     * @return Whether the expirationSeconds field is set.
     */
    boolean hasExpirationSeconds();
    /**
     * <pre>
     * expirationSeconds is the requested duration of validity of the issued
     * certificate. The certificate signer may issue a certificate with a different
     * validity duration so a client must check the delta between the notBefore and
     * and notAfter fields in the issued certificate to determine the actual duration.
     *
     * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
     * honor this field as long as the requested duration is not greater than the
     * maximum duration they will honor per the --cluster-signing-duration CLI
     * flag to the Kubernetes controller manager.
     *
     * Certificate signers may not honor this field for various reasons:
     *
     * 1. Old signer that is unaware of the field (such as the in-tree
     * implementations prior to v1.22)
     * 2. Signer whose configured maximum is shorter than the requested duration
     * 3. Signer whose configured minimum is longer than the requested duration
     *
     * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
     *
     * +optional
     * </pre>
     *
     * <code>optional int32 expirationSeconds = 8;</code>
     * @return The expirationSeconds.
     */
    int getExpirationSeconds();

    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @return A list containing the usages.
     */
    java.util.List<java.lang.String>
        getUsagesList();
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @return The count of usages.
     */
    int getUsagesCount();
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @param index The index of the element to return.
     * @return The usages at the given index.
     */
    java.lang.String getUsages(int index);
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the usages at the given index.
     */
    com.google.protobuf.ByteString
        getUsagesBytes(int index);

    /**
     * <pre>
     * username contains the name of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string username = 2;</code>
     * @return Whether the username field is set.
     */
    boolean hasUsername();
    /**
     * <pre>
     * username contains the name of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string username = 2;</code>
     * @return The username.
     */
    java.lang.String getUsername();
    /**
     * <pre>
     * username contains the name of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string username = 2;</code>
     * @return The bytes for username.
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <pre>
     * uid contains the uid of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string uid = 3;</code>
     * @return Whether the uid field is set.
     */
    boolean hasUid();
    /**
     * <pre>
     * uid contains the uid of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string uid = 3;</code>
     * @return The uid.
     */
    java.lang.String getUid();
    /**
     * <pre>
     * uid contains the uid of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string uid = 3;</code>
     * @return The bytes for uid.
     */
    com.google.protobuf.ByteString
        getUidBytes();

    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @return A list containing the groups.
     */
    java.util.List<java.lang.String>
        getGroupsList();
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @return The count of groups.
     */
    int getGroupsCount();
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @param index The index of the element to return.
     * @return The groups at the given index.
     */
    java.lang.String getGroups(int index);
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the groups at the given index.
     */
    com.google.protobuf.ByteString
        getGroupsBytes(int index);

    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    int getExtraCount();
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    boolean containsExtra(
        java.lang.String key);
    /**
     * Use {@link #getExtraMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>
    getExtra();
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>
    getExtraMap();
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    /* nullable */
io.kubernetes.client.proto.V1Certificates.ExtraValue getExtraOrDefault(
        java.lang.String key,
        /* nullable */
io.kubernetes.client.proto.V1Certificates.ExtraValue defaultValue);
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    io.kubernetes.client.proto.V1Certificates.ExtraValue getExtraOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * CertificateSigningRequestSpec contains the certificate request.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestSpec}
   */
  public static final class CertificateSigningRequestSpec extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.certificates.v1.CertificateSigningRequestSpec)
      CertificateSigningRequestSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateSigningRequestSpec.class.getName());
    }
    // Use CertificateSigningRequestSpec.newBuilder() to construct.
    private CertificateSigningRequestSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateSigningRequestSpec() {
      request_ = com.google.protobuf.ByteString.EMPTY;
      signerName_ = "";
      usages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      username_ = "";
      uid_ = "";
      groups_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 6:
          return internalGetExtra();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder.class);
    }

    private int bitField0_;
    public static final int REQUEST_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString request_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
     * When serialized as JSON or YAML, the data is additionally base64-encoded.
     * +listType=atomic
     * </pre>
     *
     * <code>optional bytes request = 1;</code>
     * @return Whether the request field is set.
     */
    @java.lang.Override
    public boolean hasRequest() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
     * When serialized as JSON or YAML, the data is additionally base64-encoded.
     * +listType=atomic
     * </pre>
     *
     * <code>optional bytes request = 1;</code>
     * @return The request.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRequest() {
      return request_;
    }

    public static final int SIGNERNAME_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private volatile java.lang.Object signerName_ = "";
    /**
     * <pre>
     * signerName indicates the requested signer, and is a qualified name.
     *
     * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
     *
     * Well-known Kubernetes signers are:
     * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
     * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
     * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
     * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
     * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     *
     * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
     *
     * Custom signerNames can also be specified. The signer defines:
     * 1. Trust distribution: how trust (CA bundles) are distributed.
     * 2. Permitted subjects: and behavior when a disallowed subject is requested.
     * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
     * 4. Required, permitted, or forbidden key usages / extended key usages.
     * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
     * 6. Whether or not requests for CA certificates are allowed.
     * </pre>
     *
     * <code>optional string signerName = 7;</code>
     * @return Whether the signerName field is set.
     */
    @java.lang.Override
    public boolean hasSignerName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * signerName indicates the requested signer, and is a qualified name.
     *
     * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
     *
     * Well-known Kubernetes signers are:
     * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
     * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
     * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
     * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
     * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     *
     * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
     *
     * Custom signerNames can also be specified. The signer defines:
     * 1. Trust distribution: how trust (CA bundles) are distributed.
     * 2. Permitted subjects: and behavior when a disallowed subject is requested.
     * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
     * 4. Required, permitted, or forbidden key usages / extended key usages.
     * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
     * 6. Whether or not requests for CA certificates are allowed.
     * </pre>
     *
     * <code>optional string signerName = 7;</code>
     * @return The signerName.
     */
    @java.lang.Override
    public java.lang.String getSignerName() {
      java.lang.Object ref = signerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signerName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * signerName indicates the requested signer, and is a qualified name.
     *
     * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
     *
     * Well-known Kubernetes signers are:
     * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
     * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
     * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
     * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
     * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
     *
     * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
     *
     * Custom signerNames can also be specified. The signer defines:
     * 1. Trust distribution: how trust (CA bundles) are distributed.
     * 2. Permitted subjects: and behavior when a disallowed subject is requested.
     * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
     * 4. Required, permitted, or forbidden key usages / extended key usages.
     * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
     * 6. Whether or not requests for CA certificates are allowed.
     * </pre>
     *
     * <code>optional string signerName = 7;</code>
     * @return The bytes for signerName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSignerNameBytes() {
      java.lang.Object ref = signerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPIRATIONSECONDS_FIELD_NUMBER = 8;
    private int expirationSeconds_ = 0;
    /**
     * <pre>
     * expirationSeconds is the requested duration of validity of the issued
     * certificate. The certificate signer may issue a certificate with a different
     * validity duration so a client must check the delta between the notBefore and
     * and notAfter fields in the issued certificate to determine the actual duration.
     *
     * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
     * honor this field as long as the requested duration is not greater than the
     * maximum duration they will honor per the --cluster-signing-duration CLI
     * flag to the Kubernetes controller manager.
     *
     * Certificate signers may not honor this field for various reasons:
     *
     * 1. Old signer that is unaware of the field (such as the in-tree
     * implementations prior to v1.22)
     * 2. Signer whose configured maximum is shorter than the requested duration
     * 3. Signer whose configured minimum is longer than the requested duration
     *
     * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
     *
     * +optional
     * </pre>
     *
     * <code>optional int32 expirationSeconds = 8;</code>
     * @return Whether the expirationSeconds field is set.
     */
    @java.lang.Override
    public boolean hasExpirationSeconds() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * expirationSeconds is the requested duration of validity of the issued
     * certificate. The certificate signer may issue a certificate with a different
     * validity duration so a client must check the delta between the notBefore and
     * and notAfter fields in the issued certificate to determine the actual duration.
     *
     * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
     * honor this field as long as the requested duration is not greater than the
     * maximum duration they will honor per the --cluster-signing-duration CLI
     * flag to the Kubernetes controller manager.
     *
     * Certificate signers may not honor this field for various reasons:
     *
     * 1. Old signer that is unaware of the field (such as the in-tree
     * implementations prior to v1.22)
     * 2. Signer whose configured maximum is shorter than the requested duration
     * 3. Signer whose configured minimum is longer than the requested duration
     *
     * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
     *
     * +optional
     * </pre>
     *
     * <code>optional int32 expirationSeconds = 8;</code>
     * @return The expirationSeconds.
     */
    @java.lang.Override
    public int getExpirationSeconds() {
      return expirationSeconds_;
    }

    public static final int USAGES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList usages_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @return A list containing the usages.
     */
    public com.google.protobuf.ProtocolStringList
        getUsagesList() {
      return usages_;
    }
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @return The count of usages.
     */
    public int getUsagesCount() {
      return usages_.size();
    }
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @param index The index of the element to return.
     * @return The usages at the given index.
     */
    public java.lang.String getUsages(int index) {
      return usages_.get(index);
    }
    /**
     * <pre>
     * usages specifies a set of key usages requested in the issued certificate.
     *
     * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
     *
     * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
     *
     * Valid values are:
     * "signing", "digital signature", "content commitment",
     * "key encipherment", "key agreement", "data encipherment",
     * "cert sign", "crl sign", "encipher only", "decipher only", "any",
     * "server auth", "client auth",
     * "code signing", "email protection", "s/mime",
     * "ipsec end system", "ipsec tunnel", "ipsec user",
     * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string usages = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the usages at the given index.
     */
    public com.google.protobuf.ByteString
        getUsagesBytes(int index) {
      return usages_.getByteString(index);
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object username_ = "";
    /**
     * <pre>
     * username contains the name of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string username = 2;</code>
     * @return Whether the username field is set.
     */
    @java.lang.Override
    public boolean hasUsername() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * username contains the name of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string username = 2;</code>
     * @return The username.
     */
    @java.lang.Override
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          username_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * username contains the name of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string username = 2;</code>
     * @return The bytes for username.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int UID_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object uid_ = "";
    /**
     * <pre>
     * uid contains the uid of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string uid = 3;</code>
     * @return Whether the uid field is set.
     */
    @java.lang.Override
    public boolean hasUid() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * uid contains the uid of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string uid = 3;</code>
     * @return The uid.
     */
    @java.lang.Override
    public java.lang.String getUid() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uid_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * uid contains the uid of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>optional string uid = 3;</code>
     * @return The bytes for uid.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUidBytes() {
      java.lang.Object ref = uid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GROUPS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList groups_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @return A list containing the groups.
     */
    public com.google.protobuf.ProtocolStringList
        getGroupsList() {
      return groups_;
    }
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @return The count of groups.
     */
    public int getGroupsCount() {
      return groups_.size();
    }
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @param index The index of the element to return.
     * @return The groups at the given index.
     */
    public java.lang.String getGroups(int index) {
      return groups_.get(index);
    }
    /**
     * <pre>
     * groups contains group membership of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string groups = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the groups at the given index.
     */
    public com.google.protobuf.ByteString
        getGroupsBytes(int index) {
      return groups_.getByteString(index);
    }

    public static final int EXTRA_FIELD_NUMBER = 6;
    private static final class ExtraDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>newDefaultInstance(
                  io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_ExtraEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  io.kubernetes.client.proto.V1Certificates.ExtraValue.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> extra_;
    private com.google.protobuf.MapField<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>
    internalGetExtra() {
      if (extra_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExtraDefaultEntryHolder.defaultEntry);
      }
      return extra_;
    }
    public int getExtraCount() {
      return internalGetExtra().getMap().size();
    }
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    @java.lang.Override
    public boolean containsExtra(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetExtra().getMap().containsKey(key);
    }
    /**
     * Use {@link #getExtraMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> getExtra() {
      return getExtraMap();
    }
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> getExtraMap() {
      return internalGetExtra().getMap();
    }
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    @java.lang.Override
    public /* nullable */
io.kubernetes.client.proto.V1Certificates.ExtraValue getExtraOrDefault(
        java.lang.String key,
        /* nullable */
io.kubernetes.client.proto.V1Certificates.ExtraValue defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> map =
          internalGetExtra().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * extra contains extra attributes of the user that created the CertificateSigningRequest.
     * Populated by the API server on creation and immutable.
     * +optional
     * </pre>
     *
     * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.ExtraValue getExtraOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> map =
          internalGetExtra().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(1, request_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, username_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, uid_);
      }
      for (int i = 0; i < groups_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, groups_.getRaw(i));
      }
      for (int i = 0; i < usages_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, usages_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetExtra(),
          ExtraDefaultEntryHolder.defaultEntry,
          6);
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, signerName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(8, expirationSeconds_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, request_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, username_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, uid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < groups_.size(); i++) {
          dataSize += computeStringSizeNoTag(groups_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getGroupsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < usages_.size(); i++) {
          dataSize += computeStringSizeNoTag(usages_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getUsagesList().size();
      }
      for (java.util.Map.Entry<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> entry
           : internalGetExtra().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>
        extra__ = ExtraDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, extra__);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, signerName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, expirationSeconds_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec other = (io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec) obj;

      if (hasRequest() != other.hasRequest()) return false;
      if (hasRequest()) {
        if (!getRequest()
            .equals(other.getRequest())) return false;
      }
      if (hasSignerName() != other.hasSignerName()) return false;
      if (hasSignerName()) {
        if (!getSignerName()
            .equals(other.getSignerName())) return false;
      }
      if (hasExpirationSeconds() != other.hasExpirationSeconds()) return false;
      if (hasExpirationSeconds()) {
        if (getExpirationSeconds()
            != other.getExpirationSeconds()) return false;
      }
      if (!getUsagesList()
          .equals(other.getUsagesList())) return false;
      if (hasUsername() != other.hasUsername()) return false;
      if (hasUsername()) {
        if (!getUsername()
            .equals(other.getUsername())) return false;
      }
      if (hasUid() != other.hasUid()) return false;
      if (hasUid()) {
        if (!getUid()
            .equals(other.getUid())) return false;
      }
      if (!getGroupsList()
          .equals(other.getGroupsList())) return false;
      if (!internalGetExtra().equals(
          other.internalGetExtra())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasSignerName()) {
        hash = (37 * hash) + SIGNERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getSignerName().hashCode();
      }
      if (hasExpirationSeconds()) {
        hash = (37 * hash) + EXPIRATIONSECONDS_FIELD_NUMBER;
        hash = (53 * hash) + getExpirationSeconds();
      }
      if (getUsagesCount() > 0) {
        hash = (37 * hash) + USAGES_FIELD_NUMBER;
        hash = (53 * hash) + getUsagesList().hashCode();
      }
      if (hasUsername()) {
        hash = (37 * hash) + USERNAME_FIELD_NUMBER;
        hash = (53 * hash) + getUsername().hashCode();
      }
      if (hasUid()) {
        hash = (37 * hash) + UID_FIELD_NUMBER;
        hash = (53 * hash) + getUid().hashCode();
      }
      if (getGroupsCount() > 0) {
        hash = (37 * hash) + GROUPS_FIELD_NUMBER;
        hash = (53 * hash) + getGroupsList().hashCode();
      }
      if (!internalGetExtra().getMap().isEmpty()) {
        hash = (37 * hash) + EXTRA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetExtra().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CertificateSigningRequestSpec contains the certificate request.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.certificates.v1.CertificateSigningRequestSpec)
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 6:
            return internalGetExtra();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 6:
            return internalGetMutableExtra();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        request_ = com.google.protobuf.ByteString.EMPTY;
        signerName_ = "";
        expirationSeconds_ = 0;
        usages_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        username_ = "";
        uid_ = "";
        groups_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        internalGetMutableExtra().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec build() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec buildPartial() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec result = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.request_ = request_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.signerName_ = signerName_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.expirationSeconds_ = expirationSeconds_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          usages_.makeImmutable();
          result.usages_ = usages_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.username_ = username_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.uid_ = uid_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          groups_.makeImmutable();
          result.groups_ = groups_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.extra_ = internalGetExtra().build(ExtraDefaultEntryHolder.defaultEntry);
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec) {
          return mergeFrom((io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec other) {
        if (other == io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec.getDefaultInstance()) return this;
        if (other.hasRequest()) {
          setRequest(other.getRequest());
        }
        if (other.hasSignerName()) {
          signerName_ = other.signerName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasExpirationSeconds()) {
          setExpirationSeconds(other.getExpirationSeconds());
        }
        if (!other.usages_.isEmpty()) {
          if (usages_.isEmpty()) {
            usages_ = other.usages_;
            bitField0_ |= 0x00000008;
          } else {
            ensureUsagesIsMutable();
            usages_.addAll(other.usages_);
          }
          onChanged();
        }
        if (other.hasUsername()) {
          username_ = other.username_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasUid()) {
          uid_ = other.uid_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (!other.groups_.isEmpty()) {
          if (groups_.isEmpty()) {
            groups_ = other.groups_;
            bitField0_ |= 0x00000040;
          } else {
            ensureGroupsIsMutable();
            groups_.addAll(other.groups_);
          }
          onChanged();
        }
        internalGetMutableExtra().mergeFrom(
            other.internalGetExtra());
        bitField0_ |= 0x00000080;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                request_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                username_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 18
              case 26: {
                uid_ = input.readBytes();
                bitField0_ |= 0x00000020;
                break;
              } // case 26
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureGroupsIsMutable();
                groups_.add(bs);
                break;
              } // case 34
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureUsagesIsMutable();
                usages_.add(bs);
                break;
              } // case 42
              case 50: {
                com.google.protobuf.MapEntry<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>
                extra__ = input.readMessage(
                    ExtraDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableExtra().ensureBuilderMap().put(
                    extra__.getKey(), extra__.getValue());
                bitField0_ |= 0x00000080;
                break;
              } // case 50
              case 58: {
                signerName_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 58
              case 64: {
                expirationSeconds_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString request_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
       * When serialized as JSON or YAML, the data is additionally base64-encoded.
       * +listType=atomic
       * </pre>
       *
       * <code>optional bytes request = 1;</code>
       * @return Whether the request field is set.
       */
      @java.lang.Override
      public boolean hasRequest() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
       * When serialized as JSON or YAML, the data is additionally base64-encoded.
       * +listType=atomic
       * </pre>
       *
       * <code>optional bytes request = 1;</code>
       * @return The request.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRequest() {
        return request_;
      }
      /**
       * <pre>
       * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
       * When serialized as JSON or YAML, the data is additionally base64-encoded.
       * +listType=atomic
       * </pre>
       *
       * <code>optional bytes request = 1;</code>
       * @param value The request to set.
       * @return This builder for chaining.
       */
      public Builder setRequest(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        request_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * request contains an x509 certificate signing request encoded in a "CERTIFICATE REQUEST" PEM block.
       * When serialized as JSON or YAML, the data is additionally base64-encoded.
       * +listType=atomic
       * </pre>
       *
       * <code>optional bytes request = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequest() {
        bitField0_ = (bitField0_ & ~0x00000001);
        request_ = getDefaultInstance().getRequest();
        onChanged();
        return this;
      }

      private java.lang.Object signerName_ = "";
      /**
       * <pre>
       * signerName indicates the requested signer, and is a qualified name.
       *
       * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
       *
       * Well-known Kubernetes signers are:
       * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
       * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
       * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
       * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
       * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       *
       * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
       *
       * Custom signerNames can also be specified. The signer defines:
       * 1. Trust distribution: how trust (CA bundles) are distributed.
       * 2. Permitted subjects: and behavior when a disallowed subject is requested.
       * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
       * 4. Required, permitted, or forbidden key usages / extended key usages.
       * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
       * 6. Whether or not requests for CA certificates are allowed.
       * </pre>
       *
       * <code>optional string signerName = 7;</code>
       * @return Whether the signerName field is set.
       */
      public boolean hasSignerName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * signerName indicates the requested signer, and is a qualified name.
       *
       * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
       *
       * Well-known Kubernetes signers are:
       * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
       * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
       * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
       * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
       * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       *
       * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
       *
       * Custom signerNames can also be specified. The signer defines:
       * 1. Trust distribution: how trust (CA bundles) are distributed.
       * 2. Permitted subjects: and behavior when a disallowed subject is requested.
       * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
       * 4. Required, permitted, or forbidden key usages / extended key usages.
       * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
       * 6. Whether or not requests for CA certificates are allowed.
       * </pre>
       *
       * <code>optional string signerName = 7;</code>
       * @return The signerName.
       */
      public java.lang.String getSignerName() {
        java.lang.Object ref = signerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            signerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * signerName indicates the requested signer, and is a qualified name.
       *
       * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
       *
       * Well-known Kubernetes signers are:
       * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
       * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
       * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
       * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
       * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       *
       * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
       *
       * Custom signerNames can also be specified. The signer defines:
       * 1. Trust distribution: how trust (CA bundles) are distributed.
       * 2. Permitted subjects: and behavior when a disallowed subject is requested.
       * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
       * 4. Required, permitted, or forbidden key usages / extended key usages.
       * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
       * 6. Whether or not requests for CA certificates are allowed.
       * </pre>
       *
       * <code>optional string signerName = 7;</code>
       * @return The bytes for signerName.
       */
      public com.google.protobuf.ByteString
          getSignerNameBytes() {
        java.lang.Object ref = signerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * signerName indicates the requested signer, and is a qualified name.
       *
       * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
       *
       * Well-known Kubernetes signers are:
       * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
       * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
       * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
       * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
       * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       *
       * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
       *
       * Custom signerNames can also be specified. The signer defines:
       * 1. Trust distribution: how trust (CA bundles) are distributed.
       * 2. Permitted subjects: and behavior when a disallowed subject is requested.
       * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
       * 4. Required, permitted, or forbidden key usages / extended key usages.
       * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
       * 6. Whether or not requests for CA certificates are allowed.
       * </pre>
       *
       * <code>optional string signerName = 7;</code>
       * @param value The signerName to set.
       * @return This builder for chaining.
       */
      public Builder setSignerName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        signerName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signerName indicates the requested signer, and is a qualified name.
       *
       * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
       *
       * Well-known Kubernetes signers are:
       * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
       * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
       * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
       * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
       * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       *
       * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
       *
       * Custom signerNames can also be specified. The signer defines:
       * 1. Trust distribution: how trust (CA bundles) are distributed.
       * 2. Permitted subjects: and behavior when a disallowed subject is requested.
       * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
       * 4. Required, permitted, or forbidden key usages / extended key usages.
       * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
       * 6. Whether or not requests for CA certificates are allowed.
       * </pre>
       *
       * <code>optional string signerName = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignerName() {
        signerName_ = getDefaultInstance().getSignerName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * signerName indicates the requested signer, and is a qualified name.
       *
       * List/watch requests for CertificateSigningRequests can filter on this field using a "spec.signerName=NAME" fieldSelector.
       *
       * Well-known Kubernetes signers are:
       * 1. "kubernetes.io/kube-apiserver-client": issues client certificates that can be used to authenticate to kube-apiserver.
       * Requests for this signer are never auto-approved by kube-controller-manager, can be issued by the "csrsigning" controller in kube-controller-manager.
       * 2. "kubernetes.io/kube-apiserver-client-kubelet": issues client certificates that kubelets use to authenticate to kube-apiserver.
       * Requests for this signer can be auto-approved by the "csrapproving" controller in kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       * 3. "kubernetes.io/kubelet-serving" issues serving certificates that kubelets use to serve TLS endpoints, which kube-apiserver can connect to securely.
       * Requests for this signer are never auto-approved by kube-controller-manager, and can be issued by the "csrsigning" controller in kube-controller-manager.
       *
       * More details are available at https://k8s.io/docs/reference/access-authn-authz/certificate-signing-requests/#kubernetes-signers
       *
       * Custom signerNames can also be specified. The signer defines:
       * 1. Trust distribution: how trust (CA bundles) are distributed.
       * 2. Permitted subjects: and behavior when a disallowed subject is requested.
       * 3. Required, permitted, or forbidden x509 extensions in the request (including whether subjectAltNames are allowed, which types, restrictions on allowed values) and behavior when a disallowed extension is requested.
       * 4. Required, permitted, or forbidden key usages / extended key usages.
       * 5. Expiration/certificate lifetime: whether it is fixed by the signer, configurable by the admin.
       * 6. Whether or not requests for CA certificates are allowed.
       * </pre>
       *
       * <code>optional string signerName = 7;</code>
       * @param value The bytes for signerName to set.
       * @return This builder for chaining.
       */
      public Builder setSignerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        signerName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int expirationSeconds_ ;
      /**
       * <pre>
       * expirationSeconds is the requested duration of validity of the issued
       * certificate. The certificate signer may issue a certificate with a different
       * validity duration so a client must check the delta between the notBefore and
       * and notAfter fields in the issued certificate to determine the actual duration.
       *
       * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
       * honor this field as long as the requested duration is not greater than the
       * maximum duration they will honor per the --cluster-signing-duration CLI
       * flag to the Kubernetes controller manager.
       *
       * Certificate signers may not honor this field for various reasons:
       *
       * 1. Old signer that is unaware of the field (such as the in-tree
       * implementations prior to v1.22)
       * 2. Signer whose configured maximum is shorter than the requested duration
       * 3. Signer whose configured minimum is longer than the requested duration
       *
       * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
       *
       * +optional
       * </pre>
       *
       * <code>optional int32 expirationSeconds = 8;</code>
       * @return Whether the expirationSeconds field is set.
       */
      @java.lang.Override
      public boolean hasExpirationSeconds() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * expirationSeconds is the requested duration of validity of the issued
       * certificate. The certificate signer may issue a certificate with a different
       * validity duration so a client must check the delta between the notBefore and
       * and notAfter fields in the issued certificate to determine the actual duration.
       *
       * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
       * honor this field as long as the requested duration is not greater than the
       * maximum duration they will honor per the --cluster-signing-duration CLI
       * flag to the Kubernetes controller manager.
       *
       * Certificate signers may not honor this field for various reasons:
       *
       * 1. Old signer that is unaware of the field (such as the in-tree
       * implementations prior to v1.22)
       * 2. Signer whose configured maximum is shorter than the requested duration
       * 3. Signer whose configured minimum is longer than the requested duration
       *
       * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
       *
       * +optional
       * </pre>
       *
       * <code>optional int32 expirationSeconds = 8;</code>
       * @return The expirationSeconds.
       */
      @java.lang.Override
      public int getExpirationSeconds() {
        return expirationSeconds_;
      }
      /**
       * <pre>
       * expirationSeconds is the requested duration of validity of the issued
       * certificate. The certificate signer may issue a certificate with a different
       * validity duration so a client must check the delta between the notBefore and
       * and notAfter fields in the issued certificate to determine the actual duration.
       *
       * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
       * honor this field as long as the requested duration is not greater than the
       * maximum duration they will honor per the --cluster-signing-duration CLI
       * flag to the Kubernetes controller manager.
       *
       * Certificate signers may not honor this field for various reasons:
       *
       * 1. Old signer that is unaware of the field (such as the in-tree
       * implementations prior to v1.22)
       * 2. Signer whose configured maximum is shorter than the requested duration
       * 3. Signer whose configured minimum is longer than the requested duration
       *
       * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
       *
       * +optional
       * </pre>
       *
       * <code>optional int32 expirationSeconds = 8;</code>
       * @param value The expirationSeconds to set.
       * @return This builder for chaining.
       */
      public Builder setExpirationSeconds(int value) {

        expirationSeconds_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * expirationSeconds is the requested duration of validity of the issued
       * certificate. The certificate signer may issue a certificate with a different
       * validity duration so a client must check the delta between the notBefore and
       * and notAfter fields in the issued certificate to determine the actual duration.
       *
       * The v1.22+ in-tree implementations of the well-known Kubernetes signers will
       * honor this field as long as the requested duration is not greater than the
       * maximum duration they will honor per the --cluster-signing-duration CLI
       * flag to the Kubernetes controller manager.
       *
       * Certificate signers may not honor this field for various reasons:
       *
       * 1. Old signer that is unaware of the field (such as the in-tree
       * implementations prior to v1.22)
       * 2. Signer whose configured maximum is shorter than the requested duration
       * 3. Signer whose configured minimum is longer than the requested duration
       *
       * The minimum valid value for expirationSeconds is 600, i.e. 10 minutes.
       *
       * +optional
       * </pre>
       *
       * <code>optional int32 expirationSeconds = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearExpirationSeconds() {
        bitField0_ = (bitField0_ & ~0x00000004);
        expirationSeconds_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList usages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureUsagesIsMutable() {
        if (!usages_.isModifiable()) {
          usages_ = new com.google.protobuf.LazyStringArrayList(usages_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @return A list containing the usages.
       */
      public com.google.protobuf.ProtocolStringList
          getUsagesList() {
        usages_.makeImmutable();
        return usages_;
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @return The count of usages.
       */
      public int getUsagesCount() {
        return usages_.size();
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @param index The index of the element to return.
       * @return The usages at the given index.
       */
      public java.lang.String getUsages(int index) {
        return usages_.get(index);
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the usages at the given index.
       */
      public com.google.protobuf.ByteString
          getUsagesBytes(int index) {
        return usages_.getByteString(index);
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @param index The index to set the value at.
       * @param value The usages to set.
       * @return This builder for chaining.
       */
      public Builder setUsages(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureUsagesIsMutable();
        usages_.set(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @param value The usages to add.
       * @return This builder for chaining.
       */
      public Builder addUsages(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureUsagesIsMutable();
        usages_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @param values The usages to add.
       * @return This builder for chaining.
       */
      public Builder addAllUsages(
          java.lang.Iterable<java.lang.String> values) {
        ensureUsagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, usages_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsages() {
        usages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * usages specifies a set of key usages requested in the issued certificate.
       *
       * Requests for TLS client certificates typically request: "digital signature", "key encipherment", "client auth".
       *
       * Requests for TLS serving certificates typically request: "key encipherment", "digital signature", "server auth".
       *
       * Valid values are:
       * "signing", "digital signature", "content commitment",
       * "key encipherment", "key agreement", "data encipherment",
       * "cert sign", "crl sign", "encipher only", "decipher only", "any",
       * "server auth", "client auth",
       * "code signing", "email protection", "s/mime",
       * "ipsec end system", "ipsec tunnel", "ipsec user",
       * "timestamping", "ocsp signing", "microsoft sgc", "netscape sgc"
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string usages = 5;</code>
       * @param value The bytes of the usages to add.
       * @return This builder for chaining.
       */
      public Builder addUsagesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureUsagesIsMutable();
        usages_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object username_ = "";
      /**
       * <pre>
       * username contains the name of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string username = 2;</code>
       * @return Whether the username field is set.
       */
      public boolean hasUsername() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * username contains the name of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string username = 2;</code>
       * @return The username.
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            username_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * username contains the name of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string username = 2;</code>
       * @return The bytes for username.
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * username contains the name of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string username = 2;</code>
       * @param value The username to set.
       * @return This builder for chaining.
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        username_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * username contains the name of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string username = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsername() {
        username_ = getDefaultInstance().getUsername();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * username contains the name of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string username = 2;</code>
       * @param value The bytes for username to set.
       * @return This builder for chaining.
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        username_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.lang.Object uid_ = "";
      /**
       * <pre>
       * uid contains the uid of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string uid = 3;</code>
       * @return Whether the uid field is set.
       */
      public boolean hasUid() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * uid contains the uid of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string uid = 3;</code>
       * @return The uid.
       */
      public java.lang.String getUid() {
        java.lang.Object ref = uid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            uid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * uid contains the uid of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string uid = 3;</code>
       * @return The bytes for uid.
       */
      public com.google.protobuf.ByteString
          getUidBytes() {
        java.lang.Object ref = uid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * uid contains the uid of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string uid = 3;</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        uid_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uid contains the uid of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string uid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        uid_ = getDefaultInstance().getUid();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * uid contains the uid of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>optional string uid = 3;</code>
       * @param value The bytes for uid to set.
       * @return This builder for chaining.
       */
      public Builder setUidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        uid_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList groups_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureGroupsIsMutable() {
        if (!groups_.isModifiable()) {
          groups_ = new com.google.protobuf.LazyStringArrayList(groups_);
        }
        bitField0_ |= 0x00000040;
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @return A list containing the groups.
       */
      public com.google.protobuf.ProtocolStringList
          getGroupsList() {
        groups_.makeImmutable();
        return groups_;
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @return The count of groups.
       */
      public int getGroupsCount() {
        return groups_.size();
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @param index The index of the element to return.
       * @return The groups at the given index.
       */
      public java.lang.String getGroups(int index) {
        return groups_.get(index);
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the groups at the given index.
       */
      public com.google.protobuf.ByteString
          getGroupsBytes(int index) {
        return groups_.getByteString(index);
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @param index The index to set the value at.
       * @param value The groups to set.
       * @return This builder for chaining.
       */
      public Builder setGroups(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureGroupsIsMutable();
        groups_.set(index, value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @param value The groups to add.
       * @return This builder for chaining.
       */
      public Builder addGroups(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureGroupsIsMutable();
        groups_.add(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @param values The groups to add.
       * @return This builder for chaining.
       */
      public Builder addAllGroups(
          java.lang.Iterable<java.lang.String> values) {
        ensureGroupsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, groups_);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroups() {
        groups_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * groups contains group membership of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string groups = 4;</code>
       * @param value The bytes of the groups to add.
       * @return This builder for chaining.
       */
      public Builder addGroupsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureGroupsIsMutable();
        groups_.add(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }

      private static final class ExtraConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder, io.kubernetes.client.proto.V1Certificates.ExtraValue> {
        @java.lang.Override
        public io.kubernetes.client.proto.V1Certificates.ExtraValue build(io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder val) {
          if (val instanceof io.kubernetes.client.proto.V1Certificates.ExtraValue) { return (io.kubernetes.client.proto.V1Certificates.ExtraValue) val; }
          return ((io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> defaultEntry() {
          return ExtraDefaultEntryHolder.defaultEntry;
        }
      };
      private static final ExtraConverter extraConverter = new ExtraConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder, io.kubernetes.client.proto.V1Certificates.ExtraValue, io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder> extra_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder, io.kubernetes.client.proto.V1Certificates.ExtraValue, io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder>
          internalGetExtra() {
        if (extra_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(extraConverter);
        }
        return extra_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder, io.kubernetes.client.proto.V1Certificates.ExtraValue, io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder>
          internalGetMutableExtra() {
        if (extra_ == null) {
          extra_ = new com.google.protobuf.MapFieldBuilder<>(extraConverter);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return extra_;
      }
      public int getExtraCount() {
        return internalGetExtra().ensureBuilderMap().size();
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      @java.lang.Override
      public boolean containsExtra(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetExtra().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getExtraMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> getExtra() {
        return getExtraMap();
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> getExtraMap() {
        return internalGetExtra().getImmutableMap();
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      @java.lang.Override
      public /* nullable */
io.kubernetes.client.proto.V1Certificates.ExtraValue getExtraOrDefault(
          java.lang.String key,
          /* nullable */
io.kubernetes.client.proto.V1Certificates.ExtraValue defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder> map = internalGetMutableExtra().ensureBuilderMap();
        return map.containsKey(key) ? extraConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.ExtraValue getExtraOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder> map = internalGetMutableExtra().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return extraConverter.build(map.get(key));
      }
      public Builder clearExtra() {
        bitField0_ = (bitField0_ & ~0x00000080);
        internalGetMutableExtra().clear();
        return this;
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      public Builder removeExtra(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableExtra().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue>
          getMutableExtra() {
        bitField0_ |= 0x00000080;
        return internalGetMutableExtra().ensureMessageMap();
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      public Builder putExtra(
          java.lang.String key,
          io.kubernetes.client.proto.V1Certificates.ExtraValue value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableExtra().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      public Builder putAllExtra(
          java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> values) {
        for (java.util.Map.Entry<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValue> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableExtra().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <pre>
       * extra contains extra attributes of the user that created the CertificateSigningRequest.
       * Populated by the API server on creation and immutable.
       * +optional
       * </pre>
       *
       * <code>map&lt;string, .k8s.io.api.certificates.v1.ExtraValue&gt; extra = 6;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder putExtraBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder> builderMap = internalGetMutableExtra().ensureBuilderMap();
        io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = io.kubernetes.client.proto.V1Certificates.ExtraValue.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof io.kubernetes.client.proto.V1Certificates.ExtraValue) {
          entry = ((io.kubernetes.client.proto.V1Certificates.ExtraValue) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder) entry;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.certificates.v1.CertificateSigningRequestSpec)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.certificates.v1.CertificateSigningRequestSpec)
    private static final io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec();
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateSigningRequestSpec>
        PARSER = new com.google.protobuf.AbstractParser<CertificateSigningRequestSpec>() {
      @java.lang.Override
      public CertificateSigningRequestSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateSigningRequestSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateSigningRequestSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CertificateSigningRequestStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.certificates.v1.CertificateSigningRequestStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition> 
        getConditionsList();
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition getConditions(int index);
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    int getConditionsCount();
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder> 
        getConditionsOrBuilderList();
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder getConditionsOrBuilder(
        int index);

    /**
     * <pre>
     * certificate is populated with an issued certificate by the signer after an Approved condition is present.
     * This field is set via the /status subresource. Once populated, this field is immutable.
     *
     * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
     * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
     *
     * Validation requirements:
     * 1. certificate must contain one or more PEM blocks.
     * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
     * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
     * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
     * to allow for explanatory text as described in section 5.2 of RFC7468.
     *
     * If more than one PEM block is present, and the definition of the requested spec.signerName
     * does not indicate otherwise, the first block is the issued certificate,
     * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
     *
     * The certificate is encoded in PEM format.
     *
     * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
     *
     * base64(
     * -----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * )
     *
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>optional bytes certificate = 2;</code>
     * @return Whether the certificate field is set.
     */
    boolean hasCertificate();
    /**
     * <pre>
     * certificate is populated with an issued certificate by the signer after an Approved condition is present.
     * This field is set via the /status subresource. Once populated, this field is immutable.
     *
     * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
     * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
     *
     * Validation requirements:
     * 1. certificate must contain one or more PEM blocks.
     * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
     * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
     * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
     * to allow for explanatory text as described in section 5.2 of RFC7468.
     *
     * If more than one PEM block is present, and the definition of the requested spec.signerName
     * does not indicate otherwise, the first block is the issued certificate,
     * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
     *
     * The certificate is encoded in PEM format.
     *
     * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
     *
     * base64(
     * -----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * )
     *
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>optional bytes certificate = 2;</code>
     * @return The certificate.
     */
    com.google.protobuf.ByteString getCertificate();
  }
  /**
   * <pre>
   * CertificateSigningRequestStatus contains conditions used to indicate
   * approved/denied/failed status of the request, and the issued certificate.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestStatus}
   */
  public static final class CertificateSigningRequestStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.certificates.v1.CertificateSigningRequestStatus)
      CertificateSigningRequestStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        CertificateSigningRequestStatus.class.getName());
    }
    // Use CertificateSigningRequestStatus.newBuilder() to construct.
    private CertificateSigningRequestStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CertificateSigningRequestStatus() {
      conditions_ = java.util.Collections.emptyList();
      certificate_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder.class);
    }

    private int bitField0_;
    public static final int CONDITIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition> conditions_;
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition> getConditionsList() {
      return conditions_;
    }
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder> 
        getConditionsOrBuilderList() {
      return conditions_;
    }
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    @java.lang.Override
    public int getConditionsCount() {
      return conditions_.size();
    }
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition getConditions(int index) {
      return conditions_.get(index);
    }
    /**
     * <pre>
     * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
     * +listType=map
     * +listMapKey=type
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder getConditionsOrBuilder(
        int index) {
      return conditions_.get(index);
    }

    public static final int CERTIFICATE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString certificate_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * certificate is populated with an issued certificate by the signer after an Approved condition is present.
     * This field is set via the /status subresource. Once populated, this field is immutable.
     *
     * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
     * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
     *
     * Validation requirements:
     * 1. certificate must contain one or more PEM blocks.
     * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
     * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
     * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
     * to allow for explanatory text as described in section 5.2 of RFC7468.
     *
     * If more than one PEM block is present, and the definition of the requested spec.signerName
     * does not indicate otherwise, the first block is the issued certificate,
     * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
     *
     * The certificate is encoded in PEM format.
     *
     * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
     *
     * base64(
     * -----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * )
     *
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>optional bytes certificate = 2;</code>
     * @return Whether the certificate field is set.
     */
    @java.lang.Override
    public boolean hasCertificate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * certificate is populated with an issued certificate by the signer after an Approved condition is present.
     * This field is set via the /status subresource. Once populated, this field is immutable.
     *
     * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
     * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
     *
     * Validation requirements:
     * 1. certificate must contain one or more PEM blocks.
     * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
     * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
     * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
     * to allow for explanatory text as described in section 5.2 of RFC7468.
     *
     * If more than one PEM block is present, and the definition of the requested spec.signerName
     * does not indicate otherwise, the first block is the issued certificate,
     * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
     *
     * The certificate is encoded in PEM format.
     *
     * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
     *
     * base64(
     * -----BEGIN CERTIFICATE-----
     * ...
     * -----END CERTIFICATE-----
     * )
     *
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>optional bytes certificate = 2;</code>
     * @return The certificate.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCertificate() {
      return certificate_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < conditions_.size(); i++) {
        output.writeMessage(1, conditions_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBytes(2, certificate_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < conditions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, conditions_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, certificate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus other = (io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus) obj;

      if (!getConditionsList()
          .equals(other.getConditionsList())) return false;
      if (hasCertificate() != other.hasCertificate()) return false;
      if (hasCertificate()) {
        if (!getCertificate()
            .equals(other.getCertificate())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getConditionsCount() > 0) {
        hash = (37 * hash) + CONDITIONS_FIELD_NUMBER;
        hash = (53 * hash) + getConditionsList().hashCode();
      }
      if (hasCertificate()) {
        hash = (37 * hash) + CERTIFICATE_FIELD_NUMBER;
        hash = (53 * hash) + getCertificate().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CertificateSigningRequestStatus contains conditions used to indicate
     * approved/denied/failed status of the request, and the issued certificate.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.certificates.v1.CertificateSigningRequestStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.certificates.v1.CertificateSigningRequestStatus)
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.class, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (conditionsBuilder_ == null) {
          conditions_ = java.util.Collections.emptyList();
        } else {
          conditions_ = null;
          conditionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        certificate_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus build() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus buildPartial() {
        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus result = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus result) {
        if (conditionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            conditions_ = java.util.Collections.unmodifiableList(conditions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.conditions_ = conditions_;
        } else {
          result.conditions_ = conditionsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.certificate_ = certificate_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus) {
          return mergeFrom((io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus other) {
        if (other == io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus.getDefaultInstance()) return this;
        if (conditionsBuilder_ == null) {
          if (!other.conditions_.isEmpty()) {
            if (conditions_.isEmpty()) {
              conditions_ = other.conditions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureConditionsIsMutable();
              conditions_.addAll(other.conditions_);
            }
            onChanged();
          }
        } else {
          if (!other.conditions_.isEmpty()) {
            if (conditionsBuilder_.isEmpty()) {
              conditionsBuilder_.dispose();
              conditionsBuilder_ = null;
              conditions_ = other.conditions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              conditionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getConditionsFieldBuilder() : null;
            } else {
              conditionsBuilder_.addAllMessages(other.conditions_);
            }
          }
        }
        if (other.hasCertificate()) {
          setCertificate(other.getCertificate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.parser(),
                        extensionRegistry);
                if (conditionsBuilder_ == null) {
                  ensureConditionsIsMutable();
                  conditions_.add(m);
                } else {
                  conditionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                certificate_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition> conditions_ =
        java.util.Collections.emptyList();
      private void ensureConditionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          conditions_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition>(conditions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder> conditionsBuilder_;

      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition> getConditionsList() {
        if (conditionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(conditions_);
        } else {
          return conditionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public int getConditionsCount() {
        if (conditionsBuilder_ == null) {
          return conditions_.size();
        } else {
          return conditionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition getConditions(int index) {
        if (conditionsBuilder_ == null) {
          return conditions_.get(index);
        } else {
          return conditionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder setConditions(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.set(index, value);
          onChanged();
        } else {
          conditionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder setConditions(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.set(index, builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder addConditions(io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.add(value);
          onChanged();
        } else {
          conditionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder addConditions(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition value) {
        if (conditionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureConditionsIsMutable();
          conditions_.add(index, value);
          onChanged();
        } else {
          conditionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder addConditions(
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.add(builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder addConditions(
          int index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder builderForValue) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.add(index, builderForValue.build());
          onChanged();
        } else {
          conditionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder addAllConditions(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition> values) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, conditions_);
          onChanged();
        } else {
          conditionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder clearConditions() {
        if (conditionsBuilder_ == null) {
          conditions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          conditionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public Builder removeConditions(int index) {
        if (conditionsBuilder_ == null) {
          ensureConditionsIsMutable();
          conditions_.remove(index);
          onChanged();
        } else {
          conditionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder getConditionsBuilder(
          int index) {
        return getConditionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder getConditionsOrBuilder(
          int index) {
        if (conditionsBuilder_ == null) {
          return conditions_.get(index);  } else {
          return conditionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder> 
           getConditionsOrBuilderList() {
        if (conditionsBuilder_ != null) {
          return conditionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(conditions_);
        }
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder addConditionsBuilder() {
        return getConditionsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.getDefaultInstance());
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder addConditionsBuilder(
          int index) {
        return getConditionsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.getDefaultInstance());
      }
      /**
       * <pre>
       * conditions applied to the request. Known conditions are "Approved", "Denied", and "Failed".
       * +listType=map
       * +listMapKey=type
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.certificates.v1.CertificateSigningRequestCondition conditions = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder> 
           getConditionsBuilderList() {
        return getConditionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder> 
          getConditionsFieldBuilder() {
        if (conditionsBuilder_ == null) {
          conditionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestCondition.Builder, io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestConditionOrBuilder>(
                  conditions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          conditions_ = null;
        }
        return conditionsBuilder_;
      }

      private com.google.protobuf.ByteString certificate_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * certificate is populated with an issued certificate by the signer after an Approved condition is present.
       * This field is set via the /status subresource. Once populated, this field is immutable.
       *
       * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
       * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
       *
       * Validation requirements:
       * 1. certificate must contain one or more PEM blocks.
       * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
       * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
       * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
       * to allow for explanatory text as described in section 5.2 of RFC7468.
       *
       * If more than one PEM block is present, and the definition of the requested spec.signerName
       * does not indicate otherwise, the first block is the issued certificate,
       * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
       *
       * The certificate is encoded in PEM format.
       *
       * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
       *
       * base64(
       * -----BEGIN CERTIFICATE-----
       * ...
       * -----END CERTIFICATE-----
       * )
       *
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>optional bytes certificate = 2;</code>
       * @return Whether the certificate field is set.
       */
      @java.lang.Override
      public boolean hasCertificate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * certificate is populated with an issued certificate by the signer after an Approved condition is present.
       * This field is set via the /status subresource. Once populated, this field is immutable.
       *
       * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
       * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
       *
       * Validation requirements:
       * 1. certificate must contain one or more PEM blocks.
       * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
       * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
       * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
       * to allow for explanatory text as described in section 5.2 of RFC7468.
       *
       * If more than one PEM block is present, and the definition of the requested spec.signerName
       * does not indicate otherwise, the first block is the issued certificate,
       * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
       *
       * The certificate is encoded in PEM format.
       *
       * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
       *
       * base64(
       * -----BEGIN CERTIFICATE-----
       * ...
       * -----END CERTIFICATE-----
       * )
       *
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>optional bytes certificate = 2;</code>
       * @return The certificate.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCertificate() {
        return certificate_;
      }
      /**
       * <pre>
       * certificate is populated with an issued certificate by the signer after an Approved condition is present.
       * This field is set via the /status subresource. Once populated, this field is immutable.
       *
       * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
       * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
       *
       * Validation requirements:
       * 1. certificate must contain one or more PEM blocks.
       * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
       * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
       * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
       * to allow for explanatory text as described in section 5.2 of RFC7468.
       *
       * If more than one PEM block is present, and the definition of the requested spec.signerName
       * does not indicate otherwise, the first block is the issued certificate,
       * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
       *
       * The certificate is encoded in PEM format.
       *
       * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
       *
       * base64(
       * -----BEGIN CERTIFICATE-----
       * ...
       * -----END CERTIFICATE-----
       * )
       *
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>optional bytes certificate = 2;</code>
       * @param value The certificate to set.
       * @return This builder for chaining.
       */
      public Builder setCertificate(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        certificate_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * certificate is populated with an issued certificate by the signer after an Approved condition is present.
       * This field is set via the /status subresource. Once populated, this field is immutable.
       *
       * If the certificate signing request is denied, a condition of type "Denied" is added and this field remains empty.
       * If the signer cannot issue the certificate, a condition of type "Failed" is added and this field remains empty.
       *
       * Validation requirements:
       * 1. certificate must contain one or more PEM blocks.
       * 2. All PEM blocks must have the "CERTIFICATE" label, contain no headers, and the encoded data
       * must be a BER-encoded ASN.1 Certificate structure as described in section 4 of RFC5280.
       * 3. Non-PEM content may appear before or after the "CERTIFICATE" PEM blocks and is unvalidated,
       * to allow for explanatory text as described in section 5.2 of RFC7468.
       *
       * If more than one PEM block is present, and the definition of the requested spec.signerName
       * does not indicate otherwise, the first block is the issued certificate,
       * and subsequent blocks should be treated as intermediate certificates and presented in TLS handshakes.
       *
       * The certificate is encoded in PEM format.
       *
       * When serialized as JSON or YAML, the data is additionally base64-encoded, so it consists of:
       *
       * base64(
       * -----BEGIN CERTIFICATE-----
       * ...
       * -----END CERTIFICATE-----
       * )
       *
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>optional bytes certificate = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCertificate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        certificate_ = getDefaultInstance().getCertificate();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.certificates.v1.CertificateSigningRequestStatus)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.certificates.v1.CertificateSigningRequestStatus)
    private static final io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus();
    }

    public static io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CertificateSigningRequestStatus>
        PARSER = new com.google.protobuf.AbstractParser<CertificateSigningRequestStatus>() {
      @java.lang.Override
      public CertificateSigningRequestStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CertificateSigningRequestStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CertificateSigningRequestStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.CertificateSigningRequestStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExtraValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.certificates.v1.ExtraValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string items = 1;</code>
     * @return A list containing the items.
     */
    java.util.List<java.lang.String>
        getItemsList();
    /**
     * <code>repeated string items = 1;</code>
     * @return The count of items.
     */
    int getItemsCount();
    /**
     * <code>repeated string items = 1;</code>
     * @param index The index of the element to return.
     * @return The items at the given index.
     */
    java.lang.String getItems(int index);
    /**
     * <code>repeated string items = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the items at the given index.
     */
    com.google.protobuf.ByteString
        getItemsBytes(int index);
  }
  /**
   * <pre>
   * ExtraValue masks the value so protobuf can generate
   * +protobuf.nullable=true
   * +protobuf.options.(gogoproto.goproto_stringer)=false
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.certificates.v1.ExtraValue}
   */
  public static final class ExtraValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.certificates.v1.ExtraValue)
      ExtraValueOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        ExtraValue.class.getName());
    }
    // Use ExtraValue.newBuilder() to construct.
    private ExtraValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ExtraValue() {
      items_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_ExtraValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_ExtraValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Certificates.ExtraValue.class, io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList items_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string items = 1;</code>
     * @return A list containing the items.
     */
    public com.google.protobuf.ProtocolStringList
        getItemsList() {
      return items_;
    }
    /**
     * <code>repeated string items = 1;</code>
     * @return The count of items.
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated string items = 1;</code>
     * @param index The index of the element to return.
     * @return The items at the given index.
     */
    public java.lang.String getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated string items = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the items at the given index.
     */
    public com.google.protobuf.ByteString
        getItemsBytes(int index) {
      return items_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, items_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < items_.size(); i++) {
          dataSize += computeStringSizeNoTag(items_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getItemsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Certificates.ExtraValue)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Certificates.ExtraValue other = (io.kubernetes.client.proto.V1Certificates.ExtraValue) obj;

      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Certificates.ExtraValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Certificates.ExtraValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ExtraValue masks the value so protobuf can generate
     * +protobuf.nullable=true
     * +protobuf.options.(gogoproto.goproto_stringer)=false
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.certificates.v1.ExtraValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.certificates.v1.ExtraValue)
        io.kubernetes.client.proto.V1Certificates.ExtraValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_ExtraValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_ExtraValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Certificates.ExtraValue.class, io.kubernetes.client.proto.V1Certificates.ExtraValue.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Certificates.ExtraValue.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        items_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Certificates.internal_static_k8s_io_api_certificates_v1_ExtraValue_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.ExtraValue getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Certificates.ExtraValue.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.ExtraValue build() {
        io.kubernetes.client.proto.V1Certificates.ExtraValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Certificates.ExtraValue buildPartial() {
        io.kubernetes.client.proto.V1Certificates.ExtraValue result = new io.kubernetes.client.proto.V1Certificates.ExtraValue(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Certificates.ExtraValue result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          items_.makeImmutable();
          result.items_ = items_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Certificates.ExtraValue) {
          return mergeFrom((io.kubernetes.client.proto.V1Certificates.ExtraValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Certificates.ExtraValue other) {
        if (other == io.kubernetes.client.proto.V1Certificates.ExtraValue.getDefaultInstance()) return this;
        if (!other.items_.isEmpty()) {
          if (items_.isEmpty()) {
            items_ = other.items_;
            bitField0_ |= 0x00000001;
          } else {
            ensureItemsIsMutable();
            items_.addAll(other.items_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureItemsIsMutable();
                items_.add(bs);
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList items_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureItemsIsMutable() {
        if (!items_.isModifiable()) {
          items_ = new com.google.protobuf.LazyStringArrayList(items_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <code>repeated string items = 1;</code>
       * @return A list containing the items.
       */
      public com.google.protobuf.ProtocolStringList
          getItemsList() {
        items_.makeImmutable();
        return items_;
      }
      /**
       * <code>repeated string items = 1;</code>
       * @return The count of items.
       */
      public int getItemsCount() {
        return items_.size();
      }
      /**
       * <code>repeated string items = 1;</code>
       * @param index The index of the element to return.
       * @return The items at the given index.
       */
      public java.lang.String getItems(int index) {
        return items_.get(index);
      }
      /**
       * <code>repeated string items = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the items at the given index.
       */
      public com.google.protobuf.ByteString
          getItemsBytes(int index) {
        return items_.getByteString(index);
      }
      /**
       * <code>repeated string items = 1;</code>
       * @param index The index to set the value at.
       * @param value The items to set.
       * @return This builder for chaining.
       */
      public Builder setItems(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureItemsIsMutable();
        items_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string items = 1;</code>
       * @param value The items to add.
       * @return This builder for chaining.
       */
      public Builder addItems(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureItemsIsMutable();
        items_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string items = 1;</code>
       * @param values The items to add.
       * @return This builder for chaining.
       */
      public Builder addAllItems(
          java.lang.Iterable<java.lang.String> values) {
        ensureItemsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, items_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string items = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearItems() {
        items_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string items = 1;</code>
       * @param value The bytes of the items to add.
       * @return This builder for chaining.
       */
      public Builder addItemsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureItemsIsMutable();
        items_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.certificates.v1.ExtraValue)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.certificates.v1.ExtraValue)
    private static final io.kubernetes.client.proto.V1Certificates.ExtraValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Certificates.ExtraValue();
    }

    public static io.kubernetes.client.proto.V1Certificates.ExtraValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExtraValue>
        PARSER = new com.google.protobuf.AbstractParser<ExtraValue>() {
      @java.lang.Override
      public ExtraValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ExtraValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExtraValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Certificates.ExtraValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_ExtraEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_ExtraEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_certificates_v1_ExtraValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_certificates_v1_ExtraValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*k8s.io/api/certificates/v1/generated.p" +
      "roto\022\032k8s.io.api.certificates.v1\032\"k8s.io" +
      "/api/core/v1/generated.proto\0324k8s.io/api" +
      "machinery/pkg/apis/meta/v1/generated.pro" +
      "to\032/k8s.io/apimachinery/pkg/runtime/gene" +
      "rated.proto\0326k8s.io/apimachinery/pkg/run" +
      "time/schema/generated.proto\"\365\001\n\031Certific" +
      "ateSigningRequest\022B\n\010metadata\030\001 \001(\01320.k8" +
      "s.io.apimachinery.pkg.apis.meta.v1.Objec" +
      "tMeta\022G\n\004spec\030\002 \001(\01329.k8s.io.api.certifi" +
      "cates.v1.CertificateSigningRequestSpec\022K" +
      "\n\006status\030\003 \001(\0132;.k8s.io.api.certificates" +
      ".v1.CertificateSigningRequestStatus\"\357\001\n\"" +
      "CertificateSigningRequestCondition\022\014\n\004ty" +
      "pe\030\001 \001(\t\022\016\n\006status\030\006 \001(\t\022\016\n\006reason\030\002 \001(\t" +
      "\022\017\n\007message\030\003 \001(\t\022B\n\016lastUpdateTime\030\004 \001(" +
      "\0132*.k8s.io.apimachinery.pkg.apis.meta.v1" +
      ".Time\022F\n\022lastTransitionTime\030\005 \001(\0132*.k8s." +
      "io.apimachinery.pkg.apis.meta.v1.Time\"\247\001" +
      "\n\035CertificateSigningRequestList\022@\n\010metad" +
      "ata\030\001 \001(\0132..k8s.io.apimachinery.pkg.apis" +
      ".meta.v1.ListMeta\022D\n\005items\030\002 \003(\01325.k8s.i" +
      "o.api.certificates.v1.CertificateSigning" +
      "Request\"\311\002\n\035CertificateSigningRequestSpe" +
      "c\022\017\n\007request\030\001 \001(\014\022\022\n\nsignerName\030\007 \001(\t\022\031" +
      "\n\021expirationSeconds\030\010 \001(\005\022\016\n\006usages\030\005 \003(" +
      "\t\022\020\n\010username\030\002 \001(\t\022\013\n\003uid\030\003 \001(\t\022\016\n\006grou" +
      "ps\030\004 \003(\t\022S\n\005extra\030\006 \003(\0132D.k8s.io.api.cer" +
      "tificates.v1.CertificateSigningRequestSp" +
      "ec.ExtraEntry\032T\n\nExtraEntry\022\013\n\003key\030\001 \001(\t" +
      "\0225\n\005value\030\002 \001(\0132&.k8s.io.api.certificate" +
      "s.v1.ExtraValue:\0028\001\"\212\001\n\037CertificateSigni" +
      "ngRequestStatus\022R\n\nconditions\030\001 \003(\0132>.k8" +
      "s.io.api.certificates.v1.CertificateSign" +
      "ingRequestCondition\022\023\n\013certificate\030\002 \001(\014" +
      "\"\033\n\nExtraValue\022\r\n\005items\030\001 \003(\tBH\n\032io.kube" +
      "rnetes.client.protoB\016V1CertificatesZ\032k8s" +
      ".io/api/certificates/v1"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.kubernetes.client.proto.V1.getDescriptor(),
          io.kubernetes.client.proto.Meta.getDescriptor(),
          io.kubernetes.client.proto.Runtime.getDescriptor(),
          io.kubernetes.client.proto.RuntimeSchema.getDescriptor(),
        });
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_CertificateSigningRequest_descriptor,
        new java.lang.String[] { "Metadata", "Spec", "Status", });
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestCondition_descriptor,
        new java.lang.String[] { "Type", "Status", "Reason", "Message", "LastUpdateTime", "LastTransitionTime", });
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestList_descriptor,
        new java.lang.String[] { "Metadata", "Items", });
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor,
        new java.lang.String[] { "Request", "SignerName", "ExpirationSeconds", "Usages", "Username", "Uid", "Groups", "Extra", });
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_ExtraEntry_descriptor =
      internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_descriptor.getNestedTypes().get(0);
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_ExtraEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestSpec_ExtraEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_CertificateSigningRequestStatus_descriptor,
        new java.lang.String[] { "Conditions", "Certificate", });
    internal_static_k8s_io_api_certificates_v1_ExtraValue_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_k8s_io_api_certificates_v1_ExtraValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_certificates_v1_ExtraValue_descriptor,
        new java.lang.String[] { "Items", });
    descriptor.resolveAllFeaturesImmutable();
    io.kubernetes.client.proto.V1.getDescriptor();
    io.kubernetes.client.proto.Meta.getDescriptor();
    io.kubernetes.client.proto.Runtime.getDescriptor();
    io.kubernetes.client.proto.RuntimeSchema.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
