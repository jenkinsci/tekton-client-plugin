// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: k8s.io/api/networking/v1/generated.proto
// Protobuf Java Version: 4.26.1

package io.kubernetes.client.proto;

public final class V1Networking {
  private V1Networking() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      V1Networking.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HTTPIngressPathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.HTTPIngressPath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * path is matched against the path of an incoming request. Currently it can
     * contain characters disallowed from the conventional "path" part of a URL
     * as defined by RFC 3986. Paths must begin with a '/' and must be present
     * when using PathType with value "Exact" or "Prefix".
     * +optional
     * </pre>
     *
     * <code>optional string path = 1;</code>
     * @return Whether the path field is set.
     */
    boolean hasPath();
    /**
     * <pre>
     * path is matched against the path of an incoming request. Currently it can
     * contain characters disallowed from the conventional "path" part of a URL
     * as defined by RFC 3986. Paths must begin with a '/' and must be present
     * when using PathType with value "Exact" or "Prefix".
     * +optional
     * </pre>
     *
     * <code>optional string path = 1;</code>
     * @return The path.
     */
    java.lang.String getPath();
    /**
     * <pre>
     * path is matched against the path of an incoming request. Currently it can
     * contain characters disallowed from the conventional "path" part of a URL
     * as defined by RFC 3986. Paths must begin with a '/' and must be present
     * when using PathType with value "Exact" or "Prefix".
     * +optional
     * </pre>
     *
     * <code>optional string path = 1;</code>
     * @return The bytes for path.
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * pathType determines the interpretation of the path matching. PathType can
     * be one of the following values:
     * * Exact: Matches the URL path exactly.
     * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
     * done on a path element by element basis. A path element refers is the
     * list of labels in the path split by the '/' separator. A request is a
     * match for path p if every p is an element-wise prefix of p of the
     * request path. Note that if the last element of the path is a substring
     * of the last element in request path, it is not a match (e.g. /foo/bar
     * matches /foo/bar/baz, but does not match /foo/barbaz).
     * * ImplementationSpecific: Interpretation of the Path matching is up to
     * the IngressClass. Implementations can treat this as a separate PathType
     * or treat it identically to Prefix or Exact path types.
     * Implementations are required to support all path types.
     * </pre>
     *
     * <code>optional string pathType = 3;</code>
     * @return Whether the pathType field is set.
     */
    boolean hasPathType();
    /**
     * <pre>
     * pathType determines the interpretation of the path matching. PathType can
     * be one of the following values:
     * * Exact: Matches the URL path exactly.
     * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
     * done on a path element by element basis. A path element refers is the
     * list of labels in the path split by the '/' separator. A request is a
     * match for path p if every p is an element-wise prefix of p of the
     * request path. Note that if the last element of the path is a substring
     * of the last element in request path, it is not a match (e.g. /foo/bar
     * matches /foo/bar/baz, but does not match /foo/barbaz).
     * * ImplementationSpecific: Interpretation of the Path matching is up to
     * the IngressClass. Implementations can treat this as a separate PathType
     * or treat it identically to Prefix or Exact path types.
     * Implementations are required to support all path types.
     * </pre>
     *
     * <code>optional string pathType = 3;</code>
     * @return The pathType.
     */
    java.lang.String getPathType();
    /**
     * <pre>
     * pathType determines the interpretation of the path matching. PathType can
     * be one of the following values:
     * * Exact: Matches the URL path exactly.
     * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
     * done on a path element by element basis. A path element refers is the
     * list of labels in the path split by the '/' separator. A request is a
     * match for path p if every p is an element-wise prefix of p of the
     * request path. Note that if the last element of the path is a substring
     * of the last element in request path, it is not a match (e.g. /foo/bar
     * matches /foo/bar/baz, but does not match /foo/barbaz).
     * * ImplementationSpecific: Interpretation of the Path matching is up to
     * the IngressClass. Implementations can treat this as a separate PathType
     * or treat it identically to Prefix or Exact path types.
     * Implementations are required to support all path types.
     * </pre>
     *
     * <code>optional string pathType = 3;</code>
     * @return The bytes for pathType.
     */
    com.google.protobuf.ByteString
        getPathTypeBytes();

    /**
     * <pre>
     * backend defines the referenced service endpoint to which the traffic
     * will be forwarded to.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
     * @return Whether the backend field is set.
     */
    boolean hasBackend();
    /**
     * <pre>
     * backend defines the referenced service endpoint to which the traffic
     * will be forwarded to.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
     * @return The backend.
     */
    io.kubernetes.client.proto.V1Networking.IngressBackend getBackend();
    /**
     * <pre>
     * backend defines the referenced service endpoint to which the traffic
     * will be forwarded to.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder getBackendOrBuilder();
  }
  /**
   * <pre>
   * HTTPIngressPath associates a path with a backend. Incoming urls matching the
   * path are forwarded to the backend.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.HTTPIngressPath}
   */
  public static final class HTTPIngressPath extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.HTTPIngressPath)
      HTTPIngressPathOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        HTTPIngressPath.class.getName());
    }
    // Use HTTPIngressPath.newBuilder() to construct.
    private HTTPIngressPath(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private HTTPIngressPath() {
      path_ = "";
      pathType_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressPath_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressPath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.HTTPIngressPath.class, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder.class);
    }

    private int bitField0_;
    public static final int PATH_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object path_ = "";
    /**
     * <pre>
     * path is matched against the path of an incoming request. Currently it can
     * contain characters disallowed from the conventional "path" part of a URL
     * as defined by RFC 3986. Paths must begin with a '/' and must be present
     * when using PathType with value "Exact" or "Prefix".
     * +optional
     * </pre>
     *
     * <code>optional string path = 1;</code>
     * @return Whether the path field is set.
     */
    @java.lang.Override
    public boolean hasPath() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * path is matched against the path of an incoming request. Currently it can
     * contain characters disallowed from the conventional "path" part of a URL
     * as defined by RFC 3986. Paths must begin with a '/' and must be present
     * when using PathType with value "Exact" or "Prefix".
     * +optional
     * </pre>
     *
     * <code>optional string path = 1;</code>
     * @return The path.
     */
    @java.lang.Override
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          path_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * path is matched against the path of an incoming request. Currently it can
     * contain characters disallowed from the conventional "path" part of a URL
     * as defined by RFC 3986. Paths must begin with a '/' and must be present
     * when using PathType with value "Exact" or "Prefix".
     * +optional
     * </pre>
     *
     * <code>optional string path = 1;</code>
     * @return The bytes for path.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PATHTYPE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object pathType_ = "";
    /**
     * <pre>
     * pathType determines the interpretation of the path matching. PathType can
     * be one of the following values:
     * * Exact: Matches the URL path exactly.
     * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
     * done on a path element by element basis. A path element refers is the
     * list of labels in the path split by the '/' separator. A request is a
     * match for path p if every p is an element-wise prefix of p of the
     * request path. Note that if the last element of the path is a substring
     * of the last element in request path, it is not a match (e.g. /foo/bar
     * matches /foo/bar/baz, but does not match /foo/barbaz).
     * * ImplementationSpecific: Interpretation of the Path matching is up to
     * the IngressClass. Implementations can treat this as a separate PathType
     * or treat it identically to Prefix or Exact path types.
     * Implementations are required to support all path types.
     * </pre>
     *
     * <code>optional string pathType = 3;</code>
     * @return Whether the pathType field is set.
     */
    @java.lang.Override
    public boolean hasPathType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * pathType determines the interpretation of the path matching. PathType can
     * be one of the following values:
     * * Exact: Matches the URL path exactly.
     * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
     * done on a path element by element basis. A path element refers is the
     * list of labels in the path split by the '/' separator. A request is a
     * match for path p if every p is an element-wise prefix of p of the
     * request path. Note that if the last element of the path is a substring
     * of the last element in request path, it is not a match (e.g. /foo/bar
     * matches /foo/bar/baz, but does not match /foo/barbaz).
     * * ImplementationSpecific: Interpretation of the Path matching is up to
     * the IngressClass. Implementations can treat this as a separate PathType
     * or treat it identically to Prefix or Exact path types.
     * Implementations are required to support all path types.
     * </pre>
     *
     * <code>optional string pathType = 3;</code>
     * @return The pathType.
     */
    @java.lang.Override
    public java.lang.String getPathType() {
      java.lang.Object ref = pathType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pathType_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * pathType determines the interpretation of the path matching. PathType can
     * be one of the following values:
     * * Exact: Matches the URL path exactly.
     * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
     * done on a path element by element basis. A path element refers is the
     * list of labels in the path split by the '/' separator. A request is a
     * match for path p if every p is an element-wise prefix of p of the
     * request path. Note that if the last element of the path is a substring
     * of the last element in request path, it is not a match (e.g. /foo/bar
     * matches /foo/bar/baz, but does not match /foo/barbaz).
     * * ImplementationSpecific: Interpretation of the Path matching is up to
     * the IngressClass. Implementations can treat this as a separate PathType
     * or treat it identically to Prefix or Exact path types.
     * Implementations are required to support all path types.
     * </pre>
     *
     * <code>optional string pathType = 3;</code>
     * @return The bytes for pathType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPathTypeBytes() {
      java.lang.Object ref = pathType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pathType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BACKEND_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.IngressBackend backend_;
    /**
     * <pre>
     * backend defines the referenced service endpoint to which the traffic
     * will be forwarded to.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
     * @return Whether the backend field is set.
     */
    @java.lang.Override
    public boolean hasBackend() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * backend defines the referenced service endpoint to which the traffic
     * will be forwarded to.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
     * @return The backend.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressBackend getBackend() {
      return backend_ == null ? io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : backend_;
    }
    /**
     * <pre>
     * backend defines the referenced service endpoint to which the traffic
     * will be forwarded to.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder getBackendOrBuilder() {
      return backend_ == null ? io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : backend_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, path_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(2, getBackend());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, pathType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, path_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBackend());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, pathType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.HTTPIngressPath)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.HTTPIngressPath other = (io.kubernetes.client.proto.V1Networking.HTTPIngressPath) obj;

      if (hasPath() != other.hasPath()) return false;
      if (hasPath()) {
        if (!getPath()
            .equals(other.getPath())) return false;
      }
      if (hasPathType() != other.hasPathType()) return false;
      if (hasPathType()) {
        if (!getPathType()
            .equals(other.getPathType())) return false;
      }
      if (hasBackend() != other.hasBackend()) return false;
      if (hasBackend()) {
        if (!getBackend()
            .equals(other.getBackend())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPath()) {
        hash = (37 * hash) + PATH_FIELD_NUMBER;
        hash = (53 * hash) + getPath().hashCode();
      }
      if (hasPathType()) {
        hash = (37 * hash) + PATHTYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPathType().hashCode();
      }
      if (hasBackend()) {
        hash = (37 * hash) + BACKEND_FIELD_NUMBER;
        hash = (53 * hash) + getBackend().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.HTTPIngressPath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * HTTPIngressPath associates a path with a backend. Incoming urls matching the
     * path are forwarded to the backend.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.HTTPIngressPath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.HTTPIngressPath)
        io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressPath_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressPath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.HTTPIngressPath.class, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.HTTPIngressPath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getBackendFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        path_ = "";
        pathType_ = "";
        backend_ = null;
        if (backendBuilder_ != null) {
          backendBuilder_.dispose();
          backendBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressPath_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.HTTPIngressPath.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath build() {
        io.kubernetes.client.proto.V1Networking.HTTPIngressPath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath buildPartial() {
        io.kubernetes.client.proto.V1Networking.HTTPIngressPath result = new io.kubernetes.client.proto.V1Networking.HTTPIngressPath(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.HTTPIngressPath result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.path_ = path_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pathType_ = pathType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.backend_ = backendBuilder_ == null
              ? backend_
              : backendBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.HTTPIngressPath) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.HTTPIngressPath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.HTTPIngressPath other) {
        if (other == io.kubernetes.client.proto.V1Networking.HTTPIngressPath.getDefaultInstance()) return this;
        if (other.hasPath()) {
          path_ = other.path_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPathType()) {
          pathType_ = other.pathType_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasBackend()) {
          mergeBackend(other.getBackend());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                path_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getBackendFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 18
              case 26: {
                pathType_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * path is matched against the path of an incoming request. Currently it can
       * contain characters disallowed from the conventional "path" part of a URL
       * as defined by RFC 3986. Paths must begin with a '/' and must be present
       * when using PathType with value "Exact" or "Prefix".
       * +optional
       * </pre>
       *
       * <code>optional string path = 1;</code>
       * @return Whether the path field is set.
       */
      public boolean hasPath() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * path is matched against the path of an incoming request. Currently it can
       * contain characters disallowed from the conventional "path" part of a URL
       * as defined by RFC 3986. Paths must begin with a '/' and must be present
       * when using PathType with value "Exact" or "Prefix".
       * +optional
       * </pre>
       *
       * <code>optional string path = 1;</code>
       * @return The path.
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            path_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * path is matched against the path of an incoming request. Currently it can
       * contain characters disallowed from the conventional "path" part of a URL
       * as defined by RFC 3986. Paths must begin with a '/' and must be present
       * when using PathType with value "Exact" or "Prefix".
       * +optional
       * </pre>
       *
       * <code>optional string path = 1;</code>
       * @return The bytes for path.
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * path is matched against the path of an incoming request. Currently it can
       * contain characters disallowed from the conventional "path" part of a URL
       * as defined by RFC 3986. Paths must begin with a '/' and must be present
       * when using PathType with value "Exact" or "Prefix".
       * +optional
       * </pre>
       *
       * <code>optional string path = 1;</code>
       * @param value The path to set.
       * @return This builder for chaining.
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        path_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path is matched against the path of an incoming request. Currently it can
       * contain characters disallowed from the conventional "path" part of a URL
       * as defined by RFC 3986. Paths must begin with a '/' and must be present
       * when using PathType with value "Exact" or "Prefix".
       * +optional
       * </pre>
       *
       * <code>optional string path = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPath() {
        path_ = getDefaultInstance().getPath();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * path is matched against the path of an incoming request. Currently it can
       * contain characters disallowed from the conventional "path" part of a URL
       * as defined by RFC 3986. Paths must begin with a '/' and must be present
       * when using PathType with value "Exact" or "Prefix".
       * +optional
       * </pre>
       *
       * <code>optional string path = 1;</code>
       * @param value The bytes for path to set.
       * @return This builder for chaining.
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        path_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object pathType_ = "";
      /**
       * <pre>
       * pathType determines the interpretation of the path matching. PathType can
       * be one of the following values:
       * * Exact: Matches the URL path exactly.
       * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
       * done on a path element by element basis. A path element refers is the
       * list of labels in the path split by the '/' separator. A request is a
       * match for path p if every p is an element-wise prefix of p of the
       * request path. Note that if the last element of the path is a substring
       * of the last element in request path, it is not a match (e.g. /foo/bar
       * matches /foo/bar/baz, but does not match /foo/barbaz).
       * * ImplementationSpecific: Interpretation of the Path matching is up to
       * the IngressClass. Implementations can treat this as a separate PathType
       * or treat it identically to Prefix or Exact path types.
       * Implementations are required to support all path types.
       * </pre>
       *
       * <code>optional string pathType = 3;</code>
       * @return Whether the pathType field is set.
       */
      public boolean hasPathType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * pathType determines the interpretation of the path matching. PathType can
       * be one of the following values:
       * * Exact: Matches the URL path exactly.
       * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
       * done on a path element by element basis. A path element refers is the
       * list of labels in the path split by the '/' separator. A request is a
       * match for path p if every p is an element-wise prefix of p of the
       * request path. Note that if the last element of the path is a substring
       * of the last element in request path, it is not a match (e.g. /foo/bar
       * matches /foo/bar/baz, but does not match /foo/barbaz).
       * * ImplementationSpecific: Interpretation of the Path matching is up to
       * the IngressClass. Implementations can treat this as a separate PathType
       * or treat it identically to Prefix or Exact path types.
       * Implementations are required to support all path types.
       * </pre>
       *
       * <code>optional string pathType = 3;</code>
       * @return The pathType.
       */
      public java.lang.String getPathType() {
        java.lang.Object ref = pathType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pathType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * pathType determines the interpretation of the path matching. PathType can
       * be one of the following values:
       * * Exact: Matches the URL path exactly.
       * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
       * done on a path element by element basis. A path element refers is the
       * list of labels in the path split by the '/' separator. A request is a
       * match for path p if every p is an element-wise prefix of p of the
       * request path. Note that if the last element of the path is a substring
       * of the last element in request path, it is not a match (e.g. /foo/bar
       * matches /foo/bar/baz, but does not match /foo/barbaz).
       * * ImplementationSpecific: Interpretation of the Path matching is up to
       * the IngressClass. Implementations can treat this as a separate PathType
       * or treat it identically to Prefix or Exact path types.
       * Implementations are required to support all path types.
       * </pre>
       *
       * <code>optional string pathType = 3;</code>
       * @return The bytes for pathType.
       */
      public com.google.protobuf.ByteString
          getPathTypeBytes() {
        java.lang.Object ref = pathType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pathType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * pathType determines the interpretation of the path matching. PathType can
       * be one of the following values:
       * * Exact: Matches the URL path exactly.
       * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
       * done on a path element by element basis. A path element refers is the
       * list of labels in the path split by the '/' separator. A request is a
       * match for path p if every p is an element-wise prefix of p of the
       * request path. Note that if the last element of the path is a substring
       * of the last element in request path, it is not a match (e.g. /foo/bar
       * matches /foo/bar/baz, but does not match /foo/barbaz).
       * * ImplementationSpecific: Interpretation of the Path matching is up to
       * the IngressClass. Implementations can treat this as a separate PathType
       * or treat it identically to Prefix or Exact path types.
       * Implementations are required to support all path types.
       * </pre>
       *
       * <code>optional string pathType = 3;</code>
       * @param value The pathType to set.
       * @return This builder for chaining.
       */
      public Builder setPathType(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        pathType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pathType determines the interpretation of the path matching. PathType can
       * be one of the following values:
       * * Exact: Matches the URL path exactly.
       * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
       * done on a path element by element basis. A path element refers is the
       * list of labels in the path split by the '/' separator. A request is a
       * match for path p if every p is an element-wise prefix of p of the
       * request path. Note that if the last element of the path is a substring
       * of the last element in request path, it is not a match (e.g. /foo/bar
       * matches /foo/bar/baz, but does not match /foo/barbaz).
       * * ImplementationSpecific: Interpretation of the Path matching is up to
       * the IngressClass. Implementations can treat this as a separate PathType
       * or treat it identically to Prefix or Exact path types.
       * Implementations are required to support all path types.
       * </pre>
       *
       * <code>optional string pathType = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPathType() {
        pathType_ = getDefaultInstance().getPathType();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pathType determines the interpretation of the path matching. PathType can
       * be one of the following values:
       * * Exact: Matches the URL path exactly.
       * * Prefix: Matches based on a URL path prefix split by '/'. Matching is
       * done on a path element by element basis. A path element refers is the
       * list of labels in the path split by the '/' separator. A request is a
       * match for path p if every p is an element-wise prefix of p of the
       * request path. Note that if the last element of the path is a substring
       * of the last element in request path, it is not a match (e.g. /foo/bar
       * matches /foo/bar/baz, but does not match /foo/barbaz).
       * * ImplementationSpecific: Interpretation of the Path matching is up to
       * the IngressClass. Implementations can treat this as a separate PathType
       * or treat it identically to Prefix or Exact path types.
       * Implementations are required to support all path types.
       * </pre>
       *
       * <code>optional string pathType = 3;</code>
       * @param value The bytes for pathType to set.
       * @return This builder for chaining.
       */
      public Builder setPathTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        pathType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.V1Networking.IngressBackend backend_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressBackend, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder> backendBuilder_;
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       * @return Whether the backend field is set.
       */
      public boolean hasBackend() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       * @return The backend.
       */
      public io.kubernetes.client.proto.V1Networking.IngressBackend getBackend() {
        if (backendBuilder_ == null) {
          return backend_ == null ? io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : backend_;
        } else {
          return backendBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      public Builder setBackend(io.kubernetes.client.proto.V1Networking.IngressBackend value) {
        if (backendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backend_ = value;
        } else {
          backendBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      public Builder setBackend(
          io.kubernetes.client.proto.V1Networking.IngressBackend.Builder builderForValue) {
        if (backendBuilder_ == null) {
          backend_ = builderForValue.build();
        } else {
          backendBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      public Builder mergeBackend(io.kubernetes.client.proto.V1Networking.IngressBackend value) {
        if (backendBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            backend_ != null &&
            backend_ != io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance()) {
            getBackendBuilder().mergeFrom(value);
          } else {
            backend_ = value;
          }
        } else {
          backendBuilder_.mergeFrom(value);
        }
        if (backend_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      public Builder clearBackend() {
        bitField0_ = (bitField0_ & ~0x00000004);
        backend_ = null;
        if (backendBuilder_ != null) {
          backendBuilder_.dispose();
          backendBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressBackend.Builder getBackendBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getBackendFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder getBackendOrBuilder() {
        if (backendBuilder_ != null) {
          return backendBuilder_.getMessageOrBuilder();
        } else {
          return backend_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : backend_;
        }
      }
      /**
       * <pre>
       * backend defines the referenced service endpoint to which the traffic
       * will be forwarded to.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend backend = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressBackend, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder> 
          getBackendFieldBuilder() {
        if (backendBuilder_ == null) {
          backendBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressBackend, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder>(
                  getBackend(),
                  getParentForChildren(),
                  isClean());
          backend_ = null;
        }
        return backendBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.HTTPIngressPath)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.HTTPIngressPath)
    private static final io.kubernetes.client.proto.V1Networking.HTTPIngressPath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.HTTPIngressPath();
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressPath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HTTPIngressPath>
        PARSER = new com.google.protobuf.AbstractParser<HTTPIngressPath>() {
      @java.lang.Override
      public HTTPIngressPath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HTTPIngressPath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HTTPIngressPath> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.HTTPIngressPath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HTTPIngressRuleValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.HTTPIngressRuleValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.HTTPIngressPath> 
        getPathsList();
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.HTTPIngressPath getPaths(int index);
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    int getPathsCount();
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder> 
        getPathsOrBuilderList();
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder getPathsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * HTTPIngressRuleValue is a list of http selectors pointing to backends.
   * In the example: http://&lt;host&gt;/&lt;path&gt;?&lt;searchpart&gt; -&gt; backend where
   * where parts of the url correspond to RFC 3986, this resource will be used
   * to match against everything after the last '/' and before the first '?'
   * or '#'.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.HTTPIngressRuleValue}
   */
  public static final class HTTPIngressRuleValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.HTTPIngressRuleValue)
      HTTPIngressRuleValueOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        HTTPIngressRuleValue.class.getName());
    }
    // Use HTTPIngressRuleValue.newBuilder() to construct.
    private HTTPIngressRuleValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private HTTPIngressRuleValue() {
      paths_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.class, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder.class);
    }

    public static final int PATHS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.HTTPIngressPath> paths_;
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.HTTPIngressPath> getPathsList() {
      return paths_;
    }
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder> 
        getPathsOrBuilderList() {
      return paths_;
    }
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    @java.lang.Override
    public int getPathsCount() {
      return paths_.size();
    }
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.HTTPIngressPath getPaths(int index) {
      return paths_.get(index);
    }
    /**
     * <pre>
     * paths is a collection of paths that map requests to backends.
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder getPathsOrBuilder(
        int index) {
      return paths_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < paths_.size(); i++) {
        output.writeMessage(1, paths_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < paths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, paths_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue other = (io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue) obj;

      if (!getPathsList()
          .equals(other.getPathsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPathsCount() > 0) {
        hash = (37 * hash) + PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getPathsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * HTTPIngressRuleValue is a list of http selectors pointing to backends.
     * In the example: http://&lt;host&gt;/&lt;path&gt;?&lt;searchpart&gt; -&gt; backend where
     * where parts of the url correspond to RFC 3986, this resource will be used
     * to match against everything after the last '/' and before the first '?'
     * or '#'.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.HTTPIngressRuleValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.HTTPIngressRuleValue)
        io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.class, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (pathsBuilder_ == null) {
          paths_ = java.util.Collections.emptyList();
        } else {
          paths_ = null;
          pathsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue build() {
        io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue buildPartial() {
        io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue result = new io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue result) {
        if (pathsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            paths_ = java.util.Collections.unmodifiableList(paths_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.paths_ = paths_;
        } else {
          result.paths_ = pathsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue other) {
        if (other == io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance()) return this;
        if (pathsBuilder_ == null) {
          if (!other.paths_.isEmpty()) {
            if (paths_.isEmpty()) {
              paths_ = other.paths_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePathsIsMutable();
              paths_.addAll(other.paths_);
            }
            onChanged();
          }
        } else {
          if (!other.paths_.isEmpty()) {
            if (pathsBuilder_.isEmpty()) {
              pathsBuilder_.dispose();
              pathsBuilder_ = null;
              paths_ = other.paths_;
              bitField0_ = (bitField0_ & ~0x00000001);
              pathsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPathsFieldBuilder() : null;
            } else {
              pathsBuilder_.addAllMessages(other.paths_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.kubernetes.client.proto.V1Networking.HTTPIngressPath m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.HTTPIngressPath.parser(),
                        extensionRegistry);
                if (pathsBuilder_ == null) {
                  ensurePathsIsMutable();
                  paths_.add(m);
                } else {
                  pathsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.kubernetes.client.proto.V1Networking.HTTPIngressPath> paths_ =
        java.util.Collections.emptyList();
      private void ensurePathsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          paths_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.HTTPIngressPath>(paths_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.HTTPIngressPath, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder, io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder> pathsBuilder_;

      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.HTTPIngressPath> getPathsList() {
        if (pathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(paths_);
        } else {
          return pathsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public int getPathsCount() {
        if (pathsBuilder_ == null) {
          return paths_.size();
        } else {
          return pathsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath getPaths(int index) {
        if (pathsBuilder_ == null) {
          return paths_.get(index);
        } else {
          return pathsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder setPaths(
          int index, io.kubernetes.client.proto.V1Networking.HTTPIngressPath value) {
        if (pathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathsIsMutable();
          paths_.set(index, value);
          onChanged();
        } else {
          pathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder setPaths(
          int index, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder builderForValue) {
        if (pathsBuilder_ == null) {
          ensurePathsIsMutable();
          paths_.set(index, builderForValue.build());
          onChanged();
        } else {
          pathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder addPaths(io.kubernetes.client.proto.V1Networking.HTTPIngressPath value) {
        if (pathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathsIsMutable();
          paths_.add(value);
          onChanged();
        } else {
          pathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder addPaths(
          int index, io.kubernetes.client.proto.V1Networking.HTTPIngressPath value) {
        if (pathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePathsIsMutable();
          paths_.add(index, value);
          onChanged();
        } else {
          pathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder addPaths(
          io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder builderForValue) {
        if (pathsBuilder_ == null) {
          ensurePathsIsMutable();
          paths_.add(builderForValue.build());
          onChanged();
        } else {
          pathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder addPaths(
          int index, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder builderForValue) {
        if (pathsBuilder_ == null) {
          ensurePathsIsMutable();
          paths_.add(index, builderForValue.build());
          onChanged();
        } else {
          pathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder addAllPaths(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.HTTPIngressPath> values) {
        if (pathsBuilder_ == null) {
          ensurePathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, paths_);
          onChanged();
        } else {
          pathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder clearPaths() {
        if (pathsBuilder_ == null) {
          paths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          pathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public Builder removePaths(int index) {
        if (pathsBuilder_ == null) {
          ensurePathsIsMutable();
          paths_.remove(index);
          onChanged();
        } else {
          pathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder getPathsBuilder(
          int index) {
        return getPathsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder getPathsOrBuilder(
          int index) {
        if (pathsBuilder_ == null) {
          return paths_.get(index);  } else {
          return pathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder> 
           getPathsOrBuilderList() {
        if (pathsBuilder_ != null) {
          return pathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(paths_);
        }
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder addPathsBuilder() {
        return getPathsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.HTTPIngressPath.getDefaultInstance());
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder addPathsBuilder(
          int index) {
        return getPathsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.getDefaultInstance());
      }
      /**
       * <pre>
       * paths is a collection of paths that map requests to backends.
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.HTTPIngressPath paths = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder> 
           getPathsBuilderList() {
        return getPathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.HTTPIngressPath, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder, io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder> 
          getPathsFieldBuilder() {
        if (pathsBuilder_ == null) {
          pathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.HTTPIngressPath, io.kubernetes.client.proto.V1Networking.HTTPIngressPath.Builder, io.kubernetes.client.proto.V1Networking.HTTPIngressPathOrBuilder>(
                  paths_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          paths_ = null;
        }
        return pathsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.HTTPIngressRuleValue)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.HTTPIngressRuleValue)
    private static final io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue();
    }

    public static io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<HTTPIngressRuleValue>
        PARSER = new com.google.protobuf.AbstractParser<HTTPIngressRuleValue>() {
      @java.lang.Override
      public HTTPIngressRuleValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HTTPIngressRuleValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HTTPIngressRuleValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IPBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IPBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * cidr is a string representing the IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * </pre>
     *
     * <code>optional string cidr = 1;</code>
     * @return Whether the cidr field is set.
     */
    boolean hasCidr();
    /**
     * <pre>
     * cidr is a string representing the IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * </pre>
     *
     * <code>optional string cidr = 1;</code>
     * @return The cidr.
     */
    java.lang.String getCidr();
    /**
     * <pre>
     * cidr is a string representing the IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * </pre>
     *
     * <code>optional string cidr = 1;</code>
     * @return The bytes for cidr.
     */
    com.google.protobuf.ByteString
        getCidrBytes();

    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @return A list containing the except.
     */
    java.util.List<java.lang.String>
        getExceptList();
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @return The count of except.
     */
    int getExceptCount();
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @param index The index of the element to return.
     * @return The except at the given index.
     */
    java.lang.String getExcept(int index);
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the except at the given index.
     */
    com.google.protobuf.ByteString
        getExceptBytes(int index);
  }
  /**
   * <pre>
   * IPBlock describes a particular CIDR (Ex. "192.168.1.0/24","2001:db8::/64") that is allowed
   * to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs
   * that should not be included within this rule.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IPBlock}
   */
  public static final class IPBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IPBlock)
      IPBlockOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IPBlock.class.getName());
    }
    // Use IPBlock.newBuilder() to construct.
    private IPBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IPBlock() {
      cidr_ = "";
      except_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IPBlock_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IPBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IPBlock.class, io.kubernetes.client.proto.V1Networking.IPBlock.Builder.class);
    }

    private int bitField0_;
    public static final int CIDR_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object cidr_ = "";
    /**
     * <pre>
     * cidr is a string representing the IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * </pre>
     *
     * <code>optional string cidr = 1;</code>
     * @return Whether the cidr field is set.
     */
    @java.lang.Override
    public boolean hasCidr() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * cidr is a string representing the IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * </pre>
     *
     * <code>optional string cidr = 1;</code>
     * @return The cidr.
     */
    @java.lang.Override
    public java.lang.String getCidr() {
      java.lang.Object ref = cidr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cidr_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * cidr is a string representing the IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * </pre>
     *
     * <code>optional string cidr = 1;</code>
     * @return The bytes for cidr.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCidrBytes() {
      java.lang.Object ref = cidr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cidr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXCEPT_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList except_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @return A list containing the except.
     */
    public com.google.protobuf.ProtocolStringList
        getExceptList() {
      return except_;
    }
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @return The count of except.
     */
    public int getExceptCount() {
      return except_.size();
    }
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @param index The index of the element to return.
     * @return The except at the given index.
     */
    public java.lang.String getExcept(int index) {
      return except_.get(index);
    }
    /**
     * <pre>
     * except is a slice of CIDRs that should not be included within an IPBlock
     * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
     * Except values will be rejected if they are outside the cidr range
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string except = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the except at the given index.
     */
    public com.google.protobuf.ByteString
        getExceptBytes(int index) {
      return except_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, cidr_);
      }
      for (int i = 0; i < except_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, except_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, cidr_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < except_.size(); i++) {
          dataSize += computeStringSizeNoTag(except_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getExceptList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IPBlock)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IPBlock other = (io.kubernetes.client.proto.V1Networking.IPBlock) obj;

      if (hasCidr() != other.hasCidr()) return false;
      if (hasCidr()) {
        if (!getCidr()
            .equals(other.getCidr())) return false;
      }
      if (!getExceptList()
          .equals(other.getExceptList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCidr()) {
        hash = (37 * hash) + CIDR_FIELD_NUMBER;
        hash = (53 * hash) + getCidr().hashCode();
      }
      if (getExceptCount() > 0) {
        hash = (37 * hash) + EXCEPT_FIELD_NUMBER;
        hash = (53 * hash) + getExceptList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IPBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IPBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IPBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IPBlock prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IPBlock describes a particular CIDR (Ex. "192.168.1.0/24","2001:db8::/64") that is allowed
     * to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs
     * that should not be included within this rule.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IPBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IPBlock)
        io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IPBlock_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IPBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IPBlock.class, io.kubernetes.client.proto.V1Networking.IPBlock.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IPBlock.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cidr_ = "";
        except_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IPBlock_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IPBlock getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IPBlock build() {
        io.kubernetes.client.proto.V1Networking.IPBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IPBlock buildPartial() {
        io.kubernetes.client.proto.V1Networking.IPBlock result = new io.kubernetes.client.proto.V1Networking.IPBlock(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IPBlock result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cidr_ = cidr_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          except_.makeImmutable();
          result.except_ = except_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IPBlock) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IPBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IPBlock other) {
        if (other == io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance()) return this;
        if (other.hasCidr()) {
          cidr_ = other.cidr_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.except_.isEmpty()) {
          if (except_.isEmpty()) {
            except_ = other.except_;
            bitField0_ |= 0x00000002;
          } else {
            ensureExceptIsMutable();
            except_.addAll(other.except_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                cidr_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureExceptIsMutable();
                except_.add(bs);
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object cidr_ = "";
      /**
       * <pre>
       * cidr is a string representing the IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * </pre>
       *
       * <code>optional string cidr = 1;</code>
       * @return Whether the cidr field is set.
       */
      public boolean hasCidr() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * cidr is a string representing the IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * </pre>
       *
       * <code>optional string cidr = 1;</code>
       * @return The cidr.
       */
      public java.lang.String getCidr() {
        java.lang.Object ref = cidr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            cidr_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * cidr is a string representing the IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * </pre>
       *
       * <code>optional string cidr = 1;</code>
       * @return The bytes for cidr.
       */
      public com.google.protobuf.ByteString
          getCidrBytes() {
        java.lang.Object ref = cidr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cidr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * cidr is a string representing the IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * </pre>
       *
       * <code>optional string cidr = 1;</code>
       * @param value The cidr to set.
       * @return This builder for chaining.
       */
      public Builder setCidr(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        cidr_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cidr is a string representing the IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * </pre>
       *
       * <code>optional string cidr = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCidr() {
        cidr_ = getDefaultInstance().getCidr();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cidr is a string representing the IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * </pre>
       *
       * <code>optional string cidr = 1;</code>
       * @param value The bytes for cidr to set.
       * @return This builder for chaining.
       */
      public Builder setCidrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        cidr_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList except_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureExceptIsMutable() {
        if (!except_.isModifiable()) {
          except_ = new com.google.protobuf.LazyStringArrayList(except_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @return A list containing the except.
       */
      public com.google.protobuf.ProtocolStringList
          getExceptList() {
        except_.makeImmutable();
        return except_;
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @return The count of except.
       */
      public int getExceptCount() {
        return except_.size();
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @param index The index of the element to return.
       * @return The except at the given index.
       */
      public java.lang.String getExcept(int index) {
        return except_.get(index);
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the except at the given index.
       */
      public com.google.protobuf.ByteString
          getExceptBytes(int index) {
        return except_.getByteString(index);
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @param index The index to set the value at.
       * @param value The except to set.
       * @return This builder for chaining.
       */
      public Builder setExcept(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExceptIsMutable();
        except_.set(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @param value The except to add.
       * @return This builder for chaining.
       */
      public Builder addExcept(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExceptIsMutable();
        except_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @param values The except to add.
       * @return This builder for chaining.
       */
      public Builder addAllExcept(
          java.lang.Iterable<java.lang.String> values) {
        ensureExceptIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, except_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearExcept() {
        except_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * except is a slice of CIDRs that should not be included within an IPBlock
       * Valid examples are "192.168.1.0/24" or "2001:db8::/64"
       * Except values will be rejected if they are outside the cidr range
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string except = 2;</code>
       * @param value The bytes of the except to add.
       * @return This builder for chaining.
       */
      public Builder addExceptBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureExceptIsMutable();
        except_.add(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IPBlock)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IPBlock)
    private static final io.kubernetes.client.proto.V1Networking.IPBlock DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IPBlock();
    }

    public static io.kubernetes.client.proto.V1Networking.IPBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IPBlock>
        PARSER = new com.google.protobuf.AbstractParser<IPBlock>() {
      @java.lang.Override
      public IPBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IPBlock> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IPBlock> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IPBlock getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.Ingress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ObjectMeta getMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * spec is the desired state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    boolean hasSpec();
    /**
     * <pre>
     * spec is the desired state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
     * @return The spec.
     */
    io.kubernetes.client.proto.V1Networking.IngressSpec getSpec();
    /**
     * <pre>
     * spec is the desired state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder getSpecOrBuilder();

    /**
     * <pre>
     * status is the current state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    boolean hasStatus();
    /**
     * <pre>
     * status is the current state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
     * @return The status.
     */
    io.kubernetes.client.proto.V1Networking.IngressStatus getStatus();
    /**
     * <pre>
     * status is the current state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder getStatusOrBuilder();
  }
  /**
   * <pre>
   * Ingress is a collection of rules that allow inbound connections to reach the
   * endpoints defined by a backend. An Ingress can be configured to give services
   * externally-reachable urls, load balance traffic, terminate SSL, offer name
   * based virtual hosting etc.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.Ingress}
   */
  public static final class Ingress extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.Ingress)
      IngressOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        Ingress.class.getName());
    }
    // Use Ingress.newBuilder() to construct.
    private Ingress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Ingress() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_Ingress_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_Ingress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.Ingress.class, io.kubernetes.client.proto.V1Networking.Ingress.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }

    public static final int SPEC_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.IngressSpec spec_;
    /**
     * <pre>
     * spec is the desired state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    @java.lang.Override
    public boolean hasSpec() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * spec is the desired state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
     * @return The spec.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressSpec getSpec() {
      return spec_ == null ? io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance() : spec_;
    }
    /**
     * <pre>
     * spec is the desired state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder getSpecOrBuilder() {
      return spec_ == null ? io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance() : spec_;
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    private io.kubernetes.client.proto.V1Networking.IngressStatus status_;
    /**
     * <pre>
     * status is the current state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
     * @return Whether the status field is set.
     */
    @java.lang.Override
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * status is the current state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
     * @return The status.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressStatus getStatus() {
      return status_ == null ? io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance() : status_;
    }
    /**
     * <pre>
     * status is the current state of the Ingress.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder getStatusOrBuilder() {
      return status_ == null ? io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance() : status_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSpec());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getStatus());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSpec());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.Ingress)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.Ingress other = (io.kubernetes.client.proto.V1Networking.Ingress) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasSpec() != other.hasSpec()) return false;
      if (hasSpec()) {
        if (!getSpec()
            .equals(other.getSpec())) return false;
      }
      if (hasStatus() != other.hasStatus()) return false;
      if (hasStatus()) {
        if (!getStatus()
            .equals(other.getStatus())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasSpec()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getSpec().hashCode();
      }
      if (hasStatus()) {
        hash = (37 * hash) + STATUS_FIELD_NUMBER;
        hash = (53 * hash) + getStatus().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.Ingress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.Ingress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.Ingress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.Ingress prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Ingress is a collection of rules that allow inbound connections to reach the
     * endpoints defined by a backend. An Ingress can be configured to give services
     * externally-reachable urls, load balance traffic, terminate SSL, offer name
     * based virtual hosting etc.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.Ingress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.Ingress)
        io.kubernetes.client.proto.V1Networking.IngressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_Ingress_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_Ingress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.Ingress.class, io.kubernetes.client.proto.V1Networking.Ingress.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.Ingress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getSpecFieldBuilder();
          getStatusFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_Ingress_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.Ingress getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.Ingress.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.Ingress build() {
        io.kubernetes.client.proto.V1Networking.Ingress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.Ingress buildPartial() {
        io.kubernetes.client.proto.V1Networking.Ingress result = new io.kubernetes.client.proto.V1Networking.Ingress(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.Ingress result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.spec_ = specBuilder_ == null
              ? spec_
              : specBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.status_ = statusBuilder_ == null
              ? status_
              : statusBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.Ingress) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.Ingress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.Ingress other) {
        if (other == io.kubernetes.client.proto.V1Networking.Ingress.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasSpec()) {
          mergeSpec(other.getSpec());
        }
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSpecFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getStatusFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ObjectMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private io.kubernetes.client.proto.V1Networking.IngressSpec spec_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressSpec, io.kubernetes.client.proto.V1Networking.IngressSpec.Builder, io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder> specBuilder_;
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       * @return Whether the spec field is set.
       */
      public boolean hasSpec() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       * @return The spec.
       */
      public io.kubernetes.client.proto.V1Networking.IngressSpec getSpec() {
        if (specBuilder_ == null) {
          return spec_ == null ? io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance() : spec_;
        } else {
          return specBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      public Builder setSpec(io.kubernetes.client.proto.V1Networking.IngressSpec value) {
        if (specBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
        } else {
          specBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      public Builder setSpec(
          io.kubernetes.client.proto.V1Networking.IngressSpec.Builder builderForValue) {
        if (specBuilder_ == null) {
          spec_ = builderForValue.build();
        } else {
          specBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      public Builder mergeSpec(io.kubernetes.client.proto.V1Networking.IngressSpec value) {
        if (specBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            spec_ != null &&
            spec_ != io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance()) {
            getSpecBuilder().mergeFrom(value);
          } else {
            spec_ = value;
          }
        } else {
          specBuilder_.mergeFrom(value);
        }
        if (spec_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      public Builder clearSpec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressSpec.Builder getSpecBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder getSpecOrBuilder() {
        if (specBuilder_ != null) {
          return specBuilder_.getMessageOrBuilder();
        } else {
          return spec_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance() : spec_;
        }
      }
      /**
       * <pre>
       * spec is the desired state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressSpec spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressSpec, io.kubernetes.client.proto.V1Networking.IngressSpec.Builder, io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder> 
          getSpecFieldBuilder() {
        if (specBuilder_ == null) {
          specBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressSpec, io.kubernetes.client.proto.V1Networking.IngressSpec.Builder, io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder>(
                  getSpec(),
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        return specBuilder_;
      }

      private io.kubernetes.client.proto.V1Networking.IngressStatus status_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressStatus, io.kubernetes.client.proto.V1Networking.IngressStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder> statusBuilder_;
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       * @return Whether the status field is set.
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       * @return The status.
       */
      public io.kubernetes.client.proto.V1Networking.IngressStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_ == null ? io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance() : status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      public Builder setStatus(io.kubernetes.client.proto.V1Networking.IngressStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      public Builder setStatus(
          io.kubernetes.client.proto.V1Networking.IngressStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      public Builder mergeStatus(io.kubernetes.client.proto.V1Networking.IngressStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            status_ != null &&
            status_ != io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance()) {
            getStatusBuilder().mergeFrom(value);
          } else {
            status_ = value;
          }
        } else {
          statusBuilder_.mergeFrom(value);
        }
        if (status_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000004);
        status_ = null;
        if (statusBuilder_ != null) {
          statusBuilder_.dispose();
          statusBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance() : status_;
        }
      }
      /**
       * <pre>
       * status is the current state of the Ingress.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressStatus status = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressStatus, io.kubernetes.client.proto.V1Networking.IngressStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressStatus, io.kubernetes.client.proto.V1Networking.IngressStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder>(
                  getStatus(),
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.Ingress)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.Ingress)
    private static final io.kubernetes.client.proto.V1Networking.Ingress DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.Ingress();
    }

    public static io.kubernetes.client.proto.V1Networking.Ingress getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Ingress>
        PARSER = new com.google.protobuf.AbstractParser<Ingress>() {
      @java.lang.Override
      public Ingress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Ingress> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Ingress> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.Ingress getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressBackendOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressBackend)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * service references a service as a backend.
     * This is a mutually exclusive setting with "Resource".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
     * @return Whether the service field is set.
     */
    boolean hasService();
    /**
     * <pre>
     * service references a service as a backend.
     * This is a mutually exclusive setting with "Resource".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
     * @return The service.
     */
    io.kubernetes.client.proto.V1Networking.IngressServiceBackend getService();
    /**
     * <pre>
     * service references a service as a backend.
     * This is a mutually exclusive setting with "Resource".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder getServiceOrBuilder();

    /**
     * <pre>
     * resource is an ObjectRef to another Kubernetes resource in the namespace
     * of the Ingress object. If resource is specified, a service.Name and
     * service.Port must not be specified.
     * This is a mutually exclusive setting with "Service".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
     * @return Whether the resource field is set.
     */
    boolean hasResource();
    /**
     * <pre>
     * resource is an ObjectRef to another Kubernetes resource in the namespace
     * of the Ingress object. If resource is specified, a service.Name and
     * service.Port must not be specified.
     * This is a mutually exclusive setting with "Service".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
     * @return The resource.
     */
    io.kubernetes.client.proto.V1.TypedLocalObjectReference getResource();
    /**
     * <pre>
     * resource is an ObjectRef to another Kubernetes resource in the namespace
     * of the Ingress object. If resource is specified, a service.Name and
     * service.Port must not be specified.
     * This is a mutually exclusive setting with "Service".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
     */
    io.kubernetes.client.proto.V1.TypedLocalObjectReferenceOrBuilder getResourceOrBuilder();
  }
  /**
   * <pre>
   * IngressBackend describes all endpoints for a given service and port.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressBackend}
   */
  public static final class IngressBackend extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressBackend)
      IngressBackendOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressBackend.class.getName());
    }
    // Use IngressBackend.newBuilder() to construct.
    private IngressBackend(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressBackend() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressBackend_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressBackend_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressBackend.class, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder.class);
    }

    private int bitField0_;
    public static final int SERVICE_FIELD_NUMBER = 4;
    private io.kubernetes.client.proto.V1Networking.IngressServiceBackend service_;
    /**
     * <pre>
     * service references a service as a backend.
     * This is a mutually exclusive setting with "Resource".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
     * @return Whether the service field is set.
     */
    @java.lang.Override
    public boolean hasService() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * service references a service as a backend.
     * This is a mutually exclusive setting with "Resource".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
     * @return The service.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressServiceBackend getService() {
      return service_ == null ? io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance() : service_;
    }
    /**
     * <pre>
     * service references a service as a backend.
     * This is a mutually exclusive setting with "Resource".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder getServiceOrBuilder() {
      return service_ == null ? io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance() : service_;
    }

    public static final int RESOURCE_FIELD_NUMBER = 3;
    private io.kubernetes.client.proto.V1.TypedLocalObjectReference resource_;
    /**
     * <pre>
     * resource is an ObjectRef to another Kubernetes resource in the namespace
     * of the Ingress object. If resource is specified, a service.Name and
     * service.Port must not be specified.
     * This is a mutually exclusive setting with "Service".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
     * @return Whether the resource field is set.
     */
    @java.lang.Override
    public boolean hasResource() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * resource is an ObjectRef to another Kubernetes resource in the namespace
     * of the Ingress object. If resource is specified, a service.Name and
     * service.Port must not be specified.
     * This is a mutually exclusive setting with "Service".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
     * @return The resource.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1.TypedLocalObjectReference getResource() {
      return resource_ == null ? io.kubernetes.client.proto.V1.TypedLocalObjectReference.getDefaultInstance() : resource_;
    }
    /**
     * <pre>
     * resource is an ObjectRef to another Kubernetes resource in the namespace
     * of the Ingress object. If resource is specified, a service.Name and
     * service.Port must not be specified.
     * This is a mutually exclusive setting with "Service".
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1.TypedLocalObjectReferenceOrBuilder getResourceOrBuilder() {
      return resource_ == null ? io.kubernetes.client.proto.V1.TypedLocalObjectReference.getDefaultInstance() : resource_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getResource());
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(4, getService());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getResource());
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getService());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressBackend)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressBackend other = (io.kubernetes.client.proto.V1Networking.IngressBackend) obj;

      if (hasService() != other.hasService()) return false;
      if (hasService()) {
        if (!getService()
            .equals(other.getService())) return false;
      }
      if (hasResource() != other.hasResource()) return false;
      if (hasResource()) {
        if (!getResource()
            .equals(other.getResource())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasService()) {
        hash = (37 * hash) + SERVICE_FIELD_NUMBER;
        hash = (53 * hash) + getService().hashCode();
      }
      if (hasResource()) {
        hash = (37 * hash) + RESOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getResource().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressBackend parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressBackend prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressBackend describes all endpoints for a given service and port.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressBackend}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressBackend)
        io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressBackend_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressBackend_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressBackend.class, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressBackend.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getServiceFieldBuilder();
          getResourceFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        service_ = null;
        if (serviceBuilder_ != null) {
          serviceBuilder_.dispose();
          serviceBuilder_ = null;
        }
        resource_ = null;
        if (resourceBuilder_ != null) {
          resourceBuilder_.dispose();
          resourceBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressBackend_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressBackend getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressBackend build() {
        io.kubernetes.client.proto.V1Networking.IngressBackend result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressBackend buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressBackend result = new io.kubernetes.client.proto.V1Networking.IngressBackend(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressBackend result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.service_ = serviceBuilder_ == null
              ? service_
              : serviceBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.resource_ = resourceBuilder_ == null
              ? resource_
              : resourceBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressBackend) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressBackend)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressBackend other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance()) return this;
        if (other.hasService()) {
          mergeService(other.getService());
        }
        if (other.hasResource()) {
          mergeResource(other.getResource());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 26: {
                input.readMessage(
                    getResourceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getServiceFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.V1Networking.IngressServiceBackend service_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressServiceBackend, io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder> serviceBuilder_;
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       * @return Whether the service field is set.
       */
      public boolean hasService() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       * @return The service.
       */
      public io.kubernetes.client.proto.V1Networking.IngressServiceBackend getService() {
        if (serviceBuilder_ == null) {
          return service_ == null ? io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance() : service_;
        } else {
          return serviceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      public Builder setService(io.kubernetes.client.proto.V1Networking.IngressServiceBackend value) {
        if (serviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          service_ = value;
        } else {
          serviceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      public Builder setService(
          io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder builderForValue) {
        if (serviceBuilder_ == null) {
          service_ = builderForValue.build();
        } else {
          serviceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      public Builder mergeService(io.kubernetes.client.proto.V1Networking.IngressServiceBackend value) {
        if (serviceBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            service_ != null &&
            service_ != io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance()) {
            getServiceBuilder().mergeFrom(value);
          } else {
            service_ = value;
          }
        } else {
          serviceBuilder_.mergeFrom(value);
        }
        if (service_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      public Builder clearService() {
        bitField0_ = (bitField0_ & ~0x00000001);
        service_ = null;
        if (serviceBuilder_ != null) {
          serviceBuilder_.dispose();
          serviceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder getServiceBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getServiceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder getServiceOrBuilder() {
        if (serviceBuilder_ != null) {
          return serviceBuilder_.getMessageOrBuilder();
        } else {
          return service_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance() : service_;
        }
      }
      /**
       * <pre>
       * service references a service as a backend.
       * This is a mutually exclusive setting with "Resource".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressServiceBackend service = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressServiceBackend, io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder> 
          getServiceFieldBuilder() {
        if (serviceBuilder_ == null) {
          serviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressServiceBackend, io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder>(
                  getService(),
                  getParentForChildren(),
                  isClean());
          service_ = null;
        }
        return serviceBuilder_;
      }

      private io.kubernetes.client.proto.V1.TypedLocalObjectReference resource_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1.TypedLocalObjectReference, io.kubernetes.client.proto.V1.TypedLocalObjectReference.Builder, io.kubernetes.client.proto.V1.TypedLocalObjectReferenceOrBuilder> resourceBuilder_;
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       * @return Whether the resource field is set.
       */
      public boolean hasResource() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       * @return The resource.
       */
      public io.kubernetes.client.proto.V1.TypedLocalObjectReference getResource() {
        if (resourceBuilder_ == null) {
          return resource_ == null ? io.kubernetes.client.proto.V1.TypedLocalObjectReference.getDefaultInstance() : resource_;
        } else {
          return resourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      public Builder setResource(io.kubernetes.client.proto.V1.TypedLocalObjectReference value) {
        if (resourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          resource_ = value;
        } else {
          resourceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      public Builder setResource(
          io.kubernetes.client.proto.V1.TypedLocalObjectReference.Builder builderForValue) {
        if (resourceBuilder_ == null) {
          resource_ = builderForValue.build();
        } else {
          resourceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      public Builder mergeResource(io.kubernetes.client.proto.V1.TypedLocalObjectReference value) {
        if (resourceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            resource_ != null &&
            resource_ != io.kubernetes.client.proto.V1.TypedLocalObjectReference.getDefaultInstance()) {
            getResourceBuilder().mergeFrom(value);
          } else {
            resource_ = value;
          }
        } else {
          resourceBuilder_.mergeFrom(value);
        }
        if (resource_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      public Builder clearResource() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resource_ = null;
        if (resourceBuilder_ != null) {
          resourceBuilder_.dispose();
          resourceBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      public io.kubernetes.client.proto.V1.TypedLocalObjectReference.Builder getResourceBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getResourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      public io.kubernetes.client.proto.V1.TypedLocalObjectReferenceOrBuilder getResourceOrBuilder() {
        if (resourceBuilder_ != null) {
          return resourceBuilder_.getMessageOrBuilder();
        } else {
          return resource_ == null ?
              io.kubernetes.client.proto.V1.TypedLocalObjectReference.getDefaultInstance() : resource_;
        }
      }
      /**
       * <pre>
       * resource is an ObjectRef to another Kubernetes resource in the namespace
       * of the Ingress object. If resource is specified, a service.Name and
       * service.Port must not be specified.
       * This is a mutually exclusive setting with "Service".
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.core.v1.TypedLocalObjectReference resource = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1.TypedLocalObjectReference, io.kubernetes.client.proto.V1.TypedLocalObjectReference.Builder, io.kubernetes.client.proto.V1.TypedLocalObjectReferenceOrBuilder> 
          getResourceFieldBuilder() {
        if (resourceBuilder_ == null) {
          resourceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1.TypedLocalObjectReference, io.kubernetes.client.proto.V1.TypedLocalObjectReference.Builder, io.kubernetes.client.proto.V1.TypedLocalObjectReferenceOrBuilder>(
                  getResource(),
                  getParentForChildren(),
                  isClean());
          resource_ = null;
        }
        return resourceBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressBackend)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressBackend)
    private static final io.kubernetes.client.proto.V1Networking.IngressBackend DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressBackend();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressBackend getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressBackend>
        PARSER = new com.google.protobuf.AbstractParser<IngressBackend>() {
      @java.lang.Override
      public IngressBackend parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressBackend> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressBackend> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressBackend getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressClassOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressClass)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ObjectMeta getMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * spec is the desired state of the IngressClass.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    boolean hasSpec();
    /**
     * <pre>
     * spec is the desired state of the IngressClass.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
     * @return The spec.
     */
    io.kubernetes.client.proto.V1Networking.IngressClassSpec getSpec();
    /**
     * <pre>
     * spec is the desired state of the IngressClass.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder getSpecOrBuilder();
  }
  /**
   * <pre>
   * IngressClass represents the class of the Ingress, referenced by the Ingress
   * Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be
   * used to indicate that an IngressClass should be considered default. When a
   * single IngressClass resource has this annotation set to true, new Ingress
   * resources without a class specified will be assigned this default class.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressClass}
   */
  public static final class IngressClass extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressClass)
      IngressClassOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressClass.class.getName());
    }
    // Use IngressClass.newBuilder() to construct.
    private IngressClass(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressClass() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClass_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClass_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressClass.class, io.kubernetes.client.proto.V1Networking.IngressClass.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }

    public static final int SPEC_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.IngressClassSpec spec_;
    /**
     * <pre>
     * spec is the desired state of the IngressClass.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    @java.lang.Override
    public boolean hasSpec() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * spec is the desired state of the IngressClass.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
     * @return The spec.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassSpec getSpec() {
      return spec_ == null ? io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance() : spec_;
    }
    /**
     * <pre>
     * spec is the desired state of the IngressClass.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder getSpecOrBuilder() {
      return spec_ == null ? io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance() : spec_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSpec());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSpec());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressClass)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressClass other = (io.kubernetes.client.proto.V1Networking.IngressClass) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasSpec() != other.hasSpec()) return false;
      if (hasSpec()) {
        if (!getSpec()
            .equals(other.getSpec())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasSpec()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getSpec().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClass parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClass parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClass parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressClass prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressClass represents the class of the Ingress, referenced by the Ingress
     * Spec. The `ingressclass.kubernetes.io/is-default-class` annotation can be
     * used to indicate that an IngressClass should be considered default. When a
     * single IngressClass resource has this annotation set to true, new Ingress
     * resources without a class specified will be assigned this default class.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressClass}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressClass)
        io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClass_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClass_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressClass.class, io.kubernetes.client.proto.V1Networking.IngressClass.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressClass.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getSpecFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClass_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClass getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressClass.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClass build() {
        io.kubernetes.client.proto.V1Networking.IngressClass result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClass buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressClass result = new io.kubernetes.client.proto.V1Networking.IngressClass(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressClass result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.spec_ = specBuilder_ == null
              ? spec_
              : specBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressClass) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressClass)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressClass other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressClass.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasSpec()) {
          mergeSpec(other.getSpec());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSpecFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ObjectMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private io.kubernetes.client.proto.V1Networking.IngressClassSpec spec_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressClassSpec, io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder, io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder> specBuilder_;
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       * @return Whether the spec field is set.
       */
      public boolean hasSpec() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       * @return The spec.
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassSpec getSpec() {
        if (specBuilder_ == null) {
          return spec_ == null ? io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance() : spec_;
        } else {
          return specBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      public Builder setSpec(io.kubernetes.client.proto.V1Networking.IngressClassSpec value) {
        if (specBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
        } else {
          specBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      public Builder setSpec(
          io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder builderForValue) {
        if (specBuilder_ == null) {
          spec_ = builderForValue.build();
        } else {
          specBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      public Builder mergeSpec(io.kubernetes.client.proto.V1Networking.IngressClassSpec value) {
        if (specBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            spec_ != null &&
            spec_ != io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance()) {
            getSpecBuilder().mergeFrom(value);
          } else {
            spec_ = value;
          }
        } else {
          specBuilder_.mergeFrom(value);
        }
        if (spec_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      public Builder clearSpec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder getSpecBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder getSpecOrBuilder() {
        if (specBuilder_ != null) {
          return specBuilder_.getMessageOrBuilder();
        } else {
          return spec_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance() : spec_;
        }
      }
      /**
       * <pre>
       * spec is the desired state of the IngressClass.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassSpec spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressClassSpec, io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder, io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder> 
          getSpecFieldBuilder() {
        if (specBuilder_ == null) {
          specBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressClassSpec, io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder, io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder>(
                  getSpec(),
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        return specBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressClass)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClass)
    private static final io.kubernetes.client.proto.V1Networking.IngressClass DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressClass();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClass getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressClass>
        PARSER = new com.google.protobuf.AbstractParser<IngressClass>() {
      @java.lang.Override
      public IngressClass parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressClass> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressClass> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClass getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressClassListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressClassList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard list metadata.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Standard list metadata.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ListMeta getMetadata();
    /**
     * <pre>
     * Standard list metadata.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.IngressClass> 
        getItemsList();
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressClass getItems(int index);
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    int getItemsCount();
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * IngressClassList is a collection of IngressClasses.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressClassList}
   */
  public static final class IngressClassList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressClassList)
      IngressClassListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressClassList.class.getName());
    }
    // Use IngressClassList.newBuilder() to construct.
    private IngressClassList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressClassList() {
      items_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressClassList.class, io.kubernetes.client.proto.V1Networking.IngressClassList.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ListMeta metadata_;
    /**
     * <pre>
     * Standard list metadata.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Standard list metadata.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Standard list metadata.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.IngressClass> items_;
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.IngressClass> getItemsList() {
      return items_;
    }
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    @java.lang.Override
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClass getItems(int index) {
      return items_.get(index);
    }
    /**
     * <pre>
     * items is the list of IngressClasses.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressClassList)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressClassList other = (io.kubernetes.client.proto.V1Networking.IngressClassList) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressClassList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressClassList is a collection of IngressClasses.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressClassList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressClassList)
        io.kubernetes.client.proto.V1Networking.IngressClassListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressClassList.class, io.kubernetes.client.proto.V1Networking.IngressClassList.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressClassList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
        } else {
          items_ = null;
          itemsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassList_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassList getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressClassList.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassList build() {
        io.kubernetes.client.proto.V1Networking.IngressClassList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassList buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressClassList result = new io.kubernetes.client.proto.V1Networking.IngressClassList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.IngressClassList result) {
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressClassList result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressClassList) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressClassList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressClassList other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressClassList.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.IngressClass m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.IngressClass.parser(),
                        extensionRegistry);
                if (itemsBuilder_ == null) {
                  ensureItemsIsMutable();
                  items_.add(m);
                } else {
                  itemsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ListMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ListMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Standard list metadata.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.IngressClass> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          items_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.IngressClass>(items_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressClass, io.kubernetes.client.proto.V1Networking.IngressClass.Builder, io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder> itemsBuilder_;

      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressClass> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClass getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Networking.IngressClass value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Networking.IngressClass.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder addItems(io.kubernetes.client.proto.V1Networking.IngressClass value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Networking.IngressClass value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder addItems(
          io.kubernetes.client.proto.V1Networking.IngressClass.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Networking.IngressClass.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.IngressClass> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClass.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClass.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.IngressClass.getDefaultInstance());
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClass.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.IngressClass.getDefaultInstance());
      }
      /**
       * <pre>
       * items is the list of IngressClasses.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressClass items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressClass.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressClass, io.kubernetes.client.proto.V1Networking.IngressClass.Builder, io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressClass, io.kubernetes.client.proto.V1Networking.IngressClass.Builder, io.kubernetes.client.proto.V1Networking.IngressClassOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressClassList)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClassList)
    private static final io.kubernetes.client.proto.V1Networking.IngressClassList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressClassList();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressClassList>
        PARSER = new com.google.protobuf.AbstractParser<IngressClassList>() {
      @java.lang.Override
      public IngressClassList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressClassList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressClassList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressClassParametersReferenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressClassParametersReference)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * apiGroup is the group for the resource being referenced. If APIGroup is
     * not specified, the specified Kind must be in the core API group. For any
     * other third-party types, APIGroup is required.
     * +optional
     * </pre>
     *
     * <code>optional string aPIGroup = 1;</code>
     * @return Whether the aPIGroup field is set.
     */
    boolean hasAPIGroup();
    /**
     * <pre>
     * apiGroup is the group for the resource being referenced. If APIGroup is
     * not specified, the specified Kind must be in the core API group. For any
     * other third-party types, APIGroup is required.
     * +optional
     * </pre>
     *
     * <code>optional string aPIGroup = 1;</code>
     * @return The aPIGroup.
     */
    java.lang.String getAPIGroup();
    /**
     * <pre>
     * apiGroup is the group for the resource being referenced. If APIGroup is
     * not specified, the specified Kind must be in the core API group. For any
     * other third-party types, APIGroup is required.
     * +optional
     * </pre>
     *
     * <code>optional string aPIGroup = 1;</code>
     * @return The bytes for aPIGroup.
     */
    com.google.protobuf.ByteString
        getAPIGroupBytes();

    /**
     * <pre>
     * kind is the type of resource being referenced.
     * </pre>
     *
     * <code>optional string kind = 2;</code>
     * @return Whether the kind field is set.
     */
    boolean hasKind();
    /**
     * <pre>
     * kind is the type of resource being referenced.
     * </pre>
     *
     * <code>optional string kind = 2;</code>
     * @return The kind.
     */
    java.lang.String getKind();
    /**
     * <pre>
     * kind is the type of resource being referenced.
     * </pre>
     *
     * <code>optional string kind = 2;</code>
     * @return The bytes for kind.
     */
    com.google.protobuf.ByteString
        getKindBytes();

    /**
     * <pre>
     * name is the name of resource being referenced.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * name is the name of resource being referenced.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name is the name of resource being referenced.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * scope represents if this refers to a cluster or namespace scoped resource.
     * This may be set to "Cluster" (default) or "Namespace".
     * +optional
     * </pre>
     *
     * <code>optional string scope = 4;</code>
     * @return Whether the scope field is set.
     */
    boolean hasScope();
    /**
     * <pre>
     * scope represents if this refers to a cluster or namespace scoped resource.
     * This may be set to "Cluster" (default) or "Namespace".
     * +optional
     * </pre>
     *
     * <code>optional string scope = 4;</code>
     * @return The scope.
     */
    java.lang.String getScope();
    /**
     * <pre>
     * scope represents if this refers to a cluster or namespace scoped resource.
     * This may be set to "Cluster" (default) or "Namespace".
     * +optional
     * </pre>
     *
     * <code>optional string scope = 4;</code>
     * @return The bytes for scope.
     */
    com.google.protobuf.ByteString
        getScopeBytes();

    /**
     * <pre>
     * namespace is the namespace of the resource being referenced. This field is
     * required when scope is set to "Namespace" and must be unset when scope is set to
     * "Cluster".
     * +optional
     * </pre>
     *
     * <code>optional string namespace = 5;</code>
     * @return Whether the namespace field is set.
     */
    boolean hasNamespace();
    /**
     * <pre>
     * namespace is the namespace of the resource being referenced. This field is
     * required when scope is set to "Namespace" and must be unset when scope is set to
     * "Cluster".
     * +optional
     * </pre>
     *
     * <code>optional string namespace = 5;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     * namespace is the namespace of the resource being referenced. This field is
     * required when scope is set to "Namespace" and must be unset when scope is set to
     * "Cluster".
     * +optional
     * </pre>
     *
     * <code>optional string namespace = 5;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();
  }
  /**
   * <pre>
   * IngressClassParametersReference identifies an API object. This can be used
   * to specify a cluster or namespace-scoped resource.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressClassParametersReference}
   */
  public static final class IngressClassParametersReference extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressClassParametersReference)
      IngressClassParametersReferenceOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressClassParametersReference.class.getName());
    }
    // Use IngressClassParametersReference.newBuilder() to construct.
    private IngressClassParametersReference(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressClassParametersReference() {
      aPIGroup_ = "";
      kind_ = "";
      name_ = "";
      scope_ = "";
      namespace_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.class, io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder.class);
    }

    private int bitField0_;
    public static final int APIGROUP_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object aPIGroup_ = "";
    /**
     * <pre>
     * apiGroup is the group for the resource being referenced. If APIGroup is
     * not specified, the specified Kind must be in the core API group. For any
     * other third-party types, APIGroup is required.
     * +optional
     * </pre>
     *
     * <code>optional string aPIGroup = 1;</code>
     * @return Whether the aPIGroup field is set.
     */
    @java.lang.Override
    public boolean hasAPIGroup() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * apiGroup is the group for the resource being referenced. If APIGroup is
     * not specified, the specified Kind must be in the core API group. For any
     * other third-party types, APIGroup is required.
     * +optional
     * </pre>
     *
     * <code>optional string aPIGroup = 1;</code>
     * @return The aPIGroup.
     */
    @java.lang.Override
    public java.lang.String getAPIGroup() {
      java.lang.Object ref = aPIGroup_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          aPIGroup_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * apiGroup is the group for the resource being referenced. If APIGroup is
     * not specified, the specified Kind must be in the core API group. For any
     * other third-party types, APIGroup is required.
     * +optional
     * </pre>
     *
     * <code>optional string aPIGroup = 1;</code>
     * @return The bytes for aPIGroup.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAPIGroupBytes() {
      java.lang.Object ref = aPIGroup_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        aPIGroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KIND_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object kind_ = "";
    /**
     * <pre>
     * kind is the type of resource being referenced.
     * </pre>
     *
     * <code>optional string kind = 2;</code>
     * @return Whether the kind field is set.
     */
    @java.lang.Override
    public boolean hasKind() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * kind is the type of resource being referenced.
     * </pre>
     *
     * <code>optional string kind = 2;</code>
     * @return The kind.
     */
    @java.lang.Override
    public java.lang.String getKind() {
      java.lang.Object ref = kind_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          kind_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * kind is the type of resource being referenced.
     * </pre>
     *
     * <code>optional string kind = 2;</code>
     * @return The bytes for kind.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKindBytes() {
      java.lang.Object ref = kind_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        kind_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * name is the name of resource being referenced.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * name is the name of resource being referenced.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * name is the name of resource being referenced.
     * </pre>
     *
     * <code>optional string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCOPE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object scope_ = "";
    /**
     * <pre>
     * scope represents if this refers to a cluster or namespace scoped resource.
     * This may be set to "Cluster" (default) or "Namespace".
     * +optional
     * </pre>
     *
     * <code>optional string scope = 4;</code>
     * @return Whether the scope field is set.
     */
    @java.lang.Override
    public boolean hasScope() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * scope represents if this refers to a cluster or namespace scoped resource.
     * This may be set to "Cluster" (default) or "Namespace".
     * +optional
     * </pre>
     *
     * <code>optional string scope = 4;</code>
     * @return The scope.
     */
    @java.lang.Override
    public java.lang.String getScope() {
      java.lang.Object ref = scope_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          scope_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * scope represents if this refers to a cluster or namespace scoped resource.
     * This may be set to "Cluster" (default) or "Namespace".
     * +optional
     * </pre>
     *
     * <code>optional string scope = 4;</code>
     * @return The bytes for scope.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getScopeBytes() {
      java.lang.Object ref = scope_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scope_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMESPACE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object namespace_ = "";
    /**
     * <pre>
     * namespace is the namespace of the resource being referenced. This field is
     * required when scope is set to "Namespace" and must be unset when scope is set to
     * "Cluster".
     * +optional
     * </pre>
     *
     * <code>optional string namespace = 5;</code>
     * @return Whether the namespace field is set.
     */
    @java.lang.Override
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * namespace is the namespace of the resource being referenced. This field is
     * required when scope is set to "Namespace" and must be unset when scope is set to
     * "Cluster".
     * +optional
     * </pre>
     *
     * <code>optional string namespace = 5;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * namespace is the namespace of the resource being referenced. This field is
     * required when scope is set to "Namespace" and must be unset when scope is set to
     * "Cluster".
     * +optional
     * </pre>
     *
     * <code>optional string namespace = 5;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, aPIGroup_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, kind_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, name_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, scope_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, namespace_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, aPIGroup_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, kind_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, name_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, scope_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, namespace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressClassParametersReference)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressClassParametersReference other = (io.kubernetes.client.proto.V1Networking.IngressClassParametersReference) obj;

      if (hasAPIGroup() != other.hasAPIGroup()) return false;
      if (hasAPIGroup()) {
        if (!getAPIGroup()
            .equals(other.getAPIGroup())) return false;
      }
      if (hasKind() != other.hasKind()) return false;
      if (hasKind()) {
        if (!getKind()
            .equals(other.getKind())) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasScope() != other.hasScope()) return false;
      if (hasScope()) {
        if (!getScope()
            .equals(other.getScope())) return false;
      }
      if (hasNamespace() != other.hasNamespace()) return false;
      if (hasNamespace()) {
        if (!getNamespace()
            .equals(other.getNamespace())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAPIGroup()) {
        hash = (37 * hash) + APIGROUP_FIELD_NUMBER;
        hash = (53 * hash) + getAPIGroup().hashCode();
      }
      if (hasKind()) {
        hash = (37 * hash) + KIND_FIELD_NUMBER;
        hash = (53 * hash) + getKind().hashCode();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasScope()) {
        hash = (37 * hash) + SCOPE_FIELD_NUMBER;
        hash = (53 * hash) + getScope().hashCode();
      }
      if (hasNamespace()) {
        hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
        hash = (53 * hash) + getNamespace().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressClassParametersReference prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressClassParametersReference identifies an API object. This can be used
     * to specify a cluster or namespace-scoped resource.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressClassParametersReference}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressClassParametersReference)
        io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.class, io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        aPIGroup_ = "";
        kind_ = "";
        name_ = "";
        scope_ = "";
        namespace_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference build() {
        io.kubernetes.client.proto.V1Networking.IngressClassParametersReference result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressClassParametersReference result = new io.kubernetes.client.proto.V1Networking.IngressClassParametersReference(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressClassParametersReference result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.aPIGroup_ = aPIGroup_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.kind_ = kind_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.scope_ = scope_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.namespace_ = namespace_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressClassParametersReference) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressClassParametersReference)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressClassParametersReference other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance()) return this;
        if (other.hasAPIGroup()) {
          aPIGroup_ = other.aPIGroup_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasKind()) {
          kind_ = other.kind_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasScope()) {
          scope_ = other.scope_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasNamespace()) {
          namespace_ = other.namespace_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                aPIGroup_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                kind_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                scope_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                namespace_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object aPIGroup_ = "";
      /**
       * <pre>
       * apiGroup is the group for the resource being referenced. If APIGroup is
       * not specified, the specified Kind must be in the core API group. For any
       * other third-party types, APIGroup is required.
       * +optional
       * </pre>
       *
       * <code>optional string aPIGroup = 1;</code>
       * @return Whether the aPIGroup field is set.
       */
      public boolean hasAPIGroup() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * apiGroup is the group for the resource being referenced. If APIGroup is
       * not specified, the specified Kind must be in the core API group. For any
       * other third-party types, APIGroup is required.
       * +optional
       * </pre>
       *
       * <code>optional string aPIGroup = 1;</code>
       * @return The aPIGroup.
       */
      public java.lang.String getAPIGroup() {
        java.lang.Object ref = aPIGroup_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            aPIGroup_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * apiGroup is the group for the resource being referenced. If APIGroup is
       * not specified, the specified Kind must be in the core API group. For any
       * other third-party types, APIGroup is required.
       * +optional
       * </pre>
       *
       * <code>optional string aPIGroup = 1;</code>
       * @return The bytes for aPIGroup.
       */
      public com.google.protobuf.ByteString
          getAPIGroupBytes() {
        java.lang.Object ref = aPIGroup_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          aPIGroup_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * apiGroup is the group for the resource being referenced. If APIGroup is
       * not specified, the specified Kind must be in the core API group. For any
       * other third-party types, APIGroup is required.
       * +optional
       * </pre>
       *
       * <code>optional string aPIGroup = 1;</code>
       * @param value The aPIGroup to set.
       * @return This builder for chaining.
       */
      public Builder setAPIGroup(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        aPIGroup_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * apiGroup is the group for the resource being referenced. If APIGroup is
       * not specified, the specified Kind must be in the core API group. For any
       * other third-party types, APIGroup is required.
       * +optional
       * </pre>
       *
       * <code>optional string aPIGroup = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAPIGroup() {
        aPIGroup_ = getDefaultInstance().getAPIGroup();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * apiGroup is the group for the resource being referenced. If APIGroup is
       * not specified, the specified Kind must be in the core API group. For any
       * other third-party types, APIGroup is required.
       * +optional
       * </pre>
       *
       * <code>optional string aPIGroup = 1;</code>
       * @param value The bytes for aPIGroup to set.
       * @return This builder for chaining.
       */
      public Builder setAPIGroupBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        aPIGroup_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object kind_ = "";
      /**
       * <pre>
       * kind is the type of resource being referenced.
       * </pre>
       *
       * <code>optional string kind = 2;</code>
       * @return Whether the kind field is set.
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * kind is the type of resource being referenced.
       * </pre>
       *
       * <code>optional string kind = 2;</code>
       * @return The kind.
       */
      public java.lang.String getKind() {
        java.lang.Object ref = kind_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            kind_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * kind is the type of resource being referenced.
       * </pre>
       *
       * <code>optional string kind = 2;</code>
       * @return The bytes for kind.
       */
      public com.google.protobuf.ByteString
          getKindBytes() {
        java.lang.Object ref = kind_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          kind_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * kind is the type of resource being referenced.
       * </pre>
       *
       * <code>optional string kind = 2;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        kind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kind is the type of resource being referenced.
       * </pre>
       *
       * <code>optional string kind = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        kind_ = getDefaultInstance().getKind();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * kind is the type of resource being referenced.
       * </pre>
       *
       * <code>optional string kind = 2;</code>
       * @param value The bytes for kind to set.
       * @return This builder for chaining.
       */
      public Builder setKindBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        kind_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name is the name of resource being referenced.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * name is the name of resource being referenced.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name is the name of resource being referenced.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name is the name of resource being referenced.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is the name of resource being referenced.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is the name of resource being referenced.
       * </pre>
       *
       * <code>optional string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object scope_ = "";
      /**
       * <pre>
       * scope represents if this refers to a cluster or namespace scoped resource.
       * This may be set to "Cluster" (default) or "Namespace".
       * +optional
       * </pre>
       *
       * <code>optional string scope = 4;</code>
       * @return Whether the scope field is set.
       */
      public boolean hasScope() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * scope represents if this refers to a cluster or namespace scoped resource.
       * This may be set to "Cluster" (default) or "Namespace".
       * +optional
       * </pre>
       *
       * <code>optional string scope = 4;</code>
       * @return The scope.
       */
      public java.lang.String getScope() {
        java.lang.Object ref = scope_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            scope_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * scope represents if this refers to a cluster or namespace scoped resource.
       * This may be set to "Cluster" (default) or "Namespace".
       * +optional
       * </pre>
       *
       * <code>optional string scope = 4;</code>
       * @return The bytes for scope.
       */
      public com.google.protobuf.ByteString
          getScopeBytes() {
        java.lang.Object ref = scope_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          scope_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * scope represents if this refers to a cluster or namespace scoped resource.
       * This may be set to "Cluster" (default) or "Namespace".
       * +optional
       * </pre>
       *
       * <code>optional string scope = 4;</code>
       * @param value The scope to set.
       * @return This builder for chaining.
       */
      public Builder setScope(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        scope_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * scope represents if this refers to a cluster or namespace scoped resource.
       * This may be set to "Cluster" (default) or "Namespace".
       * +optional
       * </pre>
       *
       * <code>optional string scope = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearScope() {
        scope_ = getDefaultInstance().getScope();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * scope represents if this refers to a cluster or namespace scoped resource.
       * This may be set to "Cluster" (default) or "Namespace".
       * +optional
       * </pre>
       *
       * <code>optional string scope = 4;</code>
       * @param value The bytes for scope to set.
       * @return This builder for chaining.
       */
      public Builder setScopeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        scope_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       * namespace is the namespace of the resource being referenced. This field is
       * required when scope is set to "Namespace" and must be unset when scope is set to
       * "Cluster".
       * +optional
       * </pre>
       *
       * <code>optional string namespace = 5;</code>
       * @return Whether the namespace field is set.
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * namespace is the namespace of the resource being referenced. This field is
       * required when scope is set to "Namespace" and must be unset when scope is set to
       * "Cluster".
       * +optional
       * </pre>
       *
       * <code>optional string namespace = 5;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * namespace is the namespace of the resource being referenced. This field is
       * required when scope is set to "Namespace" and must be unset when scope is set to
       * "Cluster".
       * +optional
       * </pre>
       *
       * <code>optional string namespace = 5;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * namespace is the namespace of the resource being referenced. This field is
       * required when scope is set to "Namespace" and must be unset when scope is set to
       * "Cluster".
       * +optional
       * </pre>
       *
       * <code>optional string namespace = 5;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        namespace_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace is the namespace of the resource being referenced. This field is
       * required when scope is set to "Namespace" and must be unset when scope is set to
       * "Cluster".
       * +optional
       * </pre>
       *
       * <code>optional string namespace = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        namespace_ = getDefaultInstance().getNamespace();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespace is the namespace of the resource being referenced. This field is
       * required when scope is set to "Namespace" and must be unset when scope is set to
       * "Cluster".
       * +optional
       * </pre>
       *
       * <code>optional string namespace = 5;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        namespace_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressClassParametersReference)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClassParametersReference)
    private static final io.kubernetes.client.proto.V1Networking.IngressClassParametersReference DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressClassParametersReference();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassParametersReference getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressClassParametersReference>
        PARSER = new com.google.protobuf.AbstractParser<IngressClassParametersReference>() {
      @java.lang.Override
      public IngressClassParametersReference parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressClassParametersReference> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressClassParametersReference> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressClassSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressClassSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * controller refers to the name of the controller that should handle this
     * class. This allows for different "flavors" that are controlled by the
     * same controller. For example, you may have different parameters for the
     * same implementing controller. This should be specified as a
     * domain-prefixed path no more than 250 characters in length, e.g.
     * "acme.io/ingress-controller". This field is immutable.
     * </pre>
     *
     * <code>optional string controller = 1;</code>
     * @return Whether the controller field is set.
     */
    boolean hasController();
    /**
     * <pre>
     * controller refers to the name of the controller that should handle this
     * class. This allows for different "flavors" that are controlled by the
     * same controller. For example, you may have different parameters for the
     * same implementing controller. This should be specified as a
     * domain-prefixed path no more than 250 characters in length, e.g.
     * "acme.io/ingress-controller". This field is immutable.
     * </pre>
     *
     * <code>optional string controller = 1;</code>
     * @return The controller.
     */
    java.lang.String getController();
    /**
     * <pre>
     * controller refers to the name of the controller that should handle this
     * class. This allows for different "flavors" that are controlled by the
     * same controller. For example, you may have different parameters for the
     * same implementing controller. This should be specified as a
     * domain-prefixed path no more than 250 characters in length, e.g.
     * "acme.io/ingress-controller". This field is immutable.
     * </pre>
     *
     * <code>optional string controller = 1;</code>
     * @return The bytes for controller.
     */
    com.google.protobuf.ByteString
        getControllerBytes();

    /**
     * <pre>
     * parameters is a link to a custom resource containing additional
     * configuration for the controller. This is optional if the controller does
     * not require extra parameters.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
     * @return Whether the parameters field is set.
     */
    boolean hasParameters();
    /**
     * <pre>
     * parameters is a link to a custom resource containing additional
     * configuration for the controller. This is optional if the controller does
     * not require extra parameters.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
     * @return The parameters.
     */
    io.kubernetes.client.proto.V1Networking.IngressClassParametersReference getParameters();
    /**
     * <pre>
     * parameters is a link to a custom resource containing additional
     * configuration for the controller. This is optional if the controller does
     * not require extra parameters.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder getParametersOrBuilder();
  }
  /**
   * <pre>
   * IngressClassSpec provides information about the class of an Ingress.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressClassSpec}
   */
  public static final class IngressClassSpec extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressClassSpec)
      IngressClassSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressClassSpec.class.getName());
    }
    // Use IngressClassSpec.newBuilder() to construct.
    private IngressClassSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressClassSpec() {
      controller_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressClassSpec.class, io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder.class);
    }

    private int bitField0_;
    public static final int CONTROLLER_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object controller_ = "";
    /**
     * <pre>
     * controller refers to the name of the controller that should handle this
     * class. This allows for different "flavors" that are controlled by the
     * same controller. For example, you may have different parameters for the
     * same implementing controller. This should be specified as a
     * domain-prefixed path no more than 250 characters in length, e.g.
     * "acme.io/ingress-controller". This field is immutable.
     * </pre>
     *
     * <code>optional string controller = 1;</code>
     * @return Whether the controller field is set.
     */
    @java.lang.Override
    public boolean hasController() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * controller refers to the name of the controller that should handle this
     * class. This allows for different "flavors" that are controlled by the
     * same controller. For example, you may have different parameters for the
     * same implementing controller. This should be specified as a
     * domain-prefixed path no more than 250 characters in length, e.g.
     * "acme.io/ingress-controller". This field is immutable.
     * </pre>
     *
     * <code>optional string controller = 1;</code>
     * @return The controller.
     */
    @java.lang.Override
    public java.lang.String getController() {
      java.lang.Object ref = controller_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          controller_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * controller refers to the name of the controller that should handle this
     * class. This allows for different "flavors" that are controlled by the
     * same controller. For example, you may have different parameters for the
     * same implementing controller. This should be specified as a
     * domain-prefixed path no more than 250 characters in length, e.g.
     * "acme.io/ingress-controller". This field is immutable.
     * </pre>
     *
     * <code>optional string controller = 1;</code>
     * @return The bytes for controller.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getControllerBytes() {
      java.lang.Object ref = controller_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        controller_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARAMETERS_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parameters_;
    /**
     * <pre>
     * parameters is a link to a custom resource containing additional
     * configuration for the controller. This is optional if the controller does
     * not require extra parameters.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
     * @return Whether the parameters field is set.
     */
    @java.lang.Override
    public boolean hasParameters() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * parameters is a link to a custom resource containing additional
     * configuration for the controller. This is optional if the controller does
     * not require extra parameters.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
     * @return The parameters.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference getParameters() {
      return parameters_ == null ? io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance() : parameters_;
    }
    /**
     * <pre>
     * parameters is a link to a custom resource containing additional
     * configuration for the controller. This is optional if the controller does
     * not require extra parameters.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder getParametersOrBuilder() {
      return parameters_ == null ? io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance() : parameters_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, controller_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getParameters());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, controller_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getParameters());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressClassSpec)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressClassSpec other = (io.kubernetes.client.proto.V1Networking.IngressClassSpec) obj;

      if (hasController() != other.hasController()) return false;
      if (hasController()) {
        if (!getController()
            .equals(other.getController())) return false;
      }
      if (hasParameters() != other.hasParameters()) return false;
      if (hasParameters()) {
        if (!getParameters()
            .equals(other.getParameters())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasController()) {
        hash = (37 * hash) + CONTROLLER_FIELD_NUMBER;
        hash = (53 * hash) + getController().hashCode();
      }
      if (hasParameters()) {
        hash = (37 * hash) + PARAMETERS_FIELD_NUMBER;
        hash = (53 * hash) + getParameters().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressClassSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressClassSpec provides information about the class of an Ingress.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressClassSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressClassSpec)
        io.kubernetes.client.proto.V1Networking.IngressClassSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressClassSpec.class, io.kubernetes.client.proto.V1Networking.IngressClassSpec.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressClassSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getParametersFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        controller_ = "";
        parameters_ = null;
        if (parametersBuilder_ != null) {
          parametersBuilder_.dispose();
          parametersBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressClassSpec_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassSpec getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassSpec build() {
        io.kubernetes.client.proto.V1Networking.IngressClassSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressClassSpec buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressClassSpec result = new io.kubernetes.client.proto.V1Networking.IngressClassSpec(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressClassSpec result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.controller_ = controller_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.parameters_ = parametersBuilder_ == null
              ? parameters_
              : parametersBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressClassSpec) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressClassSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressClassSpec other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressClassSpec.getDefaultInstance()) return this;
        if (other.hasController()) {
          controller_ = other.controller_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasParameters()) {
          mergeParameters(other.getParameters());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                controller_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getParametersFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object controller_ = "";
      /**
       * <pre>
       * controller refers to the name of the controller that should handle this
       * class. This allows for different "flavors" that are controlled by the
       * same controller. For example, you may have different parameters for the
       * same implementing controller. This should be specified as a
       * domain-prefixed path no more than 250 characters in length, e.g.
       * "acme.io/ingress-controller". This field is immutable.
       * </pre>
       *
       * <code>optional string controller = 1;</code>
       * @return Whether the controller field is set.
       */
      public boolean hasController() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * controller refers to the name of the controller that should handle this
       * class. This allows for different "flavors" that are controlled by the
       * same controller. For example, you may have different parameters for the
       * same implementing controller. This should be specified as a
       * domain-prefixed path no more than 250 characters in length, e.g.
       * "acme.io/ingress-controller". This field is immutable.
       * </pre>
       *
       * <code>optional string controller = 1;</code>
       * @return The controller.
       */
      public java.lang.String getController() {
        java.lang.Object ref = controller_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            controller_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * controller refers to the name of the controller that should handle this
       * class. This allows for different "flavors" that are controlled by the
       * same controller. For example, you may have different parameters for the
       * same implementing controller. This should be specified as a
       * domain-prefixed path no more than 250 characters in length, e.g.
       * "acme.io/ingress-controller". This field is immutable.
       * </pre>
       *
       * <code>optional string controller = 1;</code>
       * @return The bytes for controller.
       */
      public com.google.protobuf.ByteString
          getControllerBytes() {
        java.lang.Object ref = controller_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          controller_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * controller refers to the name of the controller that should handle this
       * class. This allows for different "flavors" that are controlled by the
       * same controller. For example, you may have different parameters for the
       * same implementing controller. This should be specified as a
       * domain-prefixed path no more than 250 characters in length, e.g.
       * "acme.io/ingress-controller". This field is immutable.
       * </pre>
       *
       * <code>optional string controller = 1;</code>
       * @param value The controller to set.
       * @return This builder for chaining.
       */
      public Builder setController(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        controller_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * controller refers to the name of the controller that should handle this
       * class. This allows for different "flavors" that are controlled by the
       * same controller. For example, you may have different parameters for the
       * same implementing controller. This should be specified as a
       * domain-prefixed path no more than 250 characters in length, e.g.
       * "acme.io/ingress-controller". This field is immutable.
       * </pre>
       *
       * <code>optional string controller = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearController() {
        controller_ = getDefaultInstance().getController();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * controller refers to the name of the controller that should handle this
       * class. This allows for different "flavors" that are controlled by the
       * same controller. For example, you may have different parameters for the
       * same implementing controller. This should be specified as a
       * domain-prefixed path no more than 250 characters in length, e.g.
       * "acme.io/ingress-controller". This field is immutable.
       * </pre>
       *
       * <code>optional string controller = 1;</code>
       * @param value The bytes for controller to set.
       * @return This builder for chaining.
       */
      public Builder setControllerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        controller_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.V1Networking.IngressClassParametersReference parameters_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressClassParametersReference, io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder, io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder> parametersBuilder_;
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       * @return Whether the parameters field is set.
       */
      public boolean hasParameters() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       * @return The parameters.
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference getParameters() {
        if (parametersBuilder_ == null) {
          return parameters_ == null ? io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance() : parameters_;
        } else {
          return parametersBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      public Builder setParameters(io.kubernetes.client.proto.V1Networking.IngressClassParametersReference value) {
        if (parametersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parameters_ = value;
        } else {
          parametersBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      public Builder setParameters(
          io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder builderForValue) {
        if (parametersBuilder_ == null) {
          parameters_ = builderForValue.build();
        } else {
          parametersBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      public Builder mergeParameters(io.kubernetes.client.proto.V1Networking.IngressClassParametersReference value) {
        if (parametersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            parameters_ != null &&
            parameters_ != io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance()) {
            getParametersBuilder().mergeFrom(value);
          } else {
            parameters_ = value;
          }
        } else {
          parametersBuilder_.mergeFrom(value);
        }
        if (parameters_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000002);
        parameters_ = null;
        if (parametersBuilder_ != null) {
          parametersBuilder_.dispose();
          parametersBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder getParametersBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getParametersFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder getParametersOrBuilder() {
        if (parametersBuilder_ != null) {
          return parametersBuilder_.getMessageOrBuilder();
        } else {
          return parameters_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.getDefaultInstance() : parameters_;
        }
      }
      /**
       * <pre>
       * parameters is a link to a custom resource containing additional
       * configuration for the controller. This is optional if the controller does
       * not require extra parameters.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressClassParametersReference parameters = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressClassParametersReference, io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder, io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder> 
          getParametersFieldBuilder() {
        if (parametersBuilder_ == null) {
          parametersBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressClassParametersReference, io.kubernetes.client.proto.V1Networking.IngressClassParametersReference.Builder, io.kubernetes.client.proto.V1Networking.IngressClassParametersReferenceOrBuilder>(
                  getParameters(),
                  getParentForChildren(),
                  isClean());
          parameters_ = null;
        }
        return parametersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressClassSpec)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressClassSpec)
    private static final io.kubernetes.client.proto.V1Networking.IngressClassSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressClassSpec();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressClassSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressClassSpec>
        PARSER = new com.google.protobuf.AbstractParser<IngressClassSpec>() {
      @java.lang.Override
      public IngressClassSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressClassSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressClassSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressClassSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ListMeta getMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.Ingress> 
        getItemsList();
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.Ingress getItems(int index);
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    int getItemsCount();
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * IngressList is a collection of Ingress.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressList}
   */
  public static final class IngressList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressList)
      IngressListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressList.class.getName());
    }
    // Use IngressList.newBuilder() to construct.
    private IngressList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressList() {
      items_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressList.class, io.kubernetes.client.proto.V1Networking.IngressList.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ListMeta metadata_;
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.Ingress> items_;
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.Ingress> getItemsList() {
      return items_;
    }
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    @java.lang.Override
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.Ingress getItems(int index) {
      return items_.get(index);
    }
    /**
     * <pre>
     * items is the list of Ingress.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressList)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressList other = (io.kubernetes.client.proto.V1Networking.IngressList) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressList is a collection of Ingress.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressList)
        io.kubernetes.client.proto.V1Networking.IngressListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressList.class, io.kubernetes.client.proto.V1Networking.IngressList.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
        } else {
          items_ = null;
          itemsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressList_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressList getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressList.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressList build() {
        io.kubernetes.client.proto.V1Networking.IngressList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressList buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressList result = new io.kubernetes.client.proto.V1Networking.IngressList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.IngressList result) {
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressList result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressList) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressList other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressList.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.Ingress m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.Ingress.parser(),
                        extensionRegistry);
                if (itemsBuilder_ == null) {
                  ensureItemsIsMutable();
                  items_.add(m);
                } else {
                  itemsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ListMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ListMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.Ingress> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          items_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.Ingress>(items_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.Ingress, io.kubernetes.client.proto.V1Networking.Ingress.Builder, io.kubernetes.client.proto.V1Networking.IngressOrBuilder> itemsBuilder_;

      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.Ingress> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.Ingress getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Networking.Ingress value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Networking.Ingress.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder addItems(io.kubernetes.client.proto.V1Networking.Ingress value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Networking.Ingress value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder addItems(
          io.kubernetes.client.proto.V1Networking.Ingress.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Networking.Ingress.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.Ingress> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.Ingress.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.Ingress.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.Ingress.getDefaultInstance());
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.Ingress.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.Ingress.getDefaultInstance());
      }
      /**
       * <pre>
       * items is the list of Ingress.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.Ingress items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.Ingress.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.Ingress, io.kubernetes.client.proto.V1Networking.Ingress.Builder, io.kubernetes.client.proto.V1Networking.IngressOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.Ingress, io.kubernetes.client.proto.V1Networking.Ingress.Builder, io.kubernetes.client.proto.V1Networking.IngressOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressList)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressList)
    private static final io.kubernetes.client.proto.V1Networking.IngressList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressList();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressList>
        PARSER = new com.google.protobuf.AbstractParser<IngressList>() {
      @java.lang.Override
      public IngressList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressLoadBalancerIngressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressLoadBalancerIngress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ip is set for load-balancer ingress points that are IP based.
     * +optional
     * </pre>
     *
     * <code>optional string ip = 1;</code>
     * @return Whether the ip field is set.
     */
    boolean hasIp();
    /**
     * <pre>
     * ip is set for load-balancer ingress points that are IP based.
     * +optional
     * </pre>
     *
     * <code>optional string ip = 1;</code>
     * @return The ip.
     */
    java.lang.String getIp();
    /**
     * <pre>
     * ip is set for load-balancer ingress points that are IP based.
     * +optional
     * </pre>
     *
     * <code>optional string ip = 1;</code>
     * @return The bytes for ip.
     */
    com.google.protobuf.ByteString
        getIpBytes();

    /**
     * <pre>
     * hostname is set for load-balancer ingress points that are DNS based.
     * +optional
     * </pre>
     *
     * <code>optional string hostname = 2;</code>
     * @return Whether the hostname field is set.
     */
    boolean hasHostname();
    /**
     * <pre>
     * hostname is set for load-balancer ingress points that are DNS based.
     * +optional
     * </pre>
     *
     * <code>optional string hostname = 2;</code>
     * @return The hostname.
     */
    java.lang.String getHostname();
    /**
     * <pre>
     * hostname is set for load-balancer ingress points that are DNS based.
     * +optional
     * </pre>
     *
     * <code>optional string hostname = 2;</code>
     * @return The bytes for hostname.
     */
    com.google.protobuf.ByteString
        getHostnameBytes();

    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.IngressPortStatus> 
        getPortsList();
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressPortStatus getPorts(int index);
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    int getPortsCount();
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder> 
        getPortsOrBuilderList();
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder getPortsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * IngressLoadBalancerIngress represents the status of a load-balancer ingress point.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressLoadBalancerIngress}
   */
  public static final class IngressLoadBalancerIngress extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressLoadBalancerIngress)
      IngressLoadBalancerIngressOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressLoadBalancerIngress.class.getName());
    }
    // Use IngressLoadBalancerIngress.newBuilder() to construct.
    private IngressLoadBalancerIngress(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressLoadBalancerIngress() {
      ip_ = "";
      hostname_ = "";
      ports_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.class, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder.class);
    }

    private int bitField0_;
    public static final int IP_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ip_ = "";
    /**
     * <pre>
     * ip is set for load-balancer ingress points that are IP based.
     * +optional
     * </pre>
     *
     * <code>optional string ip = 1;</code>
     * @return Whether the ip field is set.
     */
    @java.lang.Override
    public boolean hasIp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ip is set for load-balancer ingress points that are IP based.
     * +optional
     * </pre>
     *
     * <code>optional string ip = 1;</code>
     * @return The ip.
     */
    @java.lang.Override
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ip is set for load-balancer ingress points that are IP based.
     * +optional
     * </pre>
     *
     * <code>optional string ip = 1;</code>
     * @return The bytes for ip.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HOSTNAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object hostname_ = "";
    /**
     * <pre>
     * hostname is set for load-balancer ingress points that are DNS based.
     * +optional
     * </pre>
     *
     * <code>optional string hostname = 2;</code>
     * @return Whether the hostname field is set.
     */
    @java.lang.Override
    public boolean hasHostname() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * hostname is set for load-balancer ingress points that are DNS based.
     * +optional
     * </pre>
     *
     * <code>optional string hostname = 2;</code>
     * @return The hostname.
     */
    @java.lang.Override
    public java.lang.String getHostname() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          hostname_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * hostname is set for load-balancer ingress points that are DNS based.
     * +optional
     * </pre>
     *
     * <code>optional string hostname = 2;</code>
     * @return The bytes for hostname.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostnameBytes() {
      java.lang.Object ref = hostname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        hostname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORTS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.IngressPortStatus> ports_;
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.IngressPortStatus> getPortsList() {
      return ports_;
    }
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder> 
        getPortsOrBuilderList() {
      return ports_;
    }
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    @java.lang.Override
    public int getPortsCount() {
      return ports_.size();
    }
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressPortStatus getPorts(int index) {
      return ports_.get(index);
    }
    /**
     * <pre>
     * ports provides information about the ports exposed by this LoadBalancer.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder getPortsOrBuilder(
        int index) {
      return ports_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, ip_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, hostname_);
      }
      for (int i = 0; i < ports_.size(); i++) {
        output.writeMessage(4, ports_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, ip_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, hostname_);
      }
      for (int i = 0; i < ports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, ports_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress other = (io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress) obj;

      if (hasIp() != other.hasIp()) return false;
      if (hasIp()) {
        if (!getIp()
            .equals(other.getIp())) return false;
      }
      if (hasHostname() != other.hasHostname()) return false;
      if (hasHostname()) {
        if (!getHostname()
            .equals(other.getHostname())) return false;
      }
      if (!getPortsList()
          .equals(other.getPortsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIp()) {
        hash = (37 * hash) + IP_FIELD_NUMBER;
        hash = (53 * hash) + getIp().hashCode();
      }
      if (hasHostname()) {
        hash = (37 * hash) + HOSTNAME_FIELD_NUMBER;
        hash = (53 * hash) + getHostname().hashCode();
      }
      if (getPortsCount() > 0) {
        hash = (37 * hash) + PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getPortsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressLoadBalancerIngress represents the status of a load-balancer ingress point.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressLoadBalancerIngress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressLoadBalancerIngress)
        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.class, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        ip_ = "";
        hostname_ = "";
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
        } else {
          ports_ = null;
          portsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress build() {
        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress result = new io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress result) {
        if (portsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            ports_ = java.util.Collections.unmodifiableList(ports_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.ports_ = ports_;
        } else {
          result.ports_ = portsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ip_ = ip_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.hostname_ = hostname_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.getDefaultInstance()) return this;
        if (other.hasIp()) {
          ip_ = other.ip_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasHostname()) {
          hostname_ = other.hostname_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (portsBuilder_ == null) {
          if (!other.ports_.isEmpty()) {
            if (ports_.isEmpty()) {
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePortsIsMutable();
              ports_.addAll(other.ports_);
            }
            onChanged();
          }
        } else {
          if (!other.ports_.isEmpty()) {
            if (portsBuilder_.isEmpty()) {
              portsBuilder_.dispose();
              portsBuilder_ = null;
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000004);
              portsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPortsFieldBuilder() : null;
            } else {
              portsBuilder_.addAllMessages(other.ports_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                ip_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                hostname_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 34: {
                io.kubernetes.client.proto.V1Networking.IngressPortStatus m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.IngressPortStatus.parser(),
                        extensionRegistry);
                if (portsBuilder_ == null) {
                  ensurePortsIsMutable();
                  ports_.add(m);
                } else {
                  portsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object ip_ = "";
      /**
       * <pre>
       * ip is set for load-balancer ingress points that are IP based.
       * +optional
       * </pre>
       *
       * <code>optional string ip = 1;</code>
       * @return Whether the ip field is set.
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ip is set for load-balancer ingress points that are IP based.
       * +optional
       * </pre>
       *
       * <code>optional string ip = 1;</code>
       * @return The ip.
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ip_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ip is set for load-balancer ingress points that are IP based.
       * +optional
       * </pre>
       *
       * <code>optional string ip = 1;</code>
       * @return The bytes for ip.
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ip is set for load-balancer ingress points that are IP based.
       * +optional
       * </pre>
       *
       * <code>optional string ip = 1;</code>
       * @param value The ip to set.
       * @return This builder for chaining.
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ip_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ip is set for load-balancer ingress points that are IP based.
       * +optional
       * </pre>
       *
       * <code>optional string ip = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIp() {
        ip_ = getDefaultInstance().getIp();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ip is set for load-balancer ingress points that are IP based.
       * +optional
       * </pre>
       *
       * <code>optional string ip = 1;</code>
       * @param value The bytes for ip to set.
       * @return This builder for chaining.
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ip_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object hostname_ = "";
      /**
       * <pre>
       * hostname is set for load-balancer ingress points that are DNS based.
       * +optional
       * </pre>
       *
       * <code>optional string hostname = 2;</code>
       * @return Whether the hostname field is set.
       */
      public boolean hasHostname() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * hostname is set for load-balancer ingress points that are DNS based.
       * +optional
       * </pre>
       *
       * <code>optional string hostname = 2;</code>
       * @return The hostname.
       */
      public java.lang.String getHostname() {
        java.lang.Object ref = hostname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            hostname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * hostname is set for load-balancer ingress points that are DNS based.
       * +optional
       * </pre>
       *
       * <code>optional string hostname = 2;</code>
       * @return The bytes for hostname.
       */
      public com.google.protobuf.ByteString
          getHostnameBytes() {
        java.lang.Object ref = hostname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          hostname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * hostname is set for load-balancer ingress points that are DNS based.
       * +optional
       * </pre>
       *
       * <code>optional string hostname = 2;</code>
       * @param value The hostname to set.
       * @return This builder for chaining.
       */
      public Builder setHostname(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        hostname_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hostname is set for load-balancer ingress points that are DNS based.
       * +optional
       * </pre>
       *
       * <code>optional string hostname = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHostname() {
        hostname_ = getDefaultInstance().getHostname();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hostname is set for load-balancer ingress points that are DNS based.
       * +optional
       * </pre>
       *
       * <code>optional string hostname = 2;</code>
       * @param value The bytes for hostname to set.
       * @return This builder for chaining.
       */
      public Builder setHostnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        hostname_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.IngressPortStatus> ports_ =
        java.util.Collections.emptyList();
      private void ensurePortsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          ports_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.IngressPortStatus>(ports_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressPortStatus, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder> portsBuilder_;

      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressPortStatus> getPortsList() {
        if (portsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ports_);
        } else {
          return portsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public int getPortsCount() {
        if (portsBuilder_ == null) {
          return ports_.size();
        } else {
          return portsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus getPorts(int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);
        } else {
          return portsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder setPorts(
          int index, io.kubernetes.client.proto.V1Networking.IngressPortStatus value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.set(index, value);
          onChanged();
        } else {
          portsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder setPorts(
          int index, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.set(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder addPorts(io.kubernetes.client.proto.V1Networking.IngressPortStatus value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(value);
          onChanged();
        } else {
          portsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder addPorts(
          int index, io.kubernetes.client.proto.V1Networking.IngressPortStatus value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(index, value);
          onChanged();
        } else {
          portsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder addPorts(
          io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder addPorts(
          int index, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder addAllPorts(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.IngressPortStatus> values) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ports_);
          onChanged();
        } else {
          portsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder clearPorts() {
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          portsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public Builder removePorts(int index) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.remove(index);
          onChanged();
        } else {
          portsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder getPortsBuilder(
          int index) {
        return getPortsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder getPortsOrBuilder(
          int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);  } else {
          return portsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder> 
           getPortsOrBuilderList() {
        if (portsBuilder_ != null) {
          return portsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ports_);
        }
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder addPortsBuilder() {
        return getPortsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.IngressPortStatus.getDefaultInstance());
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder addPortsBuilder(
          int index) {
        return getPortsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.IngressPortStatus.getDefaultInstance());
      }
      /**
       * <pre>
       * ports provides information about the ports exposed by this LoadBalancer.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressPortStatus ports = 4;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder> 
           getPortsBuilderList() {
        return getPortsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressPortStatus, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder> 
          getPortsFieldBuilder() {
        if (portsBuilder_ == null) {
          portsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressPortStatus, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder>(
                  ports_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          ports_ = null;
        }
        return portsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressLoadBalancerIngress)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressLoadBalancerIngress)
    private static final io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressLoadBalancerIngress>
        PARSER = new com.google.protobuf.AbstractParser<IngressLoadBalancerIngress>() {
      @java.lang.Override
      public IngressLoadBalancerIngress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressLoadBalancerIngress> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressLoadBalancerIngress> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressLoadBalancerStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressLoadBalancerStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress> 
        getIngressList();
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress getIngress(int index);
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    int getIngressCount();
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder> 
        getIngressOrBuilderList();
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder getIngressOrBuilder(
        int index);
  }
  /**
   * <pre>
   * IngressLoadBalancerStatus represents the status of a load-balancer.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressLoadBalancerStatus}
   */
  public static final class IngressLoadBalancerStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressLoadBalancerStatus)
      IngressLoadBalancerStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressLoadBalancerStatus.class.getName());
    }
    // Use IngressLoadBalancerStatus.newBuilder() to construct.
    private IngressLoadBalancerStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressLoadBalancerStatus() {
      ingress_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.class, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder.class);
    }

    public static final int INGRESS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress> ingress_;
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress> getIngressList() {
      return ingress_;
    }
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder> 
        getIngressOrBuilderList() {
      return ingress_;
    }
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    @java.lang.Override
    public int getIngressCount() {
      return ingress_.size();
    }
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress getIngress(int index) {
      return ingress_.get(index);
    }
    /**
     * <pre>
     * ingress is a list containing ingress points for the load-balancer.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder getIngressOrBuilder(
        int index) {
      return ingress_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < ingress_.size(); i++) {
        output.writeMessage(1, ingress_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ingress_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ingress_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus other = (io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus) obj;

      if (!getIngressList()
          .equals(other.getIngressList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIngressCount() > 0) {
        hash = (37 * hash) + INGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIngressList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressLoadBalancerStatus represents the status of a load-balancer.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressLoadBalancerStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressLoadBalancerStatus)
        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.class, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (ingressBuilder_ == null) {
          ingress_ = java.util.Collections.emptyList();
        } else {
          ingress_ = null;
          ingressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus build() {
        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus result = new io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus result) {
        if (ingressBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            ingress_ = java.util.Collections.unmodifiableList(ingress_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ingress_ = ingress_;
        } else {
          result.ingress_ = ingressBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance()) return this;
        if (ingressBuilder_ == null) {
          if (!other.ingress_.isEmpty()) {
            if (ingress_.isEmpty()) {
              ingress_ = other.ingress_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureIngressIsMutable();
              ingress_.addAll(other.ingress_);
            }
            onChanged();
          }
        } else {
          if (!other.ingress_.isEmpty()) {
            if (ingressBuilder_.isEmpty()) {
              ingressBuilder_.dispose();
              ingressBuilder_ = null;
              ingress_ = other.ingress_;
              bitField0_ = (bitField0_ & ~0x00000001);
              ingressBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIngressFieldBuilder() : null;
            } else {
              ingressBuilder_.addAllMessages(other.ingress_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.parser(),
                        extensionRegistry);
                if (ingressBuilder_ == null) {
                  ensureIngressIsMutable();
                  ingress_.add(m);
                } else {
                  ingressBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress> ingress_ =
        java.util.Collections.emptyList();
      private void ensureIngressIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ingress_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress>(ingress_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder> ingressBuilder_;

      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress> getIngressList() {
        if (ingressBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ingress_);
        } else {
          return ingressBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public int getIngressCount() {
        if (ingressBuilder_ == null) {
          return ingress_.size();
        } else {
          return ingressBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress getIngress(int index) {
        if (ingressBuilder_ == null) {
          return ingress_.get(index);
        } else {
          return ingressBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder setIngress(
          int index, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.set(index, value);
          onChanged();
        } else {
          ingressBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder setIngress(
          int index, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.set(index, builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder addIngress(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.add(value);
          onChanged();
        } else {
          ingressBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder addIngress(
          int index, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.add(index, value);
          onChanged();
        } else {
          ingressBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder addIngress(
          io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.add(builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder addIngress(
          int index, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.add(index, builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder addAllIngress(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress> values) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ingress_);
          onChanged();
        } else {
          ingressBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder clearIngress() {
        if (ingressBuilder_ == null) {
          ingress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          ingressBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public Builder removeIngress(int index) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.remove(index);
          onChanged();
        } else {
          ingressBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder getIngressBuilder(
          int index) {
        return getIngressFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder getIngressOrBuilder(
          int index) {
        if (ingressBuilder_ == null) {
          return ingress_.get(index);  } else {
          return ingressBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder> 
           getIngressOrBuilderList() {
        if (ingressBuilder_ != null) {
          return ingressBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ingress_);
        }
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder addIngressBuilder() {
        return getIngressFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.getDefaultInstance());
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder addIngressBuilder(
          int index) {
        return getIngressFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.getDefaultInstance());
      }
      /**
       * <pre>
       * ingress is a list containing ingress points for the load-balancer.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressLoadBalancerIngress ingress = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder> 
           getIngressBuilderList() {
        return getIngressFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder> 
          getIngressFieldBuilder() {
        if (ingressBuilder_ == null) {
          ingressBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngress.Builder, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerIngressOrBuilder>(
                  ingress_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          ingress_ = null;
        }
        return ingressBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressLoadBalancerStatus)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressLoadBalancerStatus)
    private static final io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressLoadBalancerStatus>
        PARSER = new com.google.protobuf.AbstractParser<IngressLoadBalancerStatus>() {
      @java.lang.Override
      public IngressLoadBalancerStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressLoadBalancerStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressLoadBalancerStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressPortStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressPortStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * port is the port number of the ingress port.
     * </pre>
     *
     * <code>optional int32 port = 1;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * port is the port number of the ingress port.
     * </pre>
     *
     * <code>optional int32 port = 1;</code>
     * @return The port.
     */
    int getPort();

    /**
     * <pre>
     * protocol is the protocol of the ingress port.
     * The supported values are: "TCP", "UDP", "SCTP"
     * </pre>
     *
     * <code>optional string protocol = 2;</code>
     * @return Whether the protocol field is set.
     */
    boolean hasProtocol();
    /**
     * <pre>
     * protocol is the protocol of the ingress port.
     * The supported values are: "TCP", "UDP", "SCTP"
     * </pre>
     *
     * <code>optional string protocol = 2;</code>
     * @return The protocol.
     */
    java.lang.String getProtocol();
    /**
     * <pre>
     * protocol is the protocol of the ingress port.
     * The supported values are: "TCP", "UDP", "SCTP"
     * </pre>
     *
     * <code>optional string protocol = 2;</code>
     * @return The bytes for protocol.
     */
    com.google.protobuf.ByteString
        getProtocolBytes();

    /**
     * <pre>
     * error is to record the problem with the service port
     * The format of the error shall comply with the following rules:
     * - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     * ---
     * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * +optional
     * +kubebuilder:validation:Required
     * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
     * +kubebuilder:validation:MaxLength=316
     * </pre>
     *
     * <code>optional string error = 3;</code>
     * @return Whether the error field is set.
     */
    boolean hasError();
    /**
     * <pre>
     * error is to record the problem with the service port
     * The format of the error shall comply with the following rules:
     * - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     * ---
     * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * +optional
     * +kubebuilder:validation:Required
     * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
     * +kubebuilder:validation:MaxLength=316
     * </pre>
     *
     * <code>optional string error = 3;</code>
     * @return The error.
     */
    java.lang.String getError();
    /**
     * <pre>
     * error is to record the problem with the service port
     * The format of the error shall comply with the following rules:
     * - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     * ---
     * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * +optional
     * +kubebuilder:validation:Required
     * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
     * +kubebuilder:validation:MaxLength=316
     * </pre>
     *
     * <code>optional string error = 3;</code>
     * @return The bytes for error.
     */
    com.google.protobuf.ByteString
        getErrorBytes();
  }
  /**
   * <pre>
   * IngressPortStatus represents the error condition of a service port
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressPortStatus}
   */
  public static final class IngressPortStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressPortStatus)
      IngressPortStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressPortStatus.class.getName());
    }
    // Use IngressPortStatus.newBuilder() to construct.
    private IngressPortStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressPortStatus() {
      protocol_ = "";
      error_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressPortStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressPortStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressPortStatus.class, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder.class);
    }

    private int bitField0_;
    public static final int PORT_FIELD_NUMBER = 1;
    private int port_ = 0;
    /**
     * <pre>
     * port is the port number of the ingress port.
     * </pre>
     *
     * <code>optional int32 port = 1;</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * port is the port number of the ingress port.
     * </pre>
     *
     * <code>optional int32 port = 1;</code>
     * @return The port.
     */
    @java.lang.Override
    public int getPort() {
      return port_;
    }

    public static final int PROTOCOL_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object protocol_ = "";
    /**
     * <pre>
     * protocol is the protocol of the ingress port.
     * The supported values are: "TCP", "UDP", "SCTP"
     * </pre>
     *
     * <code>optional string protocol = 2;</code>
     * @return Whether the protocol field is set.
     */
    @java.lang.Override
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * protocol is the protocol of the ingress port.
     * The supported values are: "TCP", "UDP", "SCTP"
     * </pre>
     *
     * <code>optional string protocol = 2;</code>
     * @return The protocol.
     */
    @java.lang.Override
    public java.lang.String getProtocol() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          protocol_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * protocol is the protocol of the ingress port.
     * The supported values are: "TCP", "UDP", "SCTP"
     * </pre>
     *
     * <code>optional string protocol = 2;</code>
     * @return The bytes for protocol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtocolBytes() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ERROR_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object error_ = "";
    /**
     * <pre>
     * error is to record the problem with the service port
     * The format of the error shall comply with the following rules:
     * - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     * ---
     * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * +optional
     * +kubebuilder:validation:Required
     * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
     * +kubebuilder:validation:MaxLength=316
     * </pre>
     *
     * <code>optional string error = 3;</code>
     * @return Whether the error field is set.
     */
    @java.lang.Override
    public boolean hasError() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * error is to record the problem with the service port
     * The format of the error shall comply with the following rules:
     * - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     * ---
     * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * +optional
     * +kubebuilder:validation:Required
     * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
     * +kubebuilder:validation:MaxLength=316
     * </pre>
     *
     * <code>optional string error = 3;</code>
     * @return The error.
     */
    @java.lang.Override
    public java.lang.String getError() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          error_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * error is to record the problem with the service port
     * The format of the error shall comply with the following rules:
     * - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     * ---
     * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
     * +optional
     * +kubebuilder:validation:Required
     * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
     * +kubebuilder:validation:MaxLength=316
     * </pre>
     *
     * <code>optional string error = 3;</code>
     * @return The bytes for error.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getErrorBytes() {
      java.lang.Object ref = error_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        error_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, port_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, protocol_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, error_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, port_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, protocol_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, error_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressPortStatus)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressPortStatus other = (io.kubernetes.client.proto.V1Networking.IngressPortStatus) obj;

      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (getPort()
            != other.getPort()) return false;
      }
      if (hasProtocol() != other.hasProtocol()) return false;
      if (hasProtocol()) {
        if (!getProtocol()
            .equals(other.getProtocol())) return false;
      }
      if (hasError() != other.hasError()) return false;
      if (hasError()) {
        if (!getError()
            .equals(other.getError())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort();
      }
      if (hasProtocol()) {
        hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + getProtocol().hashCode();
      }
      if (hasError()) {
        hash = (37 * hash) + ERROR_FIELD_NUMBER;
        hash = (53 * hash) + getError().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressPortStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressPortStatus represents the error condition of a service port
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressPortStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressPortStatus)
        io.kubernetes.client.proto.V1Networking.IngressPortStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressPortStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressPortStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressPortStatus.class, io.kubernetes.client.proto.V1Networking.IngressPortStatus.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressPortStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        port_ = 0;
        protocol_ = "";
        error_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressPortStatus_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressPortStatus.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus build() {
        io.kubernetes.client.proto.V1Networking.IngressPortStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressPortStatus buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressPortStatus result = new io.kubernetes.client.proto.V1Networking.IngressPortStatus(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressPortStatus result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.port_ = port_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.protocol_ = protocol_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.error_ = error_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressPortStatus) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressPortStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressPortStatus other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressPortStatus.getDefaultInstance()) return this;
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasProtocol()) {
          protocol_ = other.protocol_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasError()) {
          error_ = other.error_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                port_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                protocol_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                error_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int port_ ;
      /**
       * <pre>
       * port is the port number of the ingress port.
       * </pre>
       *
       * <code>optional int32 port = 1;</code>
       * @return Whether the port field is set.
       */
      @java.lang.Override
      public boolean hasPort() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * port is the port number of the ingress port.
       * </pre>
       *
       * <code>optional int32 port = 1;</code>
       * @return The port.
       */
      @java.lang.Override
      public int getPort() {
        return port_;
      }
      /**
       * <pre>
       * port is the port number of the ingress port.
       * </pre>
       *
       * <code>optional int32 port = 1;</code>
       * @param value The port to set.
       * @return This builder for chaining.
       */
      public Builder setPort(int value) {

        port_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port is the port number of the ingress port.
       * </pre>
       *
       * <code>optional int32 port = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        port_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object protocol_ = "";
      /**
       * <pre>
       * protocol is the protocol of the ingress port.
       * The supported values are: "TCP", "UDP", "SCTP"
       * </pre>
       *
       * <code>optional string protocol = 2;</code>
       * @return Whether the protocol field is set.
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * protocol is the protocol of the ingress port.
       * The supported values are: "TCP", "UDP", "SCTP"
       * </pre>
       *
       * <code>optional string protocol = 2;</code>
       * @return The protocol.
       */
      public java.lang.String getProtocol() {
        java.lang.Object ref = protocol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            protocol_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * protocol is the protocol of the ingress port.
       * The supported values are: "TCP", "UDP", "SCTP"
       * </pre>
       *
       * <code>optional string protocol = 2;</code>
       * @return The bytes for protocol.
       */
      public com.google.protobuf.ByteString
          getProtocolBytes() {
        java.lang.Object ref = protocol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protocol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * protocol is the protocol of the ingress port.
       * The supported values are: "TCP", "UDP", "SCTP"
       * </pre>
       *
       * <code>optional string protocol = 2;</code>
       * @param value The protocol to set.
       * @return This builder for chaining.
       */
      public Builder setProtocol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        protocol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * protocol is the protocol of the ingress port.
       * The supported values are: "TCP", "UDP", "SCTP"
       * </pre>
       *
       * <code>optional string protocol = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProtocol() {
        protocol_ = getDefaultInstance().getProtocol();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * protocol is the protocol of the ingress port.
       * The supported values are: "TCP", "UDP", "SCTP"
       * </pre>
       *
       * <code>optional string protocol = 2;</code>
       * @param value The bytes for protocol to set.
       * @return This builder for chaining.
       */
      public Builder setProtocolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        protocol_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object error_ = "";
      /**
       * <pre>
       * error is to record the problem with the service port
       * The format of the error shall comply with the following rules:
       * - built-in error values shall be specified in this file and those shall use
       * CamelCase names
       * - cloud provider specific error values must have names that comply with the
       * format foo.example.com/CamelCase.
       * ---
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       * +optional
       * +kubebuilder:validation:Required
       * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
       * +kubebuilder:validation:MaxLength=316
       * </pre>
       *
       * <code>optional string error = 3;</code>
       * @return Whether the error field is set.
       */
      public boolean hasError() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * error is to record the problem with the service port
       * The format of the error shall comply with the following rules:
       * - built-in error values shall be specified in this file and those shall use
       * CamelCase names
       * - cloud provider specific error values must have names that comply with the
       * format foo.example.com/CamelCase.
       * ---
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       * +optional
       * +kubebuilder:validation:Required
       * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
       * +kubebuilder:validation:MaxLength=316
       * </pre>
       *
       * <code>optional string error = 3;</code>
       * @return The error.
       */
      public java.lang.String getError() {
        java.lang.Object ref = error_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            error_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * error is to record the problem with the service port
       * The format of the error shall comply with the following rules:
       * - built-in error values shall be specified in this file and those shall use
       * CamelCase names
       * - cloud provider specific error values must have names that comply with the
       * format foo.example.com/CamelCase.
       * ---
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       * +optional
       * +kubebuilder:validation:Required
       * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
       * +kubebuilder:validation:MaxLength=316
       * </pre>
       *
       * <code>optional string error = 3;</code>
       * @return The bytes for error.
       */
      public com.google.protobuf.ByteString
          getErrorBytes() {
        java.lang.Object ref = error_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          error_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * error is to record the problem with the service port
       * The format of the error shall comply with the following rules:
       * - built-in error values shall be specified in this file and those shall use
       * CamelCase names
       * - cloud provider specific error values must have names that comply with the
       * format foo.example.com/CamelCase.
       * ---
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       * +optional
       * +kubebuilder:validation:Required
       * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
       * +kubebuilder:validation:MaxLength=316
       * </pre>
       *
       * <code>optional string error = 3;</code>
       * @param value The error to set.
       * @return This builder for chaining.
       */
      public Builder setError(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        error_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * error is to record the problem with the service port
       * The format of the error shall comply with the following rules:
       * - built-in error values shall be specified in this file and those shall use
       * CamelCase names
       * - cloud provider specific error values must have names that comply with the
       * format foo.example.com/CamelCase.
       * ---
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       * +optional
       * +kubebuilder:validation:Required
       * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
       * +kubebuilder:validation:MaxLength=316
       * </pre>
       *
       * <code>optional string error = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearError() {
        error_ = getDefaultInstance().getError();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * error is to record the problem with the service port
       * The format of the error shall comply with the following rules:
       * - built-in error values shall be specified in this file and those shall use
       * CamelCase names
       * - cloud provider specific error values must have names that comply with the
       * format foo.example.com/CamelCase.
       * ---
       * The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
       * +optional
       * +kubebuilder:validation:Required
       * +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(&#92;.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#47;)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
       * +kubebuilder:validation:MaxLength=316
       * </pre>
       *
       * <code>optional string error = 3;</code>
       * @param value The bytes for error to set.
       * @return This builder for chaining.
       */
      public Builder setErrorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        error_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressPortStatus)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressPortStatus)
    private static final io.kubernetes.client.proto.V1Networking.IngressPortStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressPortStatus();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressPortStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressPortStatus>
        PARSER = new com.google.protobuf.AbstractParser<IngressPortStatus>() {
      @java.lang.Override
      public IngressPortStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressPortStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressPortStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressPortStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressRuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressRule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * host is the fully qualified domain name of a network host, as defined by RFC 3986.
     * Note the following deviations from the "host" part of the
     * URI as defined in RFC 3986:
     * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
     * the IP in the Spec of the parent Ingress.
     * 2. The `:` delimiter is not respected because ports are not allowed.
     * Currently the port of an Ingress is implicitly :80 for http and
     * :443 for https.
     * Both these may change in the future.
     * Incoming requests are matched against the host before the
     * IngressRuleValue. If the host is unspecified, the Ingress routes all
     * traffic based on the specified IngressRuleValue.
     *
     * host can be "precise" which is a domain name without the terminating dot of
     * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
     * prefixed with a single wildcard label (e.g. "*.foo.com").
     * The wildcard character '*' must appear by itself as the first DNS label and
     * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
     * Requests will be matched against the Host field in the following way:
     * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
     * 2. If host is a wildcard, then the request matches this rule if the http host header
     * is to equal to the suffix (removing the first label) of the wildcard rule.
     * +optional
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return Whether the host field is set.
     */
    boolean hasHost();
    /**
     * <pre>
     * host is the fully qualified domain name of a network host, as defined by RFC 3986.
     * Note the following deviations from the "host" part of the
     * URI as defined in RFC 3986:
     * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
     * the IP in the Spec of the parent Ingress.
     * 2. The `:` delimiter is not respected because ports are not allowed.
     * Currently the port of an Ingress is implicitly :80 for http and
     * :443 for https.
     * Both these may change in the future.
     * Incoming requests are matched against the host before the
     * IngressRuleValue. If the host is unspecified, the Ingress routes all
     * traffic based on the specified IngressRuleValue.
     *
     * host can be "precise" which is a domain name without the terminating dot of
     * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
     * prefixed with a single wildcard label (e.g. "*.foo.com").
     * The wildcard character '*' must appear by itself as the first DNS label and
     * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
     * Requests will be matched against the Host field in the following way:
     * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
     * 2. If host is a wildcard, then the request matches this rule if the http host header
     * is to equal to the suffix (removing the first label) of the wildcard rule.
     * +optional
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The host.
     */
    java.lang.String getHost();
    /**
     * <pre>
     * host is the fully qualified domain name of a network host, as defined by RFC 3986.
     * Note the following deviations from the "host" part of the
     * URI as defined in RFC 3986:
     * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
     * the IP in the Spec of the parent Ingress.
     * 2. The `:` delimiter is not respected because ports are not allowed.
     * Currently the port of an Ingress is implicitly :80 for http and
     * :443 for https.
     * Both these may change in the future.
     * Incoming requests are matched against the host before the
     * IngressRuleValue. If the host is unspecified, the Ingress routes all
     * traffic based on the specified IngressRuleValue.
     *
     * host can be "precise" which is a domain name without the terminating dot of
     * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
     * prefixed with a single wildcard label (e.g. "*.foo.com").
     * The wildcard character '*' must appear by itself as the first DNS label and
     * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
     * Requests will be matched against the Host field in the following way:
     * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
     * 2. If host is a wildcard, then the request matches this rule if the http host header
     * is to equal to the suffix (removing the first label) of the wildcard rule.
     * +optional
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The bytes for host.
     */
    com.google.protobuf.ByteString
        getHostBytes();

    /**
     * <pre>
     * IngressRuleValue represents a rule to route requests for this IngressRule.
     * If unspecified, the rule defaults to a http catch-all. Whether that sends
     * just traffic matching the host to the default backend or all traffic to the
     * default backend, is left to the controller fulfilling the Ingress. Http is
     * currently the only supported IngressRuleValue.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
     * @return Whether the ingressRuleValue field is set.
     */
    boolean hasIngressRuleValue();
    /**
     * <pre>
     * IngressRuleValue represents a rule to route requests for this IngressRule.
     * If unspecified, the rule defaults to a http catch-all. Whether that sends
     * just traffic matching the host to the default backend or all traffic to the
     * default backend, is left to the controller fulfilling the Ingress. Http is
     * currently the only supported IngressRuleValue.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
     * @return The ingressRuleValue.
     */
    io.kubernetes.client.proto.V1Networking.IngressRuleValue getIngressRuleValue();
    /**
     * <pre>
     * IngressRuleValue represents a rule to route requests for this IngressRule.
     * If unspecified, the rule defaults to a http catch-all. Whether that sends
     * just traffic matching the host to the default backend or all traffic to the
     * default backend, is left to the controller fulfilling the Ingress. Http is
     * currently the only supported IngressRuleValue.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder getIngressRuleValueOrBuilder();
  }
  /**
   * <pre>
   * IngressRule represents the rules mapping the paths under a specified host to
   * the related backend services. Incoming requests are first evaluated for a host
   * match, then routed to the backend associated with the matching IngressRuleValue.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressRule}
   */
  public static final class IngressRule extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressRule)
      IngressRuleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressRule.class.getName());
    }
    // Use IngressRule.newBuilder() to construct.
    private IngressRule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressRule() {
      host_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressRule.class, io.kubernetes.client.proto.V1Networking.IngressRule.Builder.class);
    }

    private int bitField0_;
    public static final int HOST_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object host_ = "";
    /**
     * <pre>
     * host is the fully qualified domain name of a network host, as defined by RFC 3986.
     * Note the following deviations from the "host" part of the
     * URI as defined in RFC 3986:
     * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
     * the IP in the Spec of the parent Ingress.
     * 2. The `:` delimiter is not respected because ports are not allowed.
     * Currently the port of an Ingress is implicitly :80 for http and
     * :443 for https.
     * Both these may change in the future.
     * Incoming requests are matched against the host before the
     * IngressRuleValue. If the host is unspecified, the Ingress routes all
     * traffic based on the specified IngressRuleValue.
     *
     * host can be "precise" which is a domain name without the terminating dot of
     * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
     * prefixed with a single wildcard label (e.g. "*.foo.com").
     * The wildcard character '*' must appear by itself as the first DNS label and
     * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
     * Requests will be matched against the Host field in the following way:
     * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
     * 2. If host is a wildcard, then the request matches this rule if the http host header
     * is to equal to the suffix (removing the first label) of the wildcard rule.
     * +optional
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return Whether the host field is set.
     */
    @java.lang.Override
    public boolean hasHost() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * host is the fully qualified domain name of a network host, as defined by RFC 3986.
     * Note the following deviations from the "host" part of the
     * URI as defined in RFC 3986:
     * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
     * the IP in the Spec of the parent Ingress.
     * 2. The `:` delimiter is not respected because ports are not allowed.
     * Currently the port of an Ingress is implicitly :80 for http and
     * :443 for https.
     * Both these may change in the future.
     * Incoming requests are matched against the host before the
     * IngressRuleValue. If the host is unspecified, the Ingress routes all
     * traffic based on the specified IngressRuleValue.
     *
     * host can be "precise" which is a domain name without the terminating dot of
     * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
     * prefixed with a single wildcard label (e.g. "*.foo.com").
     * The wildcard character '*' must appear by itself as the first DNS label and
     * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
     * Requests will be matched against the Host field in the following way:
     * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
     * 2. If host is a wildcard, then the request matches this rule if the http host header
     * is to equal to the suffix (removing the first label) of the wildcard rule.
     * +optional
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The host.
     */
    @java.lang.Override
    public java.lang.String getHost() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          host_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * host is the fully qualified domain name of a network host, as defined by RFC 3986.
     * Note the following deviations from the "host" part of the
     * URI as defined in RFC 3986:
     * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
     * the IP in the Spec of the parent Ingress.
     * 2. The `:` delimiter is not respected because ports are not allowed.
     * Currently the port of an Ingress is implicitly :80 for http and
     * :443 for https.
     * Both these may change in the future.
     * Incoming requests are matched against the host before the
     * IngressRuleValue. If the host is unspecified, the Ingress routes all
     * traffic based on the specified IngressRuleValue.
     *
     * host can be "precise" which is a domain name without the terminating dot of
     * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
     * prefixed with a single wildcard label (e.g. "*.foo.com").
     * The wildcard character '*' must appear by itself as the first DNS label and
     * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
     * Requests will be matched against the Host field in the following way:
     * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
     * 2. If host is a wildcard, then the request matches this rule if the http host header
     * is to equal to the suffix (removing the first label) of the wildcard rule.
     * +optional
     * </pre>
     *
     * <code>optional string host = 1;</code>
     * @return The bytes for host.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getHostBytes() {
      java.lang.Object ref = host_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        host_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INGRESSRULEVALUE_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.IngressRuleValue ingressRuleValue_;
    /**
     * <pre>
     * IngressRuleValue represents a rule to route requests for this IngressRule.
     * If unspecified, the rule defaults to a http catch-all. Whether that sends
     * just traffic matching the host to the default backend or all traffic to the
     * default backend, is left to the controller fulfilling the Ingress. Http is
     * currently the only supported IngressRuleValue.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
     * @return Whether the ingressRuleValue field is set.
     */
    @java.lang.Override
    public boolean hasIngressRuleValue() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * IngressRuleValue represents a rule to route requests for this IngressRule.
     * If unspecified, the rule defaults to a http catch-all. Whether that sends
     * just traffic matching the host to the default backend or all traffic to the
     * default backend, is left to the controller fulfilling the Ingress. Http is
     * currently the only supported IngressRuleValue.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
     * @return The ingressRuleValue.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressRuleValue getIngressRuleValue() {
      return ingressRuleValue_ == null ? io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance() : ingressRuleValue_;
    }
    /**
     * <pre>
     * IngressRuleValue represents a rule to route requests for this IngressRule.
     * If unspecified, the rule defaults to a http catch-all. Whether that sends
     * just traffic matching the host to the default backend or all traffic to the
     * default backend, is left to the controller fulfilling the Ingress. Http is
     * currently the only supported IngressRuleValue.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder getIngressRuleValueOrBuilder() {
      return ingressRuleValue_ == null ? io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance() : ingressRuleValue_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, host_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getIngressRuleValue());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, host_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getIngressRuleValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressRule)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressRule other = (io.kubernetes.client.proto.V1Networking.IngressRule) obj;

      if (hasHost() != other.hasHost()) return false;
      if (hasHost()) {
        if (!getHost()
            .equals(other.getHost())) return false;
      }
      if (hasIngressRuleValue() != other.hasIngressRuleValue()) return false;
      if (hasIngressRuleValue()) {
        if (!getIngressRuleValue()
            .equals(other.getIngressRuleValue())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHost()) {
        hash = (37 * hash) + HOST_FIELD_NUMBER;
        hash = (53 * hash) + getHost().hashCode();
      }
      if (hasIngressRuleValue()) {
        hash = (37 * hash) + INGRESSRULEVALUE_FIELD_NUMBER;
        hash = (53 * hash) + getIngressRuleValue().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressRule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressRule represents the rules mapping the paths under a specified host to
     * the related backend services. Incoming requests are first evaluated for a host
     * match, then routed to the backend associated with the matching IngressRuleValue.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressRule)
        io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressRule.class, io.kubernetes.client.proto.V1Networking.IngressRule.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressRule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getIngressRuleValueFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        host_ = "";
        ingressRuleValue_ = null;
        if (ingressRuleValueBuilder_ != null) {
          ingressRuleValueBuilder_.dispose();
          ingressRuleValueBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRule_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressRule getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressRule.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressRule build() {
        io.kubernetes.client.proto.V1Networking.IngressRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressRule buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressRule result = new io.kubernetes.client.proto.V1Networking.IngressRule(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressRule result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.host_ = host_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ingressRuleValue_ = ingressRuleValueBuilder_ == null
              ? ingressRuleValue_
              : ingressRuleValueBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressRule) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressRule other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressRule.getDefaultInstance()) return this;
        if (other.hasHost()) {
          host_ = other.host_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasIngressRuleValue()) {
          mergeIngressRuleValue(other.getIngressRuleValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                host_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getIngressRuleValueFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object host_ = "";
      /**
       * <pre>
       * host is the fully qualified domain name of a network host, as defined by RFC 3986.
       * Note the following deviations from the "host" part of the
       * URI as defined in RFC 3986:
       * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
       * the IP in the Spec of the parent Ingress.
       * 2. The `:` delimiter is not respected because ports are not allowed.
       * Currently the port of an Ingress is implicitly :80 for http and
       * :443 for https.
       * Both these may change in the future.
       * Incoming requests are matched against the host before the
       * IngressRuleValue. If the host is unspecified, the Ingress routes all
       * traffic based on the specified IngressRuleValue.
       *
       * host can be "precise" which is a domain name without the terminating dot of
       * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
       * prefixed with a single wildcard label (e.g. "*.foo.com").
       * The wildcard character '*' must appear by itself as the first DNS label and
       * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
       * Requests will be matched against the Host field in the following way:
       * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
       * 2. If host is a wildcard, then the request matches this rule if the http host header
       * is to equal to the suffix (removing the first label) of the wildcard rule.
       * +optional
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return Whether the host field is set.
       */
      public boolean hasHost() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * host is the fully qualified domain name of a network host, as defined by RFC 3986.
       * Note the following deviations from the "host" part of the
       * URI as defined in RFC 3986:
       * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
       * the IP in the Spec of the parent Ingress.
       * 2. The `:` delimiter is not respected because ports are not allowed.
       * Currently the port of an Ingress is implicitly :80 for http and
       * :443 for https.
       * Both these may change in the future.
       * Incoming requests are matched against the host before the
       * IngressRuleValue. If the host is unspecified, the Ingress routes all
       * traffic based on the specified IngressRuleValue.
       *
       * host can be "precise" which is a domain name without the terminating dot of
       * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
       * prefixed with a single wildcard label (e.g. "*.foo.com").
       * The wildcard character '*' must appear by itself as the first DNS label and
       * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
       * Requests will be matched against the Host field in the following way:
       * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
       * 2. If host is a wildcard, then the request matches this rule if the http host header
       * is to equal to the suffix (removing the first label) of the wildcard rule.
       * +optional
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return The host.
       */
      public java.lang.String getHost() {
        java.lang.Object ref = host_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            host_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * host is the fully qualified domain name of a network host, as defined by RFC 3986.
       * Note the following deviations from the "host" part of the
       * URI as defined in RFC 3986:
       * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
       * the IP in the Spec of the parent Ingress.
       * 2. The `:` delimiter is not respected because ports are not allowed.
       * Currently the port of an Ingress is implicitly :80 for http and
       * :443 for https.
       * Both these may change in the future.
       * Incoming requests are matched against the host before the
       * IngressRuleValue. If the host is unspecified, the Ingress routes all
       * traffic based on the specified IngressRuleValue.
       *
       * host can be "precise" which is a domain name without the terminating dot of
       * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
       * prefixed with a single wildcard label (e.g. "*.foo.com").
       * The wildcard character '*' must appear by itself as the first DNS label and
       * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
       * Requests will be matched against the Host field in the following way:
       * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
       * 2. If host is a wildcard, then the request matches this rule if the http host header
       * is to equal to the suffix (removing the first label) of the wildcard rule.
       * +optional
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return The bytes for host.
       */
      public com.google.protobuf.ByteString
          getHostBytes() {
        java.lang.Object ref = host_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          host_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * host is the fully qualified domain name of a network host, as defined by RFC 3986.
       * Note the following deviations from the "host" part of the
       * URI as defined in RFC 3986:
       * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
       * the IP in the Spec of the parent Ingress.
       * 2. The `:` delimiter is not respected because ports are not allowed.
       * Currently the port of an Ingress is implicitly :80 for http and
       * :443 for https.
       * Both these may change in the future.
       * Incoming requests are matched against the host before the
       * IngressRuleValue. If the host is unspecified, the Ingress routes all
       * traffic based on the specified IngressRuleValue.
       *
       * host can be "precise" which is a domain name without the terminating dot of
       * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
       * prefixed with a single wildcard label (e.g. "*.foo.com").
       * The wildcard character '*' must appear by itself as the first DNS label and
       * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
       * Requests will be matched against the Host field in the following way:
       * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
       * 2. If host is a wildcard, then the request matches this rule if the http host header
       * is to equal to the suffix (removing the first label) of the wildcard rule.
       * +optional
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @param value The host to set.
       * @return This builder for chaining.
       */
      public Builder setHost(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        host_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * host is the fully qualified domain name of a network host, as defined by RFC 3986.
       * Note the following deviations from the "host" part of the
       * URI as defined in RFC 3986:
       * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
       * the IP in the Spec of the parent Ingress.
       * 2. The `:` delimiter is not respected because ports are not allowed.
       * Currently the port of an Ingress is implicitly :80 for http and
       * :443 for https.
       * Both these may change in the future.
       * Incoming requests are matched against the host before the
       * IngressRuleValue. If the host is unspecified, the Ingress routes all
       * traffic based on the specified IngressRuleValue.
       *
       * host can be "precise" which is a domain name without the terminating dot of
       * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
       * prefixed with a single wildcard label (e.g. "*.foo.com").
       * The wildcard character '*' must appear by itself as the first DNS label and
       * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
       * Requests will be matched against the Host field in the following way:
       * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
       * 2. If host is a wildcard, then the request matches this rule if the http host header
       * is to equal to the suffix (removing the first label) of the wildcard rule.
       * +optional
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHost() {
        host_ = getDefaultInstance().getHost();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * host is the fully qualified domain name of a network host, as defined by RFC 3986.
       * Note the following deviations from the "host" part of the
       * URI as defined in RFC 3986:
       * 1. IPs are not allowed. Currently an IngressRuleValue can only apply to
       * the IP in the Spec of the parent Ingress.
       * 2. The `:` delimiter is not respected because ports are not allowed.
       * Currently the port of an Ingress is implicitly :80 for http and
       * :443 for https.
       * Both these may change in the future.
       * Incoming requests are matched against the host before the
       * IngressRuleValue. If the host is unspecified, the Ingress routes all
       * traffic based on the specified IngressRuleValue.
       *
       * host can be "precise" which is a domain name without the terminating dot of
       * a network host (e.g. "foo.bar.com") or "wildcard", which is a domain name
       * prefixed with a single wildcard label (e.g. "*.foo.com").
       * The wildcard character '*' must appear by itself as the first DNS label and
       * matches only a single label. You cannot have a wildcard label by itself (e.g. Host == "*").
       * Requests will be matched against the Host field in the following way:
       * 1. If host is precise, the request matches this rule if the http host header is equal to Host.
       * 2. If host is a wildcard, then the request matches this rule if the http host header
       * is to equal to the suffix (removing the first label) of the wildcard rule.
       * +optional
       * </pre>
       *
       * <code>optional string host = 1;</code>
       * @param value The bytes for host to set.
       * @return This builder for chaining.
       */
      public Builder setHostBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        host_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.V1Networking.IngressRuleValue ingressRuleValue_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressRuleValue, io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder, io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder> ingressRuleValueBuilder_;
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       * @return Whether the ingressRuleValue field is set.
       */
      public boolean hasIngressRuleValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       * @return The ingressRuleValue.
       */
      public io.kubernetes.client.proto.V1Networking.IngressRuleValue getIngressRuleValue() {
        if (ingressRuleValueBuilder_ == null) {
          return ingressRuleValue_ == null ? io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance() : ingressRuleValue_;
        } else {
          return ingressRuleValueBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      public Builder setIngressRuleValue(io.kubernetes.client.proto.V1Networking.IngressRuleValue value) {
        if (ingressRuleValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ingressRuleValue_ = value;
        } else {
          ingressRuleValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      public Builder setIngressRuleValue(
          io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder builderForValue) {
        if (ingressRuleValueBuilder_ == null) {
          ingressRuleValue_ = builderForValue.build();
        } else {
          ingressRuleValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      public Builder mergeIngressRuleValue(io.kubernetes.client.proto.V1Networking.IngressRuleValue value) {
        if (ingressRuleValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            ingressRuleValue_ != null &&
            ingressRuleValue_ != io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance()) {
            getIngressRuleValueBuilder().mergeFrom(value);
          } else {
            ingressRuleValue_ = value;
          }
        } else {
          ingressRuleValueBuilder_.mergeFrom(value);
        }
        if (ingressRuleValue_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      public Builder clearIngressRuleValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ingressRuleValue_ = null;
        if (ingressRuleValueBuilder_ != null) {
          ingressRuleValueBuilder_.dispose();
          ingressRuleValueBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder getIngressRuleValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getIngressRuleValueFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder getIngressRuleValueOrBuilder() {
        if (ingressRuleValueBuilder_ != null) {
          return ingressRuleValueBuilder_.getMessageOrBuilder();
        } else {
          return ingressRuleValue_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance() : ingressRuleValue_;
        }
      }
      /**
       * <pre>
       * IngressRuleValue represents a rule to route requests for this IngressRule.
       * If unspecified, the rule defaults to a http catch-all. Whether that sends
       * just traffic matching the host to the default backend or all traffic to the
       * default backend, is left to the controller fulfilling the Ingress. Http is
       * currently the only supported IngressRuleValue.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressRuleValue ingressRuleValue = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressRuleValue, io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder, io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder> 
          getIngressRuleValueFieldBuilder() {
        if (ingressRuleValueBuilder_ == null) {
          ingressRuleValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressRuleValue, io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder, io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder>(
                  getIngressRuleValue(),
                  getParentForChildren(),
                  isClean());
          ingressRuleValue_ = null;
        }
        return ingressRuleValueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressRule)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressRule)
    private static final io.kubernetes.client.proto.V1Networking.IngressRule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressRule();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressRule>
        PARSER = new com.google.protobuf.AbstractParser<IngressRule>() {
      @java.lang.Override
      public IngressRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressRule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressRule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressRule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressRuleValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressRuleValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
     * @return Whether the http field is set.
     */
    boolean hasHttp();
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
     * @return The http.
     */
    io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue getHttp();
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder getHttpOrBuilder();
  }
  /**
   * <pre>
   * IngressRuleValue represents a rule to apply against incoming requests. If the
   * rule is satisfied, the request is routed to the specified backend. Currently
   * mixing different types of rules in a single Ingress is disallowed, so exactly
   * one of the following must be set.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressRuleValue}
   */
  public static final class IngressRuleValue extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressRuleValue)
      IngressRuleValueOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressRuleValue.class.getName());
    }
    // Use IngressRuleValue.newBuilder() to construct.
    private IngressRuleValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressRuleValue() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRuleValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRuleValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressRuleValue.class, io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder.class);
    }

    private int bitField0_;
    public static final int HTTP_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue http_;
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
     * @return Whether the http field is set.
     */
    @java.lang.Override
    public boolean hasHttp() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
     * @return The http.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue getHttp() {
      return http_ == null ? io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance() : http_;
    }
    /**
     * <pre>
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder getHttpOrBuilder() {
      return http_ == null ? io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance() : http_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getHttp());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getHttp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressRuleValue)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressRuleValue other = (io.kubernetes.client.proto.V1Networking.IngressRuleValue) obj;

      if (hasHttp() != other.hasHttp()) return false;
      if (hasHttp()) {
        if (!getHttp()
            .equals(other.getHttp())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHttp()) {
        hash = (37 * hash) + HTTP_FIELD_NUMBER;
        hash = (53 * hash) + getHttp().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressRuleValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressRuleValue represents a rule to apply against incoming requests. If the
     * rule is satisfied, the request is routed to the specified backend. Currently
     * mixing different types of rules in a single Ingress is disallowed, so exactly
     * one of the following must be set.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressRuleValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressRuleValue)
        io.kubernetes.client.proto.V1Networking.IngressRuleValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRuleValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRuleValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressRuleValue.class, io.kubernetes.client.proto.V1Networking.IngressRuleValue.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressRuleValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getHttpFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        http_ = null;
        if (httpBuilder_ != null) {
          httpBuilder_.dispose();
          httpBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressRuleValue_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressRuleValue getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressRuleValue build() {
        io.kubernetes.client.proto.V1Networking.IngressRuleValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressRuleValue buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressRuleValue result = new io.kubernetes.client.proto.V1Networking.IngressRuleValue(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressRuleValue result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.http_ = httpBuilder_ == null
              ? http_
              : httpBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressRuleValue) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressRuleValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressRuleValue other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressRuleValue.getDefaultInstance()) return this;
        if (other.hasHttp()) {
          mergeHttp(other.getHttp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getHttpFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue http_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder> httpBuilder_;
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       * @return Whether the http field is set.
       */
      public boolean hasHttp() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       * @return The http.
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue getHttp() {
        if (httpBuilder_ == null) {
          return http_ == null ? io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance() : http_;
        } else {
          return httpBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      public Builder setHttp(io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue value) {
        if (httpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          http_ = value;
        } else {
          httpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      public Builder setHttp(
          io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder builderForValue) {
        if (httpBuilder_ == null) {
          http_ = builderForValue.build();
        } else {
          httpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      public Builder mergeHttp(io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue value) {
        if (httpBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            http_ != null &&
            http_ != io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance()) {
            getHttpBuilder().mergeFrom(value);
          } else {
            http_ = value;
          }
        } else {
          httpBuilder_.mergeFrom(value);
        }
        if (http_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      public Builder clearHttp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        http_ = null;
        if (httpBuilder_ != null) {
          httpBuilder_.dispose();
          httpBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder getHttpBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getHttpFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder getHttpOrBuilder() {
        if (httpBuilder_ != null) {
          return httpBuilder_.getMessageOrBuilder();
        } else {
          return http_ == null ?
              io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.getDefaultInstance() : http_;
        }
      }
      /**
       * <pre>
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.HTTPIngressRuleValue http = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder> 
          getHttpFieldBuilder() {
        if (httpBuilder_ == null) {
          httpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValue.Builder, io.kubernetes.client.proto.V1Networking.HTTPIngressRuleValueOrBuilder>(
                  getHttp(),
                  getParentForChildren(),
                  isClean());
          http_ = null;
        }
        return httpBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressRuleValue)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressRuleValue)
    private static final io.kubernetes.client.proto.V1Networking.IngressRuleValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressRuleValue();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressRuleValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressRuleValue>
        PARSER = new com.google.protobuf.AbstractParser<IngressRuleValue>() {
      @java.lang.Override
      public IngressRuleValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressRuleValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressRuleValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressRuleValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressServiceBackendOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressServiceBackend)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * name is the referenced service. The service must exist in
     * the same namespace as the Ingress object.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * name is the referenced service. The service must exist in
     * the same namespace as the Ingress object.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name is the referenced service. The service must exist in
     * the same namespace as the Ingress object.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * port of the referenced service. A port name or port number
     * is required for a IngressServiceBackend.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * port of the referenced service. A port name or port number
     * is required for a IngressServiceBackend.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
     * @return The port.
     */
    io.kubernetes.client.proto.V1Networking.ServiceBackendPort getPort();
    /**
     * <pre>
     * port of the referenced service. A port name or port number
     * is required for a IngressServiceBackend.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder getPortOrBuilder();
  }
  /**
   * <pre>
   * IngressServiceBackend references a Kubernetes Service as a Backend.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressServiceBackend}
   */
  public static final class IngressServiceBackend extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressServiceBackend)
      IngressServiceBackendOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressServiceBackend.class.getName());
    }
    // Use IngressServiceBackend.newBuilder() to construct.
    private IngressServiceBackend(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressServiceBackend() {
      name_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressServiceBackend_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressServiceBackend_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressServiceBackend.class, io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * name is the referenced service. The service must exist in
     * the same namespace as the Ingress object.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * name is the referenced service. The service must exist in
     * the same namespace as the Ingress object.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * name is the referenced service. The service must exist in
     * the same namespace as the Ingress object.
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.ServiceBackendPort port_;
    /**
     * <pre>
     * port of the referenced service. A port name or port number
     * is required for a IngressServiceBackend.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * port of the referenced service. A port name or port number
     * is required for a IngressServiceBackend.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
     * @return The port.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.ServiceBackendPort getPort() {
      return port_ == null ? io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance() : port_;
    }
    /**
     * <pre>
     * port of the referenced service. A port name or port number
     * is required for a IngressServiceBackend.
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder getPortOrBuilder() {
      return port_ == null ? io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance() : port_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getPort());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPort());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressServiceBackend)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressServiceBackend other = (io.kubernetes.client.proto.V1Networking.IngressServiceBackend) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressServiceBackend prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressServiceBackend references a Kubernetes Service as a Backend.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressServiceBackend}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressServiceBackend)
        io.kubernetes.client.proto.V1Networking.IngressServiceBackendOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressServiceBackend_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressServiceBackend_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressServiceBackend.class, io.kubernetes.client.proto.V1Networking.IngressServiceBackend.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressServiceBackend.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPortFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressServiceBackend_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressServiceBackend getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressServiceBackend build() {
        io.kubernetes.client.proto.V1Networking.IngressServiceBackend result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressServiceBackend buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressServiceBackend result = new io.kubernetes.client.proto.V1Networking.IngressServiceBackend(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressServiceBackend result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.port_ = portBuilder_ == null
              ? port_
              : portBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressServiceBackend) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressServiceBackend)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressServiceBackend other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressServiceBackend.getDefaultInstance()) return this;
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPort()) {
          mergePort(other.getPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPortFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name is the referenced service. The service must exist in
       * the same namespace as the Ingress object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * name is the referenced service. The service must exist in
       * the same namespace as the Ingress object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name is the referenced service. The service must exist in
       * the same namespace as the Ingress object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name is the referenced service. The service must exist in
       * the same namespace as the Ingress object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is the referenced service. The service must exist in
       * the same namespace as the Ingress object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is the referenced service. The service must exist in
       * the same namespace as the Ingress object.
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.V1Networking.ServiceBackendPort port_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.ServiceBackendPort, io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder, io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder> portBuilder_;
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       * @return The port.
       */
      public io.kubernetes.client.proto.V1Networking.ServiceBackendPort getPort() {
        if (portBuilder_ == null) {
          return port_ == null ? io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance() : port_;
        } else {
          return portBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      public Builder setPort(io.kubernetes.client.proto.V1Networking.ServiceBackendPort value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          port_ = value;
        } else {
          portBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      public Builder setPort(
          io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder builderForValue) {
        if (portBuilder_ == null) {
          port_ = builderForValue.build();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      public Builder mergePort(io.kubernetes.client.proto.V1Networking.ServiceBackendPort value) {
        if (portBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            port_ != null &&
            port_ != io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance()) {
            getPortBuilder().mergeFrom(value);
          } else {
            port_ = value;
          }
        } else {
          portBuilder_.mergeFrom(value);
        }
        if (port_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder getPortBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder getPortOrBuilder() {
        if (portBuilder_ != null) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          return port_ == null ?
              io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance() : port_;
        }
      }
      /**
       * <pre>
       * port of the referenced service. A port name or port number
       * is required for a IngressServiceBackend.
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.ServiceBackendPort port = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.ServiceBackendPort, io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder, io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          portBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.ServiceBackendPort, io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder, io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder>(
                  getPort(),
                  getParentForChildren(),
                  isClean());
          port_ = null;
        }
        return portBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressServiceBackend)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressServiceBackend)
    private static final io.kubernetes.client.proto.V1Networking.IngressServiceBackend DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressServiceBackend();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressServiceBackend getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressServiceBackend>
        PARSER = new com.google.protobuf.AbstractParser<IngressServiceBackend>() {
      @java.lang.Override
      public IngressServiceBackend parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressServiceBackend> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressServiceBackend> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressServiceBackend getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ingressClassName is the name of an IngressClass cluster resource. Ingress
     * controller implementations use this field to know whether they should be
     * serving this Ingress resource, by a transitive connection
     * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
     * `kubernetes.io/ingress.class` annotation (simple constant name) was never
     * formally defined, it was widely supported by Ingress controllers to create
     * a direct binding between Ingress controller and Ingress resources. Newly
     * created Ingress resources should prefer using the field. However, even
     * though the annotation is officially deprecated, for backwards compatibility
     * reasons, ingress controllers should still honor that annotation if present.
     * +optional
     * </pre>
     *
     * <code>optional string ingressClassName = 4;</code>
     * @return Whether the ingressClassName field is set.
     */
    boolean hasIngressClassName();
    /**
     * <pre>
     * ingressClassName is the name of an IngressClass cluster resource. Ingress
     * controller implementations use this field to know whether they should be
     * serving this Ingress resource, by a transitive connection
     * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
     * `kubernetes.io/ingress.class` annotation (simple constant name) was never
     * formally defined, it was widely supported by Ingress controllers to create
     * a direct binding between Ingress controller and Ingress resources. Newly
     * created Ingress resources should prefer using the field. However, even
     * though the annotation is officially deprecated, for backwards compatibility
     * reasons, ingress controllers should still honor that annotation if present.
     * +optional
     * </pre>
     *
     * <code>optional string ingressClassName = 4;</code>
     * @return The ingressClassName.
     */
    java.lang.String getIngressClassName();
    /**
     * <pre>
     * ingressClassName is the name of an IngressClass cluster resource. Ingress
     * controller implementations use this field to know whether they should be
     * serving this Ingress resource, by a transitive connection
     * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
     * `kubernetes.io/ingress.class` annotation (simple constant name) was never
     * formally defined, it was widely supported by Ingress controllers to create
     * a direct binding between Ingress controller and Ingress resources. Newly
     * created Ingress resources should prefer using the field. However, even
     * though the annotation is officially deprecated, for backwards compatibility
     * reasons, ingress controllers should still honor that annotation if present.
     * +optional
     * </pre>
     *
     * <code>optional string ingressClassName = 4;</code>
     * @return The bytes for ingressClassName.
     */
    com.google.protobuf.ByteString
        getIngressClassNameBytes();

    /**
     * <pre>
     * defaultBackend is the backend that should handle requests that don't
     * match any rule. If Rules are not specified, DefaultBackend must be specified.
     * If DefaultBackend is not set, the handling of requests that do not match any
     * of the rules will be up to the Ingress controller.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
     * @return Whether the defaultBackend field is set.
     */
    boolean hasDefaultBackend();
    /**
     * <pre>
     * defaultBackend is the backend that should handle requests that don't
     * match any rule. If Rules are not specified, DefaultBackend must be specified.
     * If DefaultBackend is not set, the handling of requests that do not match any
     * of the rules will be up to the Ingress controller.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
     * @return The defaultBackend.
     */
    io.kubernetes.client.proto.V1Networking.IngressBackend getDefaultBackend();
    /**
     * <pre>
     * defaultBackend is the backend that should handle requests that don't
     * match any rule. If Rules are not specified, DefaultBackend must be specified.
     * If DefaultBackend is not set, the handling of requests that do not match any
     * of the rules will be up to the Ingress controller.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder getDefaultBackendOrBuilder();

    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.IngressTLS> 
        getTlsList();
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressTLS getTls(int index);
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    int getTlsCount();
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder> 
        getTlsOrBuilderList();
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder getTlsOrBuilder(
        int index);

    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.IngressRule> 
        getRulesList();
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressRule getRules(int index);
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    int getRulesCount();
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder> 
        getRulesOrBuilderList();
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder getRulesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * IngressSpec describes the Ingress the user wishes to exist.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressSpec}
   */
  public static final class IngressSpec extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressSpec)
      IngressSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressSpec.class.getName());
    }
    // Use IngressSpec.newBuilder() to construct.
    private IngressSpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressSpec() {
      ingressClassName_ = "";
      tls_ = java.util.Collections.emptyList();
      rules_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressSpec.class, io.kubernetes.client.proto.V1Networking.IngressSpec.Builder.class);
    }

    private int bitField0_;
    public static final int INGRESSCLASSNAME_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object ingressClassName_ = "";
    /**
     * <pre>
     * ingressClassName is the name of an IngressClass cluster resource. Ingress
     * controller implementations use this field to know whether they should be
     * serving this Ingress resource, by a transitive connection
     * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
     * `kubernetes.io/ingress.class` annotation (simple constant name) was never
     * formally defined, it was widely supported by Ingress controllers to create
     * a direct binding between Ingress controller and Ingress resources. Newly
     * created Ingress resources should prefer using the field. However, even
     * though the annotation is officially deprecated, for backwards compatibility
     * reasons, ingress controllers should still honor that annotation if present.
     * +optional
     * </pre>
     *
     * <code>optional string ingressClassName = 4;</code>
     * @return Whether the ingressClassName field is set.
     */
    @java.lang.Override
    public boolean hasIngressClassName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * ingressClassName is the name of an IngressClass cluster resource. Ingress
     * controller implementations use this field to know whether they should be
     * serving this Ingress resource, by a transitive connection
     * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
     * `kubernetes.io/ingress.class` annotation (simple constant name) was never
     * formally defined, it was widely supported by Ingress controllers to create
     * a direct binding between Ingress controller and Ingress resources. Newly
     * created Ingress resources should prefer using the field. However, even
     * though the annotation is officially deprecated, for backwards compatibility
     * reasons, ingress controllers should still honor that annotation if present.
     * +optional
     * </pre>
     *
     * <code>optional string ingressClassName = 4;</code>
     * @return The ingressClassName.
     */
    @java.lang.Override
    public java.lang.String getIngressClassName() {
      java.lang.Object ref = ingressClassName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ingressClassName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * ingressClassName is the name of an IngressClass cluster resource. Ingress
     * controller implementations use this field to know whether they should be
     * serving this Ingress resource, by a transitive connection
     * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
     * `kubernetes.io/ingress.class` annotation (simple constant name) was never
     * formally defined, it was widely supported by Ingress controllers to create
     * a direct binding between Ingress controller and Ingress resources. Newly
     * created Ingress resources should prefer using the field. However, even
     * though the annotation is officially deprecated, for backwards compatibility
     * reasons, ingress controllers should still honor that annotation if present.
     * +optional
     * </pre>
     *
     * <code>optional string ingressClassName = 4;</code>
     * @return The bytes for ingressClassName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIngressClassNameBytes() {
      java.lang.Object ref = ingressClassName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ingressClassName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DEFAULTBACKEND_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.V1Networking.IngressBackend defaultBackend_;
    /**
     * <pre>
     * defaultBackend is the backend that should handle requests that don't
     * match any rule. If Rules are not specified, DefaultBackend must be specified.
     * If DefaultBackend is not set, the handling of requests that do not match any
     * of the rules will be up to the Ingress controller.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
     * @return Whether the defaultBackend field is set.
     */
    @java.lang.Override
    public boolean hasDefaultBackend() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * defaultBackend is the backend that should handle requests that don't
     * match any rule. If Rules are not specified, DefaultBackend must be specified.
     * If DefaultBackend is not set, the handling of requests that do not match any
     * of the rules will be up to the Ingress controller.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
     * @return The defaultBackend.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressBackend getDefaultBackend() {
      return defaultBackend_ == null ? io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : defaultBackend_;
    }
    /**
     * <pre>
     * defaultBackend is the backend that should handle requests that don't
     * match any rule. If Rules are not specified, DefaultBackend must be specified.
     * If DefaultBackend is not set, the handling of requests that do not match any
     * of the rules will be up to the Ingress controller.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder getDefaultBackendOrBuilder() {
      return defaultBackend_ == null ? io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : defaultBackend_;
    }

    public static final int TLS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.IngressTLS> tls_;
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.IngressTLS> getTlsList() {
      return tls_;
    }
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder> 
        getTlsOrBuilderList() {
      return tls_;
    }
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    @java.lang.Override
    public int getTlsCount() {
      return tls_.size();
    }
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressTLS getTls(int index) {
      return tls_.get(index);
    }
    /**
     * <pre>
     * tls represents the TLS configuration. Currently the Ingress only supports a
     * single TLS port, 443. If multiple members of this list specify different hosts,
     * they will be multiplexed on the same port according to the hostname specified
     * through the SNI TLS extension, if the ingress controller fulfilling the
     * ingress supports SNI.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder getTlsOrBuilder(
        int index) {
      return tls_.get(index);
    }

    public static final int RULES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.IngressRule> rules_;
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.IngressRule> getRulesList() {
      return rules_;
    }
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder> 
        getRulesOrBuilderList() {
      return rules_;
    }
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    @java.lang.Override
    public int getRulesCount() {
      return rules_.size();
    }
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressRule getRules(int index) {
      return rules_.get(index);
    }
    /**
     * <pre>
     * rules is a list of host rules used to configure the Ingress. If unspecified,
     * or no rule matches, all traffic is sent to the default backend.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder getRulesOrBuilder(
        int index) {
      return rules_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(1, getDefaultBackend());
      }
      for (int i = 0; i < tls_.size(); i++) {
        output.writeMessage(2, tls_.get(i));
      }
      for (int i = 0; i < rules_.size(); i++) {
        output.writeMessage(3, rules_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, ingressClassName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDefaultBackend());
      }
      for (int i = 0; i < tls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tls_.get(i));
      }
      for (int i = 0; i < rules_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, rules_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, ingressClassName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressSpec)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressSpec other = (io.kubernetes.client.proto.V1Networking.IngressSpec) obj;

      if (hasIngressClassName() != other.hasIngressClassName()) return false;
      if (hasIngressClassName()) {
        if (!getIngressClassName()
            .equals(other.getIngressClassName())) return false;
      }
      if (hasDefaultBackend() != other.hasDefaultBackend()) return false;
      if (hasDefaultBackend()) {
        if (!getDefaultBackend()
            .equals(other.getDefaultBackend())) return false;
      }
      if (!getTlsList()
          .equals(other.getTlsList())) return false;
      if (!getRulesList()
          .equals(other.getRulesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIngressClassName()) {
        hash = (37 * hash) + INGRESSCLASSNAME_FIELD_NUMBER;
        hash = (53 * hash) + getIngressClassName().hashCode();
      }
      if (hasDefaultBackend()) {
        hash = (37 * hash) + DEFAULTBACKEND_FIELD_NUMBER;
        hash = (53 * hash) + getDefaultBackend().hashCode();
      }
      if (getTlsCount() > 0) {
        hash = (37 * hash) + TLS_FIELD_NUMBER;
        hash = (53 * hash) + getTlsList().hashCode();
      }
      if (getRulesCount() > 0) {
        hash = (37 * hash) + RULES_FIELD_NUMBER;
        hash = (53 * hash) + getRulesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressSpec describes the Ingress the user wishes to exist.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressSpec)
        io.kubernetes.client.proto.V1Networking.IngressSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressSpec.class, io.kubernetes.client.proto.V1Networking.IngressSpec.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDefaultBackendFieldBuilder();
          getTlsFieldBuilder();
          getRulesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        ingressClassName_ = "";
        defaultBackend_ = null;
        if (defaultBackendBuilder_ != null) {
          defaultBackendBuilder_.dispose();
          defaultBackendBuilder_ = null;
        }
        if (tlsBuilder_ == null) {
          tls_ = java.util.Collections.emptyList();
        } else {
          tls_ = null;
          tlsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
        } else {
          rules_ = null;
          rulesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressSpec_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressSpec getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressSpec build() {
        io.kubernetes.client.proto.V1Networking.IngressSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressSpec buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressSpec result = new io.kubernetes.client.proto.V1Networking.IngressSpec(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.IngressSpec result) {
        if (tlsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            tls_ = java.util.Collections.unmodifiableList(tls_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tls_ = tls_;
        } else {
          result.tls_ = tlsBuilder_.build();
        }
        if (rulesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            rules_ = java.util.Collections.unmodifiableList(rules_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.rules_ = rules_;
        } else {
          result.rules_ = rulesBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressSpec result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.ingressClassName_ = ingressClassName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.defaultBackend_ = defaultBackendBuilder_ == null
              ? defaultBackend_
              : defaultBackendBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressSpec) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressSpec other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressSpec.getDefaultInstance()) return this;
        if (other.hasIngressClassName()) {
          ingressClassName_ = other.ingressClassName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasDefaultBackend()) {
          mergeDefaultBackend(other.getDefaultBackend());
        }
        if (tlsBuilder_ == null) {
          if (!other.tls_.isEmpty()) {
            if (tls_.isEmpty()) {
              tls_ = other.tls_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTlsIsMutable();
              tls_.addAll(other.tls_);
            }
            onChanged();
          }
        } else {
          if (!other.tls_.isEmpty()) {
            if (tlsBuilder_.isEmpty()) {
              tlsBuilder_.dispose();
              tlsBuilder_ = null;
              tls_ = other.tls_;
              bitField0_ = (bitField0_ & ~0x00000004);
              tlsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTlsFieldBuilder() : null;
            } else {
              tlsBuilder_.addAllMessages(other.tls_);
            }
          }
        }
        if (rulesBuilder_ == null) {
          if (!other.rules_.isEmpty()) {
            if (rules_.isEmpty()) {
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureRulesIsMutable();
              rules_.addAll(other.rules_);
            }
            onChanged();
          }
        } else {
          if (!other.rules_.isEmpty()) {
            if (rulesBuilder_.isEmpty()) {
              rulesBuilder_.dispose();
              rulesBuilder_ = null;
              rules_ = other.rules_;
              bitField0_ = (bitField0_ & ~0x00000008);
              rulesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRulesFieldBuilder() : null;
            } else {
              rulesBuilder_.addAllMessages(other.rules_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getDefaultBackendFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.IngressTLS m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.IngressTLS.parser(),
                        extensionRegistry);
                if (tlsBuilder_ == null) {
                  ensureTlsIsMutable();
                  tls_.add(m);
                } else {
                  tlsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                io.kubernetes.client.proto.V1Networking.IngressRule m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.IngressRule.parser(),
                        extensionRegistry);
                if (rulesBuilder_ == null) {
                  ensureRulesIsMutable();
                  rules_.add(m);
                } else {
                  rulesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                ingressClassName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object ingressClassName_ = "";
      /**
       * <pre>
       * ingressClassName is the name of an IngressClass cluster resource. Ingress
       * controller implementations use this field to know whether they should be
       * serving this Ingress resource, by a transitive connection
       * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
       * `kubernetes.io/ingress.class` annotation (simple constant name) was never
       * formally defined, it was widely supported by Ingress controllers to create
       * a direct binding between Ingress controller and Ingress resources. Newly
       * created Ingress resources should prefer using the field. However, even
       * though the annotation is officially deprecated, for backwards compatibility
       * reasons, ingress controllers should still honor that annotation if present.
       * +optional
       * </pre>
       *
       * <code>optional string ingressClassName = 4;</code>
       * @return Whether the ingressClassName field is set.
       */
      public boolean hasIngressClassName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * ingressClassName is the name of an IngressClass cluster resource. Ingress
       * controller implementations use this field to know whether they should be
       * serving this Ingress resource, by a transitive connection
       * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
       * `kubernetes.io/ingress.class` annotation (simple constant name) was never
       * formally defined, it was widely supported by Ingress controllers to create
       * a direct binding between Ingress controller and Ingress resources. Newly
       * created Ingress resources should prefer using the field. However, even
       * though the annotation is officially deprecated, for backwards compatibility
       * reasons, ingress controllers should still honor that annotation if present.
       * +optional
       * </pre>
       *
       * <code>optional string ingressClassName = 4;</code>
       * @return The ingressClassName.
       */
      public java.lang.String getIngressClassName() {
        java.lang.Object ref = ingressClassName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ingressClassName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * ingressClassName is the name of an IngressClass cluster resource. Ingress
       * controller implementations use this field to know whether they should be
       * serving this Ingress resource, by a transitive connection
       * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
       * `kubernetes.io/ingress.class` annotation (simple constant name) was never
       * formally defined, it was widely supported by Ingress controllers to create
       * a direct binding between Ingress controller and Ingress resources. Newly
       * created Ingress resources should prefer using the field. However, even
       * though the annotation is officially deprecated, for backwards compatibility
       * reasons, ingress controllers should still honor that annotation if present.
       * +optional
       * </pre>
       *
       * <code>optional string ingressClassName = 4;</code>
       * @return The bytes for ingressClassName.
       */
      public com.google.protobuf.ByteString
          getIngressClassNameBytes() {
        java.lang.Object ref = ingressClassName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ingressClassName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * ingressClassName is the name of an IngressClass cluster resource. Ingress
       * controller implementations use this field to know whether they should be
       * serving this Ingress resource, by a transitive connection
       * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
       * `kubernetes.io/ingress.class` annotation (simple constant name) was never
       * formally defined, it was widely supported by Ingress controllers to create
       * a direct binding between Ingress controller and Ingress resources. Newly
       * created Ingress resources should prefer using the field. However, even
       * though the annotation is officially deprecated, for backwards compatibility
       * reasons, ingress controllers should still honor that annotation if present.
       * +optional
       * </pre>
       *
       * <code>optional string ingressClassName = 4;</code>
       * @param value The ingressClassName to set.
       * @return This builder for chaining.
       */
      public Builder setIngressClassName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ingressClassName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ingressClassName is the name of an IngressClass cluster resource. Ingress
       * controller implementations use this field to know whether they should be
       * serving this Ingress resource, by a transitive connection
       * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
       * `kubernetes.io/ingress.class` annotation (simple constant name) was never
       * formally defined, it was widely supported by Ingress controllers to create
       * a direct binding between Ingress controller and Ingress resources. Newly
       * created Ingress resources should prefer using the field. However, even
       * though the annotation is officially deprecated, for backwards compatibility
       * reasons, ingress controllers should still honor that annotation if present.
       * +optional
       * </pre>
       *
       * <code>optional string ingressClassName = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIngressClassName() {
        ingressClassName_ = getDefaultInstance().getIngressClassName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ingressClassName is the name of an IngressClass cluster resource. Ingress
       * controller implementations use this field to know whether they should be
       * serving this Ingress resource, by a transitive connection
       * (controller -&gt; IngressClass -&gt; Ingress resource). Although the
       * `kubernetes.io/ingress.class` annotation (simple constant name) was never
       * formally defined, it was widely supported by Ingress controllers to create
       * a direct binding between Ingress controller and Ingress resources. Newly
       * created Ingress resources should prefer using the field. However, even
       * though the annotation is officially deprecated, for backwards compatibility
       * reasons, ingress controllers should still honor that annotation if present.
       * +optional
       * </pre>
       *
       * <code>optional string ingressClassName = 4;</code>
       * @param value The bytes for ingressClassName to set.
       * @return This builder for chaining.
       */
      public Builder setIngressClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ingressClassName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.V1Networking.IngressBackend defaultBackend_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressBackend, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder> defaultBackendBuilder_;
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       * @return Whether the defaultBackend field is set.
       */
      public boolean hasDefaultBackend() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       * @return The defaultBackend.
       */
      public io.kubernetes.client.proto.V1Networking.IngressBackend getDefaultBackend() {
        if (defaultBackendBuilder_ == null) {
          return defaultBackend_ == null ? io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : defaultBackend_;
        } else {
          return defaultBackendBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      public Builder setDefaultBackend(io.kubernetes.client.proto.V1Networking.IngressBackend value) {
        if (defaultBackendBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          defaultBackend_ = value;
        } else {
          defaultBackendBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      public Builder setDefaultBackend(
          io.kubernetes.client.proto.V1Networking.IngressBackend.Builder builderForValue) {
        if (defaultBackendBuilder_ == null) {
          defaultBackend_ = builderForValue.build();
        } else {
          defaultBackendBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      public Builder mergeDefaultBackend(io.kubernetes.client.proto.V1Networking.IngressBackend value) {
        if (defaultBackendBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            defaultBackend_ != null &&
            defaultBackend_ != io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance()) {
            getDefaultBackendBuilder().mergeFrom(value);
          } else {
            defaultBackend_ = value;
          }
        } else {
          defaultBackendBuilder_.mergeFrom(value);
        }
        if (defaultBackend_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      public Builder clearDefaultBackend() {
        bitField0_ = (bitField0_ & ~0x00000002);
        defaultBackend_ = null;
        if (defaultBackendBuilder_ != null) {
          defaultBackendBuilder_.dispose();
          defaultBackendBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressBackend.Builder getDefaultBackendBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDefaultBackendFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder getDefaultBackendOrBuilder() {
        if (defaultBackendBuilder_ != null) {
          return defaultBackendBuilder_.getMessageOrBuilder();
        } else {
          return defaultBackend_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressBackend.getDefaultInstance() : defaultBackend_;
        }
      }
      /**
       * <pre>
       * defaultBackend is the backend that should handle requests that don't
       * match any rule. If Rules are not specified, DefaultBackend must be specified.
       * If DefaultBackend is not set, the handling of requests that do not match any
       * of the rules will be up to the Ingress controller.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressBackend defaultBackend = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressBackend, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder> 
          getDefaultBackendFieldBuilder() {
        if (defaultBackendBuilder_ == null) {
          defaultBackendBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressBackend, io.kubernetes.client.proto.V1Networking.IngressBackend.Builder, io.kubernetes.client.proto.V1Networking.IngressBackendOrBuilder>(
                  getDefaultBackend(),
                  getParentForChildren(),
                  isClean());
          defaultBackend_ = null;
        }
        return defaultBackendBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.IngressTLS> tls_ =
        java.util.Collections.emptyList();
      private void ensureTlsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          tls_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.IngressTLS>(tls_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressTLS, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder, io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder> tlsBuilder_;

      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressTLS> getTlsList() {
        if (tlsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tls_);
        } else {
          return tlsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public int getTlsCount() {
        if (tlsBuilder_ == null) {
          return tls_.size();
        } else {
          return tlsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressTLS getTls(int index) {
        if (tlsBuilder_ == null) {
          return tls_.get(index);
        } else {
          return tlsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder setTls(
          int index, io.kubernetes.client.proto.V1Networking.IngressTLS value) {
        if (tlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTlsIsMutable();
          tls_.set(index, value);
          onChanged();
        } else {
          tlsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder setTls(
          int index, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder builderForValue) {
        if (tlsBuilder_ == null) {
          ensureTlsIsMutable();
          tls_.set(index, builderForValue.build());
          onChanged();
        } else {
          tlsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder addTls(io.kubernetes.client.proto.V1Networking.IngressTLS value) {
        if (tlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTlsIsMutable();
          tls_.add(value);
          onChanged();
        } else {
          tlsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder addTls(
          int index, io.kubernetes.client.proto.V1Networking.IngressTLS value) {
        if (tlsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTlsIsMutable();
          tls_.add(index, value);
          onChanged();
        } else {
          tlsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder addTls(
          io.kubernetes.client.proto.V1Networking.IngressTLS.Builder builderForValue) {
        if (tlsBuilder_ == null) {
          ensureTlsIsMutable();
          tls_.add(builderForValue.build());
          onChanged();
        } else {
          tlsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder addTls(
          int index, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder builderForValue) {
        if (tlsBuilder_ == null) {
          ensureTlsIsMutable();
          tls_.add(index, builderForValue.build());
          onChanged();
        } else {
          tlsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder addAllTls(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.IngressTLS> values) {
        if (tlsBuilder_ == null) {
          ensureTlsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tls_);
          onChanged();
        } else {
          tlsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder clearTls() {
        if (tlsBuilder_ == null) {
          tls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          tlsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public Builder removeTls(int index) {
        if (tlsBuilder_ == null) {
          ensureTlsIsMutable();
          tls_.remove(index);
          onChanged();
        } else {
          tlsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressTLS.Builder getTlsBuilder(
          int index) {
        return getTlsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder getTlsOrBuilder(
          int index) {
        if (tlsBuilder_ == null) {
          return tls_.get(index);  } else {
          return tlsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder> 
           getTlsOrBuilderList() {
        if (tlsBuilder_ != null) {
          return tlsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tls_);
        }
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressTLS.Builder addTlsBuilder() {
        return getTlsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.IngressTLS.getDefaultInstance());
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressTLS.Builder addTlsBuilder(
          int index) {
        return getTlsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.IngressTLS.getDefaultInstance());
      }
      /**
       * <pre>
       * tls represents the TLS configuration. Currently the Ingress only supports a
       * single TLS port, 443. If multiple members of this list specify different hosts,
       * they will be multiplexed on the same port according to the hostname specified
       * through the SNI TLS extension, if the ingress controller fulfilling the
       * ingress supports SNI.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressTLS tls = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressTLS.Builder> 
           getTlsBuilderList() {
        return getTlsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressTLS, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder, io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder> 
          getTlsFieldBuilder() {
        if (tlsBuilder_ == null) {
          tlsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressTLS, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder, io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder>(
                  tls_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          tls_ = null;
        }
        return tlsBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.IngressRule> rules_ =
        java.util.Collections.emptyList();
      private void ensureRulesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          rules_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.IngressRule>(rules_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressRule, io.kubernetes.client.proto.V1Networking.IngressRule.Builder, io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder> rulesBuilder_;

      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressRule> getRulesList() {
        if (rulesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rules_);
        } else {
          return rulesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public int getRulesCount() {
        if (rulesBuilder_ == null) {
          return rules_.size();
        } else {
          return rulesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRule getRules(int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);
        } else {
          return rulesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder setRules(
          int index, io.kubernetes.client.proto.V1Networking.IngressRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.set(index, value);
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder setRules(
          int index, io.kubernetes.client.proto.V1Networking.IngressRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.set(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder addRules(io.kubernetes.client.proto.V1Networking.IngressRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder addRules(
          int index, io.kubernetes.client.proto.V1Networking.IngressRule value) {
        if (rulesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRulesIsMutable();
          rules_.add(index, value);
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder addRules(
          io.kubernetes.client.proto.V1Networking.IngressRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder addRules(
          int index, io.kubernetes.client.proto.V1Networking.IngressRule.Builder builderForValue) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.add(index, builderForValue.build());
          onChanged();
        } else {
          rulesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder addAllRules(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.IngressRule> values) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rules_);
          onChanged();
        } else {
          rulesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder clearRules() {
        if (rulesBuilder_ == null) {
          rules_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          rulesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public Builder removeRules(int index) {
        if (rulesBuilder_ == null) {
          ensureRulesIsMutable();
          rules_.remove(index);
          onChanged();
        } else {
          rulesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRule.Builder getRulesBuilder(
          int index) {
        return getRulesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder getRulesOrBuilder(
          int index) {
        if (rulesBuilder_ == null) {
          return rules_.get(index);  } else {
          return rulesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder> 
           getRulesOrBuilderList() {
        if (rulesBuilder_ != null) {
          return rulesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rules_);
        }
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRule.Builder addRulesBuilder() {
        return getRulesFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.IngressRule.getDefaultInstance());
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressRule.Builder addRulesBuilder(
          int index) {
        return getRulesFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.IngressRule.getDefaultInstance());
      }
      /**
       * <pre>
       * rules is a list of host rules used to configure the Ingress. If unspecified,
       * or no rule matches, all traffic is sent to the default backend.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.IngressRule rules = 3;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.IngressRule.Builder> 
           getRulesBuilderList() {
        return getRulesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressRule, io.kubernetes.client.proto.V1Networking.IngressRule.Builder, io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder> 
          getRulesFieldBuilder() {
        if (rulesBuilder_ == null) {
          rulesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressRule, io.kubernetes.client.proto.V1Networking.IngressRule.Builder, io.kubernetes.client.proto.V1Networking.IngressRuleOrBuilder>(
                  rules_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          rules_ = null;
        }
        return rulesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressSpec)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressSpec)
    private static final io.kubernetes.client.proto.V1Networking.IngressSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressSpec();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressSpec>
        PARSER = new com.google.protobuf.AbstractParser<IngressSpec>() {
      @java.lang.Override
      public IngressSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * loadBalancer contains the current status of the load-balancer.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
     * @return Whether the loadBalancer field is set.
     */
    boolean hasLoadBalancer();
    /**
     * <pre>
     * loadBalancer contains the current status of the load-balancer.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
     * @return The loadBalancer.
     */
    io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus getLoadBalancer();
    /**
     * <pre>
     * loadBalancer contains the current status of the load-balancer.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder getLoadBalancerOrBuilder();
  }
  /**
   * <pre>
   * IngressStatus describe the current state of the Ingress.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressStatus}
   */
  public static final class IngressStatus extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressStatus)
      IngressStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressStatus.class.getName());
    }
    // Use IngressStatus.newBuilder() to construct.
    private IngressStatus(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressStatus() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressStatus.class, io.kubernetes.client.proto.V1Networking.IngressStatus.Builder.class);
    }

    private int bitField0_;
    public static final int LOADBALANCER_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus loadBalancer_;
    /**
     * <pre>
     * loadBalancer contains the current status of the load-balancer.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
     * @return Whether the loadBalancer field is set.
     */
    @java.lang.Override
    public boolean hasLoadBalancer() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * loadBalancer contains the current status of the load-balancer.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
     * @return The loadBalancer.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus getLoadBalancer() {
      return loadBalancer_ == null ? io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance() : loadBalancer_;
    }
    /**
     * <pre>
     * loadBalancer contains the current status of the load-balancer.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder getLoadBalancerOrBuilder() {
      return loadBalancer_ == null ? io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance() : loadBalancer_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getLoadBalancer());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getLoadBalancer());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressStatus)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressStatus other = (io.kubernetes.client.proto.V1Networking.IngressStatus) obj;

      if (hasLoadBalancer() != other.hasLoadBalancer()) return false;
      if (hasLoadBalancer()) {
        if (!getLoadBalancer()
            .equals(other.getLoadBalancer())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLoadBalancer()) {
        hash = (37 * hash) + LOADBALANCER_FIELD_NUMBER;
        hash = (53 * hash) + getLoadBalancer().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressStatus describe the current state of the Ingress.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressStatus)
        io.kubernetes.client.proto.V1Networking.IngressStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressStatus.class, io.kubernetes.client.proto.V1Networking.IngressStatus.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getLoadBalancerFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        loadBalancer_ = null;
        if (loadBalancerBuilder_ != null) {
          loadBalancerBuilder_.dispose();
          loadBalancerBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressStatus_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressStatus getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressStatus build() {
        io.kubernetes.client.proto.V1Networking.IngressStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressStatus buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressStatus result = new io.kubernetes.client.proto.V1Networking.IngressStatus(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressStatus result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.loadBalancer_ = loadBalancerBuilder_ == null
              ? loadBalancer_
              : loadBalancerBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressStatus) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressStatus other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressStatus.getDefaultInstance()) return this;
        if (other.hasLoadBalancer()) {
          mergeLoadBalancer(other.getLoadBalancer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getLoadBalancerFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus loadBalancer_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder> loadBalancerBuilder_;
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       * @return Whether the loadBalancer field is set.
       */
      public boolean hasLoadBalancer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       * @return The loadBalancer.
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus getLoadBalancer() {
        if (loadBalancerBuilder_ == null) {
          return loadBalancer_ == null ? io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance() : loadBalancer_;
        } else {
          return loadBalancerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      public Builder setLoadBalancer(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus value) {
        if (loadBalancerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loadBalancer_ = value;
        } else {
          loadBalancerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      public Builder setLoadBalancer(
          io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder builderForValue) {
        if (loadBalancerBuilder_ == null) {
          loadBalancer_ = builderForValue.build();
        } else {
          loadBalancerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      public Builder mergeLoadBalancer(io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus value) {
        if (loadBalancerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            loadBalancer_ != null &&
            loadBalancer_ != io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance()) {
            getLoadBalancerBuilder().mergeFrom(value);
          } else {
            loadBalancer_ = value;
          }
        } else {
          loadBalancerBuilder_.mergeFrom(value);
        }
        if (loadBalancer_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      public Builder clearLoadBalancer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        loadBalancer_ = null;
        if (loadBalancerBuilder_ != null) {
          loadBalancerBuilder_.dispose();
          loadBalancerBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder getLoadBalancerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getLoadBalancerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder getLoadBalancerOrBuilder() {
        if (loadBalancerBuilder_ != null) {
          return loadBalancerBuilder_.getMessageOrBuilder();
        } else {
          return loadBalancer_ == null ?
              io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.getDefaultInstance() : loadBalancer_;
        }
      }
      /**
       * <pre>
       * loadBalancer contains the current status of the load-balancer.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IngressLoadBalancerStatus loadBalancer = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder> 
          getLoadBalancerFieldBuilder() {
        if (loadBalancerBuilder_ == null) {
          loadBalancerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatus.Builder, io.kubernetes.client.proto.V1Networking.IngressLoadBalancerStatusOrBuilder>(
                  getLoadBalancer(),
                  getParentForChildren(),
                  isClean());
          loadBalancer_ = null;
        }
        return loadBalancerBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressStatus)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressStatus)
    private static final io.kubernetes.client.proto.V1Networking.IngressStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressStatus();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressStatus>
        PARSER = new com.google.protobuf.AbstractParser<IngressStatus>() {
      @java.lang.Override
      public IngressStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IngressTLSOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.IngressTLS)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @return A list containing the hosts.
     */
    java.util.List<java.lang.String>
        getHostsList();
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @return The count of hosts.
     */
    int getHostsCount();
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    java.lang.String getHosts(int index);
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    com.google.protobuf.ByteString
        getHostsBytes(int index);

    /**
     * <pre>
     * secretName is the name of the secret used to terminate TLS traffic on
     * port 443. Field is left optional to allow TLS routing based on SNI
     * hostname alone. If the SNI host in a listener conflicts with the "Host"
     * header field used by an IngressRule, the SNI host is used for termination
     * and value of the "Host" header is used for routing.
     * +optional
     * </pre>
     *
     * <code>optional string secretName = 2;</code>
     * @return Whether the secretName field is set.
     */
    boolean hasSecretName();
    /**
     * <pre>
     * secretName is the name of the secret used to terminate TLS traffic on
     * port 443. Field is left optional to allow TLS routing based on SNI
     * hostname alone. If the SNI host in a listener conflicts with the "Host"
     * header field used by an IngressRule, the SNI host is used for termination
     * and value of the "Host" header is used for routing.
     * +optional
     * </pre>
     *
     * <code>optional string secretName = 2;</code>
     * @return The secretName.
     */
    java.lang.String getSecretName();
    /**
     * <pre>
     * secretName is the name of the secret used to terminate TLS traffic on
     * port 443. Field is left optional to allow TLS routing based on SNI
     * hostname alone. If the SNI host in a listener conflicts with the "Host"
     * header field used by an IngressRule, the SNI host is used for termination
     * and value of the "Host" header is used for routing.
     * +optional
     * </pre>
     *
     * <code>optional string secretName = 2;</code>
     * @return The bytes for secretName.
     */
    com.google.protobuf.ByteString
        getSecretNameBytes();
  }
  /**
   * <pre>
   * IngressTLS describes the transport layer security associated with an ingress.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.IngressTLS}
   */
  public static final class IngressTLS extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.IngressTLS)
      IngressTLSOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        IngressTLS.class.getName());
    }
    // Use IngressTLS.newBuilder() to construct.
    private IngressTLS(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IngressTLS() {
      hosts_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      secretName_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressTLS_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressTLS_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.IngressTLS.class, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder.class);
    }

    private int bitField0_;
    public static final int HOSTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList hosts_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @return A list containing the hosts.
     */
    public com.google.protobuf.ProtocolStringList
        getHostsList() {
      return hosts_;
    }
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @return The count of hosts.
     */
    public int getHostsCount() {
      return hosts_.size();
    }
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @param index The index of the element to return.
     * @return The hosts at the given index.
     */
    public java.lang.String getHosts(int index) {
      return hosts_.get(index);
    }
    /**
     * <pre>
     * hosts is a list of hosts included in the TLS certificate. The values in
     * this list must match the name/s used in the tlsSecret. Defaults to the
     * wildcard host setting for the loadbalancer controller fulfilling this
     * Ingress, if left unspecified.
     * +listType=atomic
     * +optional
     * </pre>
     *
     * <code>repeated string hosts = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the hosts at the given index.
     */
    public com.google.protobuf.ByteString
        getHostsBytes(int index) {
      return hosts_.getByteString(index);
    }

    public static final int SECRETNAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object secretName_ = "";
    /**
     * <pre>
     * secretName is the name of the secret used to terminate TLS traffic on
     * port 443. Field is left optional to allow TLS routing based on SNI
     * hostname alone. If the SNI host in a listener conflicts with the "Host"
     * header field used by an IngressRule, the SNI host is used for termination
     * and value of the "Host" header is used for routing.
     * +optional
     * </pre>
     *
     * <code>optional string secretName = 2;</code>
     * @return Whether the secretName field is set.
     */
    @java.lang.Override
    public boolean hasSecretName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * secretName is the name of the secret used to terminate TLS traffic on
     * port 443. Field is left optional to allow TLS routing based on SNI
     * hostname alone. If the SNI host in a listener conflicts with the "Host"
     * header field used by an IngressRule, the SNI host is used for termination
     * and value of the "Host" header is used for routing.
     * +optional
     * </pre>
     *
     * <code>optional string secretName = 2;</code>
     * @return The secretName.
     */
    @java.lang.Override
    public java.lang.String getSecretName() {
      java.lang.Object ref = secretName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          secretName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * secretName is the name of the secret used to terminate TLS traffic on
     * port 443. Field is left optional to allow TLS routing based on SNI
     * hostname alone. If the SNI host in a listener conflicts with the "Host"
     * header field used by an IngressRule, the SNI host is used for termination
     * and value of the "Host" header is used for routing.
     * +optional
     * </pre>
     *
     * <code>optional string secretName = 2;</code>
     * @return The bytes for secretName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSecretNameBytes() {
      java.lang.Object ref = secretName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secretName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hosts_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, hosts_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, secretName_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < hosts_.size(); i++) {
          dataSize += computeStringSizeNoTag(hosts_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getHostsList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, secretName_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.IngressTLS)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.IngressTLS other = (io.kubernetes.client.proto.V1Networking.IngressTLS) obj;

      if (!getHostsList()
          .equals(other.getHostsList())) return false;
      if (hasSecretName() != other.hasSecretName()) return false;
      if (hasSecretName()) {
        if (!getSecretName()
            .equals(other.getSecretName())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getHostsCount() > 0) {
        hash = (37 * hash) + HOSTS_FIELD_NUMBER;
        hash = (53 * hash) + getHostsList().hashCode();
      }
      if (hasSecretName()) {
        hash = (37 * hash) + SECRETNAME_FIELD_NUMBER;
        hash = (53 * hash) + getSecretName().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.IngressTLS parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.IngressTLS prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * IngressTLS describes the transport layer security associated with an ingress.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.IngressTLS}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.IngressTLS)
        io.kubernetes.client.proto.V1Networking.IngressTLSOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressTLS_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressTLS_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.IngressTLS.class, io.kubernetes.client.proto.V1Networking.IngressTLS.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.IngressTLS.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        hosts_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        secretName_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_IngressTLS_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressTLS getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.IngressTLS.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressTLS build() {
        io.kubernetes.client.proto.V1Networking.IngressTLS result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.IngressTLS buildPartial() {
        io.kubernetes.client.proto.V1Networking.IngressTLS result = new io.kubernetes.client.proto.V1Networking.IngressTLS(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.IngressTLS result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          hosts_.makeImmutable();
          result.hosts_ = hosts_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.secretName_ = secretName_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.IngressTLS) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.IngressTLS)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.IngressTLS other) {
        if (other == io.kubernetes.client.proto.V1Networking.IngressTLS.getDefaultInstance()) return this;
        if (!other.hosts_.isEmpty()) {
          if (hosts_.isEmpty()) {
            hosts_ = other.hosts_;
            bitField0_ |= 0x00000001;
          } else {
            ensureHostsIsMutable();
            hosts_.addAll(other.hosts_);
          }
          onChanged();
        }
        if (other.hasSecretName()) {
          secretName_ = other.secretName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureHostsIsMutable();
                hosts_.add(bs);
                break;
              } // case 10
              case 18: {
                secretName_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringArrayList hosts_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureHostsIsMutable() {
        if (!hosts_.isModifiable()) {
          hosts_ = new com.google.protobuf.LazyStringArrayList(hosts_);
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @return A list containing the hosts.
       */
      public com.google.protobuf.ProtocolStringList
          getHostsList() {
        hosts_.makeImmutable();
        return hosts_;
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @return The count of hosts.
       */
      public int getHostsCount() {
        return hosts_.size();
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @param index The index of the element to return.
       * @return The hosts at the given index.
       */
      public java.lang.String getHosts(int index) {
        return hosts_.get(index);
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the hosts at the given index.
       */
      public com.google.protobuf.ByteString
          getHostsBytes(int index) {
        return hosts_.getByteString(index);
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @param index The index to set the value at.
       * @param value The hosts to set.
       * @return This builder for chaining.
       */
      public Builder setHosts(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.set(index, value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @param value The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHosts(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @param values The hosts to add.
       * @return This builder for chaining.
       */
      public Builder addAllHosts(
          java.lang.Iterable<java.lang.String> values) {
        ensureHostsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, hosts_);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHosts() {
        hosts_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * hosts is a list of hosts included in the TLS certificate. The values in
       * this list must match the name/s used in the tlsSecret. Defaults to the
       * wildcard host setting for the loadbalancer controller fulfilling this
       * Ingress, if left unspecified.
       * +listType=atomic
       * +optional
       * </pre>
       *
       * <code>repeated string hosts = 1;</code>
       * @param value The bytes of the hosts to add.
       * @return This builder for chaining.
       */
      public Builder addHostsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureHostsIsMutable();
        hosts_.add(value);
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object secretName_ = "";
      /**
       * <pre>
       * secretName is the name of the secret used to terminate TLS traffic on
       * port 443. Field is left optional to allow TLS routing based on SNI
       * hostname alone. If the SNI host in a listener conflicts with the "Host"
       * header field used by an IngressRule, the SNI host is used for termination
       * and value of the "Host" header is used for routing.
       * +optional
       * </pre>
       *
       * <code>optional string secretName = 2;</code>
       * @return Whether the secretName field is set.
       */
      public boolean hasSecretName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * secretName is the name of the secret used to terminate TLS traffic on
       * port 443. Field is left optional to allow TLS routing based on SNI
       * hostname alone. If the SNI host in a listener conflicts with the "Host"
       * header field used by an IngressRule, the SNI host is used for termination
       * and value of the "Host" header is used for routing.
       * +optional
       * </pre>
       *
       * <code>optional string secretName = 2;</code>
       * @return The secretName.
       */
      public java.lang.String getSecretName() {
        java.lang.Object ref = secretName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            secretName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * secretName is the name of the secret used to terminate TLS traffic on
       * port 443. Field is left optional to allow TLS routing based on SNI
       * hostname alone. If the SNI host in a listener conflicts with the "Host"
       * header field used by an IngressRule, the SNI host is used for termination
       * and value of the "Host" header is used for routing.
       * +optional
       * </pre>
       *
       * <code>optional string secretName = 2;</code>
       * @return The bytes for secretName.
       */
      public com.google.protobuf.ByteString
          getSecretNameBytes() {
        java.lang.Object ref = secretName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          secretName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * secretName is the name of the secret used to terminate TLS traffic on
       * port 443. Field is left optional to allow TLS routing based on SNI
       * hostname alone. If the SNI host in a listener conflicts with the "Host"
       * header field used by an IngressRule, the SNI host is used for termination
       * and value of the "Host" header is used for routing.
       * +optional
       * </pre>
       *
       * <code>optional string secretName = 2;</code>
       * @param value The secretName to set.
       * @return This builder for chaining.
       */
      public Builder setSecretName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        secretName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * secretName is the name of the secret used to terminate TLS traffic on
       * port 443. Field is left optional to allow TLS routing based on SNI
       * hostname alone. If the SNI host in a listener conflicts with the "Host"
       * header field used by an IngressRule, the SNI host is used for termination
       * and value of the "Host" header is used for routing.
       * +optional
       * </pre>
       *
       * <code>optional string secretName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecretName() {
        secretName_ = getDefaultInstance().getSecretName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * secretName is the name of the secret used to terminate TLS traffic on
       * port 443. Field is left optional to allow TLS routing based on SNI
       * hostname alone. If the SNI host in a listener conflicts with the "Host"
       * header field used by an IngressRule, the SNI host is used for termination
       * and value of the "Host" header is used for routing.
       * +optional
       * </pre>
       *
       * <code>optional string secretName = 2;</code>
       * @param value The bytes for secretName to set.
       * @return This builder for chaining.
       */
      public Builder setSecretNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        secretName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.IngressTLS)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.IngressTLS)
    private static final io.kubernetes.client.proto.V1Networking.IngressTLS DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.IngressTLS();
    }

    public static io.kubernetes.client.proto.V1Networking.IngressTLS getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IngressTLS>
        PARSER = new com.google.protobuf.AbstractParser<IngressTLS>() {
      @java.lang.Override
      public IngressTLS parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<IngressTLS> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IngressTLS> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IngressTLS getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ObjectMeta getMetadata();
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * spec represents the specification of the desired behavior for this NetworkPolicy.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    boolean hasSpec();
    /**
     * <pre>
     * spec represents the specification of the desired behavior for this NetworkPolicy.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
     * @return The spec.
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicySpec getSpec();
    /**
     * <pre>
     * spec represents the specification of the desired behavior for this NetworkPolicy.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder getSpecOrBuilder();
  }
  /**
   * <pre>
   * NetworkPolicy describes what network traffic is allowed for a set of Pods
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicy}
   */
  public static final class NetworkPolicy extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicy)
      NetworkPolicyOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicy.class.getName());
    }
    // Use NetworkPolicy.newBuilder() to construct.
    private NetworkPolicy(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicy() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicy.class, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Standard object's metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
    }

    public static final int SPEC_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.V1Networking.NetworkPolicySpec spec_;
    /**
     * <pre>
     * spec represents the specification of the desired behavior for this NetworkPolicy.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
     * @return Whether the spec field is set.
     */
    @java.lang.Override
    public boolean hasSpec() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * spec represents the specification of the desired behavior for this NetworkPolicy.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
     * @return The spec.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec getSpec() {
      return spec_ == null ? io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance() : spec_;
    }
    /**
     * <pre>
     * spec represents the specification of the desired behavior for this NetworkPolicy.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder getSpecOrBuilder() {
      return spec_ == null ? io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance() : spec_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getSpec());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getSpec());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicy)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicy other = (io.kubernetes.client.proto.V1Networking.NetworkPolicy) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasSpec() != other.hasSpec()) return false;
      if (hasSpec()) {
        if (!getSpec()
            .equals(other.getSpec())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasSpec()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getSpec().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicy describes what network traffic is allowed for a set of Pods
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicy)
        io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicy.class, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getSpecFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicy_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicy.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicy result = new io.kubernetes.client.proto.V1Networking.NetworkPolicy(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicy result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.spec_ = specBuilder_ == null
              ? spec_
              : specBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicy) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicy other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicy.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasSpec()) {
          mergeSpec(other.getSpec());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getSpecFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ObjectMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ObjectMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ObjectMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ObjectMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Standard object's metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ObjectMeta, io.kubernetes.client.proto.Meta.ObjectMeta.Builder, io.kubernetes.client.proto.Meta.ObjectMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private io.kubernetes.client.proto.V1Networking.NetworkPolicySpec spec_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicySpec, io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder> specBuilder_;
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       * @return Whether the spec field is set.
       */
      public boolean hasSpec() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       * @return The spec.
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec getSpec() {
        if (specBuilder_ == null) {
          return spec_ == null ? io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance() : spec_;
        } else {
          return specBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      public Builder setSpec(io.kubernetes.client.proto.V1Networking.NetworkPolicySpec value) {
        if (specBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
        } else {
          specBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      public Builder setSpec(
          io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder builderForValue) {
        if (specBuilder_ == null) {
          spec_ = builderForValue.build();
        } else {
          specBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      public Builder mergeSpec(io.kubernetes.client.proto.V1Networking.NetworkPolicySpec value) {
        if (specBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            spec_ != null &&
            spec_ != io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance()) {
            getSpecBuilder().mergeFrom(value);
          } else {
            spec_ = value;
          }
        } else {
          specBuilder_.mergeFrom(value);
        }
        if (spec_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      public Builder clearSpec() {
        bitField0_ = (bitField0_ & ~0x00000002);
        spec_ = null;
        if (specBuilder_ != null) {
          specBuilder_.dispose();
          specBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder getSpecBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder getSpecOrBuilder() {
        if (specBuilder_ != null) {
          return specBuilder_.getMessageOrBuilder();
        } else {
          return spec_ == null ?
              io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance() : spec_;
        }
      }
      /**
       * <pre>
       * spec represents the specification of the desired behavior for this NetworkPolicy.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.NetworkPolicySpec spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicySpec, io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder> 
          getSpecFieldBuilder() {
        if (specBuilder_ == null) {
          specBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicySpec, io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder>(
                  getSpec(),
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        return specBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicy)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicy)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicy();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicy>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicy>() {
      @java.lang.Override
      public NetworkPolicy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicyEgressRuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicyEgressRule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> 
        getPortsList();
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getPorts(int index);
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    int getPortsCount();
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
        getPortsOrBuilderList();
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder getPortsOrBuilder(
        int index);

    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> 
        getToList();
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getTo(int index);
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    int getToCount();
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
        getToOrBuilderList();
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder getToOrBuilder(
        int index);
  }
  /**
   * <pre>
   * NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods
   * matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to.
   * This type is beta-level in 1.8
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyEgressRule}
   */
  public static final class NetworkPolicyEgressRule extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicyEgressRule)
      NetworkPolicyEgressRuleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicyEgressRule.class.getName());
    }
    // Use NetworkPolicyEgressRule.newBuilder() to construct.
    private NetworkPolicyEgressRule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicyEgressRule() {
      ports_ = java.util.Collections.emptyList();
      to_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder.class);
    }

    public static final int PORTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> ports_;
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> getPortsList() {
      return ports_;
    }
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
        getPortsOrBuilderList() {
      return ports_;
    }
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public int getPortsCount() {
      return ports_.size();
    }
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getPorts(int index) {
      return ports_.get(index);
    }
    /**
     * <pre>
     * ports is a list of destination ports for outgoing traffic.
     * Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder getPortsOrBuilder(
        int index) {
      return ports_.get(index);
    }

    public static final int TO_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> to_;
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> getToList() {
      return to_;
    }
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
        getToOrBuilderList() {
      return to_;
    }
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    @java.lang.Override
    public int getToCount() {
      return to_.size();
    }
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getTo(int index) {
      return to_.get(index);
    }
    /**
     * <pre>
     * to is a list of destinations for outgoing traffic of pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all destinations (traffic not restricted by
     * destination). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the to list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder getToOrBuilder(
        int index) {
      return to_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < ports_.size(); i++) {
        output.writeMessage(1, ports_.get(i));
      }
      for (int i = 0; i < to_.size(); i++) {
        output.writeMessage(2, to_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ports_.get(i));
      }
      for (int i = 0; i < to_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, to_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule other = (io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule) obj;

      if (!getPortsList()
          .equals(other.getPortsList())) return false;
      if (!getToList()
          .equals(other.getToList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPortsCount() > 0) {
        hash = (37 * hash) + PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getPortsList().hashCode();
      }
      if (getToCount() > 0) {
        hash = (37 * hash) + TO_FIELD_NUMBER;
        hash = (53 * hash) + getToList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods
     * matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to.
     * This type is beta-level in 1.8
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyEgressRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicyEgressRule)
        io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
        } else {
          ports_ = null;
          portsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (toBuilder_ == null) {
          to_ = java.util.Collections.emptyList();
        } else {
          to_ = null;
          toBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule result = new io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule result) {
        if (portsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            ports_ = java.util.Collections.unmodifiableList(ports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ports_ = ports_;
        } else {
          result.ports_ = portsBuilder_.build();
        }
        if (toBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            to_ = java.util.Collections.unmodifiableList(to_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.to_ = to_;
        } else {
          result.to_ = toBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.getDefaultInstance()) return this;
        if (portsBuilder_ == null) {
          if (!other.ports_.isEmpty()) {
            if (ports_.isEmpty()) {
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePortsIsMutable();
              ports_.addAll(other.ports_);
            }
            onChanged();
          }
        } else {
          if (!other.ports_.isEmpty()) {
            if (portsBuilder_.isEmpty()) {
              portsBuilder_.dispose();
              portsBuilder_ = null;
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              portsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPortsFieldBuilder() : null;
            } else {
              portsBuilder_.addAllMessages(other.ports_);
            }
          }
        }
        if (toBuilder_ == null) {
          if (!other.to_.isEmpty()) {
            if (to_.isEmpty()) {
              to_ = other.to_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureToIsMutable();
              to_.addAll(other.to_);
            }
            onChanged();
          }
        } else {
          if (!other.to_.isEmpty()) {
            if (toBuilder_.isEmpty()) {
              toBuilder_.dispose();
              toBuilder_ = null;
              to_ = other.to_;
              bitField0_ = (bitField0_ & ~0x00000002);
              toBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getToFieldBuilder() : null;
            } else {
              toBuilder_.addAllMessages(other.to_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicyPort m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.parser(),
                        extensionRegistry);
                if (portsBuilder_ == null) {
                  ensurePortsIsMutable();
                  ports_.add(m);
                } else {
                  portsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.parser(),
                        extensionRegistry);
                if (toBuilder_ == null) {
                  ensureToIsMutable();
                  to_.add(m);
                } else {
                  toBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> ports_ =
        java.util.Collections.emptyList();
      private void ensurePortsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ports_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort>(ports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPort, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> portsBuilder_;

      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> getPortsList() {
        if (portsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ports_);
        } else {
          return portsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public int getPortsCount() {
        if (portsBuilder_ == null) {
          return ports_.size();
        } else {
          return portsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getPorts(int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);
        } else {
          return portsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder setPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.set(index, value);
          onChanged();
        } else {
          portsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder setPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.set(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(io.kubernetes.client.proto.V1Networking.NetworkPolicyPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(value);
          onChanged();
        } else {
          portsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(index, value);
          onChanged();
        } else {
          portsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addAllPorts(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> values) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ports_);
          onChanged();
        } else {
          portsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder clearPorts() {
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          portsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder removePorts(int index) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.remove(index);
          onChanged();
        } else {
          portsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder getPortsBuilder(
          int index) {
        return getPortsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder getPortsOrBuilder(
          int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);  } else {
          return portsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
           getPortsOrBuilderList() {
        if (portsBuilder_ != null) {
          return portsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ports_);
        }
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder addPortsBuilder() {
        return getPortsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.getDefaultInstance());
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder addPortsBuilder(
          int index) {
        return getPortsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.getDefaultInstance());
      }
      /**
       * <pre>
       * ports is a list of destination ports for outgoing traffic.
       * Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder> 
           getPortsBuilderList() {
        return getPortsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPort, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
          getPortsFieldBuilder() {
        if (portsBuilder_ == null) {
          portsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicyPort, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder>(
                  ports_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          ports_ = null;
        }
        return portsBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> to_ =
        java.util.Collections.emptyList();
      private void ensureToIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          to_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer>(to_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> toBuilder_;

      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> getToList() {
        if (toBuilder_ == null) {
          return java.util.Collections.unmodifiableList(to_);
        } else {
          return toBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public int getToCount() {
        if (toBuilder_ == null) {
          return to_.size();
        } else {
          return toBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getTo(int index) {
        if (toBuilder_ == null) {
          return to_.get(index);
        } else {
          return toBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder setTo(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureToIsMutable();
          to_.set(index, value);
          onChanged();
        } else {
          toBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder setTo(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder builderForValue) {
        if (toBuilder_ == null) {
          ensureToIsMutable();
          to_.set(index, builderForValue.build());
          onChanged();
        } else {
          toBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder addTo(io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureToIsMutable();
          to_.add(value);
          onChanged();
        } else {
          toBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder addTo(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer value) {
        if (toBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureToIsMutable();
          to_.add(index, value);
          onChanged();
        } else {
          toBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder addTo(
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder builderForValue) {
        if (toBuilder_ == null) {
          ensureToIsMutable();
          to_.add(builderForValue.build());
          onChanged();
        } else {
          toBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder addTo(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder builderForValue) {
        if (toBuilder_ == null) {
          ensureToIsMutable();
          to_.add(index, builderForValue.build());
          onChanged();
        } else {
          toBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder addAllTo(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> values) {
        if (toBuilder_ == null) {
          ensureToIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, to_);
          onChanged();
        } else {
          toBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder clearTo() {
        if (toBuilder_ == null) {
          to_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          toBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public Builder removeTo(int index) {
        if (toBuilder_ == null) {
          ensureToIsMutable();
          to_.remove(index);
          onChanged();
        } else {
          toBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder getToBuilder(
          int index) {
        return getToFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder getToOrBuilder(
          int index) {
        if (toBuilder_ == null) {
          return to_.get(index);  } else {
          return toBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
           getToOrBuilderList() {
        if (toBuilder_ != null) {
          return toBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(to_);
        }
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder addToBuilder() {
        return getToFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.getDefaultInstance());
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder addToBuilder(
          int index) {
        return getToFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.getDefaultInstance());
      }
      /**
       * <pre>
       * to is a list of destinations for outgoing traffic of pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all destinations (traffic not restricted by
       * destination). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the to list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer to = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder> 
           getToBuilderList() {
        return getToFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
          getToFieldBuilder() {
        if (toBuilder_ == null) {
          toBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder>(
                  to_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          to_ = null;
        }
        return toBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicyEgressRule)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyEgressRule)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicyEgressRule>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicyEgressRule>() {
      @java.lang.Override
      public NetworkPolicyEgressRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicyEgressRule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicyEgressRule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicyIngressRuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicyIngressRule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> 
        getPortsList();
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getPorts(int index);
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    int getPortsCount();
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
        getPortsOrBuilderList();
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder getPortsOrBuilder(
        int index);

    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> 
        getFromList();
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getFrom(int index);
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    int getFromCount();
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
        getFromOrBuilderList();
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder getFromOrBuilder(
        int index);
  }
  /**
   * <pre>
   * NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods
   * matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyIngressRule}
   */
  public static final class NetworkPolicyIngressRule extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicyIngressRule)
      NetworkPolicyIngressRuleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicyIngressRule.class.getName());
    }
    // Use NetworkPolicyIngressRule.newBuilder() to construct.
    private NetworkPolicyIngressRule(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicyIngressRule() {
      ports_ = java.util.Collections.emptyList();
      from_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder.class);
    }

    public static final int PORTS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> ports_;
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> getPortsList() {
      return ports_;
    }
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
        getPortsOrBuilderList() {
      return ports_;
    }
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public int getPortsCount() {
      return ports_.size();
    }
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getPorts(int index) {
      return ports_.get(index);
    }
    /**
     * <pre>
     * ports is a list of ports which should be made accessible on the pods selected for
     * this rule. Each item in this list is combined using a logical OR. If this field is
     * empty or missing, this rule matches all ports (traffic not restricted by port).
     * If this field is present and contains at least one item, then this rule allows
     * traffic only if the traffic matches at least one port in the list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder getPortsOrBuilder(
        int index) {
      return ports_.get(index);
    }

    public static final int FROM_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> from_;
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> getFromList() {
      return from_;
    }
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
        getFromOrBuilderList() {
      return from_;
    }
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    @java.lang.Override
    public int getFromCount() {
      return from_.size();
    }
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getFrom(int index) {
      return from_.get(index);
    }
    /**
     * <pre>
     * from is a list of sources which should be able to access the pods selected for this rule.
     * Items in this list are combined using a logical OR operation. If this field is
     * empty or missing, this rule matches all sources (traffic not restricted by
     * source). If this field is present and contains at least one item, this rule
     * allows traffic only if the traffic matches at least one item in the from list.
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder getFromOrBuilder(
        int index) {
      return from_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < ports_.size(); i++) {
        output.writeMessage(1, ports_.get(i));
      }
      for (int i = 0; i < from_.size(); i++) {
        output.writeMessage(2, from_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < ports_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, ports_.get(i));
      }
      for (int i = 0; i < from_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, from_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule other = (io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule) obj;

      if (!getPortsList()
          .equals(other.getPortsList())) return false;
      if (!getFromList()
          .equals(other.getFromList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPortsCount() > 0) {
        hash = (37 * hash) + PORTS_FIELD_NUMBER;
        hash = (53 * hash) + getPortsList().hashCode();
      }
      if (getFromCount() > 0) {
        hash = (37 * hash) + FROM_FIELD_NUMBER;
        hash = (53 * hash) + getFromList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods
     * matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyIngressRule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicyIngressRule)
        io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
        } else {
          ports_ = null;
          portsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fromBuilder_ == null) {
          from_ = java.util.Collections.emptyList();
        } else {
          from_ = null;
          fromBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule result = new io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule result) {
        if (portsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            ports_ = java.util.Collections.unmodifiableList(ports_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ports_ = ports_;
        } else {
          result.ports_ = portsBuilder_.build();
        }
        if (fromBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            from_ = java.util.Collections.unmodifiableList(from_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.from_ = from_;
        } else {
          result.from_ = fromBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.getDefaultInstance()) return this;
        if (portsBuilder_ == null) {
          if (!other.ports_.isEmpty()) {
            if (ports_.isEmpty()) {
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensurePortsIsMutable();
              ports_.addAll(other.ports_);
            }
            onChanged();
          }
        } else {
          if (!other.ports_.isEmpty()) {
            if (portsBuilder_.isEmpty()) {
              portsBuilder_.dispose();
              portsBuilder_ = null;
              ports_ = other.ports_;
              bitField0_ = (bitField0_ & ~0x00000001);
              portsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPortsFieldBuilder() : null;
            } else {
              portsBuilder_.addAllMessages(other.ports_);
            }
          }
        }
        if (fromBuilder_ == null) {
          if (!other.from_.isEmpty()) {
            if (from_.isEmpty()) {
              from_ = other.from_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureFromIsMutable();
              from_.addAll(other.from_);
            }
            onChanged();
          }
        } else {
          if (!other.from_.isEmpty()) {
            if (fromBuilder_.isEmpty()) {
              fromBuilder_.dispose();
              fromBuilder_ = null;
              from_ = other.from_;
              bitField0_ = (bitField0_ & ~0x00000002);
              fromBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFromFieldBuilder() : null;
            } else {
              fromBuilder_.addAllMessages(other.from_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicyPort m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.parser(),
                        extensionRegistry);
                if (portsBuilder_ == null) {
                  ensurePortsIsMutable();
                  ports_.add(m);
                } else {
                  portsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.parser(),
                        extensionRegistry);
                if (fromBuilder_ == null) {
                  ensureFromIsMutable();
                  from_.add(m);
                } else {
                  fromBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> ports_ =
        java.util.Collections.emptyList();
      private void ensurePortsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          ports_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort>(ports_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPort, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> portsBuilder_;

      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> getPortsList() {
        if (portsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ports_);
        } else {
          return portsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public int getPortsCount() {
        if (portsBuilder_ == null) {
          return ports_.size();
        } else {
          return portsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getPorts(int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);
        } else {
          return portsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder setPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.set(index, value);
          onChanged();
        } else {
          portsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder setPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.set(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(io.kubernetes.client.proto.V1Networking.NetworkPolicyPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(value);
          onChanged();
        } else {
          portsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort value) {
        if (portsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePortsIsMutable();
          ports_.add(index, value);
          onChanged();
        } else {
          portsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addPorts(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder builderForValue) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.add(index, builderForValue.build());
          onChanged();
        } else {
          portsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder addAllPorts(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPort> values) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ports_);
          onChanged();
        } else {
          portsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder clearPorts() {
        if (portsBuilder_ == null) {
          ports_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          portsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public Builder removePorts(int index) {
        if (portsBuilder_ == null) {
          ensurePortsIsMutable();
          ports_.remove(index);
          onChanged();
        } else {
          portsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder getPortsBuilder(
          int index) {
        return getPortsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder getPortsOrBuilder(
          int index) {
        if (portsBuilder_ == null) {
          return ports_.get(index);  } else {
          return portsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
           getPortsOrBuilderList() {
        if (portsBuilder_ != null) {
          return portsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ports_);
        }
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder addPortsBuilder() {
        return getPortsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.getDefaultInstance());
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder addPortsBuilder(
          int index) {
        return getPortsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.getDefaultInstance());
      }
      /**
       * <pre>
       * ports is a list of ports which should be made accessible on the pods selected for
       * this rule. Each item in this list is combined using a logical OR. If this field is
       * empty or missing, this rule matches all ports (traffic not restricted by port).
       * If this field is present and contains at least one item, then this rule allows
       * traffic only if the traffic matches at least one port in the list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPort ports = 1;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder> 
           getPortsBuilderList() {
        return getPortsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPort, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder> 
          getPortsFieldBuilder() {
        if (portsBuilder_ == null) {
          portsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicyPort, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder>(
                  ports_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          ports_ = null;
        }
        return portsBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> from_ =
        java.util.Collections.emptyList();
      private void ensureFromIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          from_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer>(from_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> fromBuilder_;

      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> getFromList() {
        if (fromBuilder_ == null) {
          return java.util.Collections.unmodifiableList(from_);
        } else {
          return fromBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public int getFromCount() {
        if (fromBuilder_ == null) {
          return from_.size();
        } else {
          return fromBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getFrom(int index) {
        if (fromBuilder_ == null) {
          return from_.get(index);
        } else {
          return fromBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder setFrom(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFromIsMutable();
          from_.set(index, value);
          onChanged();
        } else {
          fromBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder setFrom(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder builderForValue) {
        if (fromBuilder_ == null) {
          ensureFromIsMutable();
          from_.set(index, builderForValue.build());
          onChanged();
        } else {
          fromBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder addFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFromIsMutable();
          from_.add(value);
          onChanged();
        } else {
          fromBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder addFrom(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer value) {
        if (fromBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFromIsMutable();
          from_.add(index, value);
          onChanged();
        } else {
          fromBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder addFrom(
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder builderForValue) {
        if (fromBuilder_ == null) {
          ensureFromIsMutable();
          from_.add(builderForValue.build());
          onChanged();
        } else {
          fromBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder addFrom(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder builderForValue) {
        if (fromBuilder_ == null) {
          ensureFromIsMutable();
          from_.add(index, builderForValue.build());
          onChanged();
        } else {
          fromBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder addAllFrom(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer> values) {
        if (fromBuilder_ == null) {
          ensureFromIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, from_);
          onChanged();
        } else {
          fromBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder clearFrom() {
        if (fromBuilder_ == null) {
          from_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          fromBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public Builder removeFrom(int index) {
        if (fromBuilder_ == null) {
          ensureFromIsMutable();
          from_.remove(index);
          onChanged();
        } else {
          fromBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder getFromBuilder(
          int index) {
        return getFromFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder getFromOrBuilder(
          int index) {
        if (fromBuilder_ == null) {
          return from_.get(index);  } else {
          return fromBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
           getFromOrBuilderList() {
        if (fromBuilder_ != null) {
          return fromBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(from_);
        }
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder addFromBuilder() {
        return getFromFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.getDefaultInstance());
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder addFromBuilder(
          int index) {
        return getFromFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.getDefaultInstance());
      }
      /**
       * <pre>
       * from is a list of sources which should be able to access the pods selected for this rule.
       * Items in this list are combined using a logical OR operation. If this field is
       * empty or missing, this rule matches all sources (traffic not restricted by
       * source). If this field is present and contains at least one item, this rule
       * allows traffic only if the traffic matches at least one item in the from list.
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyPeer from = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder> 
           getFromBuilderList() {
        return getFromFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder> 
          getFromFieldBuilder() {
        if (fromBuilder_ == null) {
          fromBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder>(
                  from_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          from_ = null;
        }
        return fromBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicyIngressRule)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyIngressRule)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicyIngressRule>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicyIngressRule>() {
      @java.lang.Override
      public NetworkPolicyIngressRule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicyIngressRule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicyIngressRule> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicyListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicyList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Standard list metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    boolean hasMetadata();
    /**
     * <pre>
     * Standard list metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    io.kubernetes.client.proto.Meta.ListMeta getMetadata();
    /**
     * <pre>
     * Standard list metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicy> 
        getItemsList();
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicy getItems(int index);
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    int getItemsCount();
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * NetworkPolicyList is a list of NetworkPolicy objects.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyList}
   */
  public static final class NetworkPolicyList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicyList)
      NetworkPolicyListOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicyList.class.getName());
    }
    // Use NetworkPolicyList.newBuilder() to construct.
    private NetworkPolicyList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicyList() {
      items_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyList_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicyList.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyList.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.ListMeta metadata_;
    /**
     * <pre>
     * Standard list metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return Whether the metadata field is set.
     */
    @java.lang.Override
    public boolean hasMetadata() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Standard list metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     * @return The metadata.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }
    /**
     * <pre>
     * Standard list metadata.
     * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
      return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicy> items_;
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicy> getItemsList() {
      return items_;
    }
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    @java.lang.Override
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicy getItems(int index) {
      return items_.get(index);
    }
    /**
     * <pre>
     * items is a list of schema objects.
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyList)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicyList other = (io.kubernetes.client.proto.V1Networking.NetworkPolicyList) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getItemsList()
          .equals(other.getItemsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicyList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicyList is a list of NetworkPolicy objects.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicyList)
        io.kubernetes.client.proto.V1Networking.NetworkPolicyListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyList_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicyList.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyList.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicyList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getMetadataFieldBuilder();
          getItemsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
        } else {
          items_ = null;
          itemsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyList_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyList getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicyList.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyList build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyList buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyList result = new io.kubernetes.client.proto.V1Networking.NetworkPolicyList(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.NetworkPolicyList result) {
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicyList result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.metadata_ = metadataBuilder_ == null
              ? metadata_
              : metadataBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyList) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicyList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicyList other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicyList.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000002);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getMetadataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicy m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicy.parser(),
                        extensionRegistry);
                if (itemsBuilder_ == null) {
                  ensureItemsIsMutable();
                  items_.add(m);
                } else {
                  itemsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.ListMeta metadata_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> metadataBuilder_;
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return Whether the metadata field is set.
       */
      public boolean hasMetadata() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       * @return The metadata.
       */
      public io.kubernetes.client.proto.Meta.ListMeta getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
        } else {
          metadataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder setMetadata(
          io.kubernetes.client.proto.Meta.ListMeta.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder mergeMetadata(io.kubernetes.client.proto.Meta.ListMeta value) {
        if (metadataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            metadata_ != null &&
            metadata_ != io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance()) {
            getMetadataBuilder().mergeFrom(value);
          } else {
            metadata_ = value;
          }
        } else {
          metadataBuilder_.mergeFrom(value);
        }
        if (metadata_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public Builder clearMetadata() {
        bitField0_ = (bitField0_ & ~0x00000001);
        metadata_ = null;
        if (metadataBuilder_ != null) {
          metadataBuilder_.dispose();
          metadataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMeta.Builder getMetadataBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.ListMetaOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              io.kubernetes.client.proto.Meta.ListMeta.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <pre>
       * Standard list metadata.
       * More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.ListMeta, io.kubernetes.client.proto.Meta.ListMeta.Builder, io.kubernetes.client.proto.Meta.ListMetaOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicy> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          items_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicy>(items_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicy, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder> itemsBuilder_;

      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicy> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicy value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder setItems(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder addItems(io.kubernetes.client.proto.V1Networking.NetworkPolicy value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicy value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder addItems(
          io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder addItems(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicy> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicy.getDefaultInstance());
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicy.getDefaultInstance());
      }
      /**
       * <pre>
       * items is a list of schema objects.
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicy items = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicy, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicy, io.kubernetes.client.proto.V1Networking.NetworkPolicy.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicyList)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyList)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicyList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicyList();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicyList>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicyList>() {
      @java.lang.Override
      public NetworkPolicyList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicyList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicyList> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicyPeerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicyPeer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * podSelector is a label selector which selects pods. This field follows standard label
     * selector semantics; if present but empty, it selects all pods.
     *
     * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
     * Otherwise it selects the pods matching podSelector in the policy's own namespace.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return Whether the podSelector field is set.
     */
    boolean hasPodSelector();
    /**
     * <pre>
     * podSelector is a label selector which selects pods. This field follows standard label
     * selector semantics; if present but empty, it selects all pods.
     *
     * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
     * Otherwise it selects the pods matching podSelector in the policy's own namespace.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return The podSelector.
     */
    io.kubernetes.client.proto.Meta.LabelSelector getPodSelector();
    /**
     * <pre>
     * podSelector is a label selector which selects pods. This field follows standard label
     * selector semantics; if present but empty, it selects all pods.
     *
     * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
     * Otherwise it selects the pods matching podSelector in the policy's own namespace.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     */
    io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getPodSelectorOrBuilder();

    /**
     * <pre>
     * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
     * standard label selector semantics; if present but empty, it selects all namespaces.
     *
     * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the namespaces selected by namespaceSelector.
     * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
     * @return Whether the namespaceSelector field is set.
     */
    boolean hasNamespaceSelector();
    /**
     * <pre>
     * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
     * standard label selector semantics; if present but empty, it selects all namespaces.
     *
     * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the namespaces selected by namespaceSelector.
     * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
     * @return The namespaceSelector.
     */
    io.kubernetes.client.proto.Meta.LabelSelector getNamespaceSelector();
    /**
     * <pre>
     * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
     * standard label selector semantics; if present but empty, it selects all namespaces.
     *
     * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the namespaces selected by namespaceSelector.
     * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
     */
    io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getNamespaceSelectorOrBuilder();

    /**
     * <pre>
     * ipBlock defines policy on a particular IPBlock. If this field is set then
     * neither of the other fields can be.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
     * @return Whether the ipBlock field is set.
     */
    boolean hasIpBlock();
    /**
     * <pre>
     * ipBlock defines policy on a particular IPBlock. If this field is set then
     * neither of the other fields can be.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
     * @return The ipBlock.
     */
    io.kubernetes.client.proto.V1Networking.IPBlock getIpBlock();
    /**
     * <pre>
     * ipBlock defines policy on a particular IPBlock. If this field is set then
     * neither of the other fields can be.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
     */
    io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder getIpBlockOrBuilder();
  }
  /**
   * <pre>
   * NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of
   * fields are allowed
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyPeer}
   */
  public static final class NetworkPolicyPeer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicyPeer)
      NetworkPolicyPeerOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicyPeer.class.getName());
    }
    // Use NetworkPolicyPeer.newBuilder() to construct.
    private NetworkPolicyPeer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicyPeer() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder.class);
    }

    private int bitField0_;
    public static final int PODSELECTOR_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.LabelSelector podSelector_;
    /**
     * <pre>
     * podSelector is a label selector which selects pods. This field follows standard label
     * selector semantics; if present but empty, it selects all pods.
     *
     * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
     * Otherwise it selects the pods matching podSelector in the policy's own namespace.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return Whether the podSelector field is set.
     */
    @java.lang.Override
    public boolean hasPodSelector() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * podSelector is a label selector which selects pods. This field follows standard label
     * selector semantics; if present but empty, it selects all pods.
     *
     * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
     * Otherwise it selects the pods matching podSelector in the policy's own namespace.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return The podSelector.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.LabelSelector getPodSelector() {
      return podSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
    }
    /**
     * <pre>
     * podSelector is a label selector which selects pods. This field follows standard label
     * selector semantics; if present but empty, it selects all pods.
     *
     * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
     * Otherwise it selects the pods matching podSelector in the policy's own namespace.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getPodSelectorOrBuilder() {
      return podSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
    }

    public static final int NAMESPACESELECTOR_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.Meta.LabelSelector namespaceSelector_;
    /**
     * <pre>
     * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
     * standard label selector semantics; if present but empty, it selects all namespaces.
     *
     * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the namespaces selected by namespaceSelector.
     * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
     * @return Whether the namespaceSelector field is set.
     */
    @java.lang.Override
    public boolean hasNamespaceSelector() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
     * standard label selector semantics; if present but empty, it selects all namespaces.
     *
     * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the namespaces selected by namespaceSelector.
     * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
     * @return The namespaceSelector.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.LabelSelector getNamespaceSelector() {
      return namespaceSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : namespaceSelector_;
    }
    /**
     * <pre>
     * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
     * standard label selector semantics; if present but empty, it selects all namespaces.
     *
     * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
     * the pods matching podSelector in the namespaces selected by namespaceSelector.
     * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getNamespaceSelectorOrBuilder() {
      return namespaceSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : namespaceSelector_;
    }

    public static final int IPBLOCK_FIELD_NUMBER = 3;
    private io.kubernetes.client.proto.V1Networking.IPBlock ipBlock_;
    /**
     * <pre>
     * ipBlock defines policy on a particular IPBlock. If this field is set then
     * neither of the other fields can be.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
     * @return Whether the ipBlock field is set.
     */
    @java.lang.Override
    public boolean hasIpBlock() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * ipBlock defines policy on a particular IPBlock. If this field is set then
     * neither of the other fields can be.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
     * @return The ipBlock.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IPBlock getIpBlock() {
      return ipBlock_ == null ? io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance() : ipBlock_;
    }
    /**
     * <pre>
     * ipBlock defines policy on a particular IPBlock. If this field is set then
     * neither of the other fields can be.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder getIpBlockOrBuilder() {
      return ipBlock_ == null ? io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance() : ipBlock_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPodSelector());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getNamespaceSelector());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getIpBlock());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPodSelector());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNamespaceSelector());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getIpBlock());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer other = (io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer) obj;

      if (hasPodSelector() != other.hasPodSelector()) return false;
      if (hasPodSelector()) {
        if (!getPodSelector()
            .equals(other.getPodSelector())) return false;
      }
      if (hasNamespaceSelector() != other.hasNamespaceSelector()) return false;
      if (hasNamespaceSelector()) {
        if (!getNamespaceSelector()
            .equals(other.getNamespaceSelector())) return false;
      }
      if (hasIpBlock() != other.hasIpBlock()) return false;
      if (hasIpBlock()) {
        if (!getIpBlock()
            .equals(other.getIpBlock())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPodSelector()) {
        hash = (37 * hash) + PODSELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getPodSelector().hashCode();
      }
      if (hasNamespaceSelector()) {
        hash = (37 * hash) + NAMESPACESELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getNamespaceSelector().hashCode();
      }
      if (hasIpBlock()) {
        hash = (37 * hash) + IPBLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getIpBlock().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicyPeer describes a peer to allow traffic to/from. Only certain combinations of
     * fields are allowed
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyPeer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicyPeer)
        io.kubernetes.client.proto.V1Networking.NetworkPolicyPeerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPodSelectorFieldBuilder();
          getNamespaceSelectorFieldBuilder();
          getIpBlockFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        podSelector_ = null;
        if (podSelectorBuilder_ != null) {
          podSelectorBuilder_.dispose();
          podSelectorBuilder_ = null;
        }
        namespaceSelector_ = null;
        if (namespaceSelectorBuilder_ != null) {
          namespaceSelectorBuilder_.dispose();
          namespaceSelectorBuilder_ = null;
        }
        ipBlock_ = null;
        if (ipBlockBuilder_ != null) {
          ipBlockBuilder_.dispose();
          ipBlockBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer result = new io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.podSelector_ = podSelectorBuilder_ == null
              ? podSelector_
              : podSelectorBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.namespaceSelector_ = namespaceSelectorBuilder_ == null
              ? namespaceSelector_
              : namespaceSelectorBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ipBlock_ = ipBlockBuilder_ == null
              ? ipBlock_
              : ipBlockBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer.getDefaultInstance()) return this;
        if (other.hasPodSelector()) {
          mergePodSelector(other.getPodSelector());
        }
        if (other.hasNamespaceSelector()) {
          mergeNamespaceSelector(other.getNamespaceSelector());
        }
        if (other.hasIpBlock()) {
          mergeIpBlock(other.getIpBlock());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPodSelectorFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getNamespaceSelectorFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getIpBlockFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.LabelSelector podSelector_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder> podSelectorBuilder_;
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       * @return Whether the podSelector field is set.
       */
      public boolean hasPodSelector() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       * @return The podSelector.
       */
      public io.kubernetes.client.proto.Meta.LabelSelector getPodSelector() {
        if (podSelectorBuilder_ == null) {
          return podSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
        } else {
          return podSelectorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder setPodSelector(io.kubernetes.client.proto.Meta.LabelSelector value) {
        if (podSelectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          podSelector_ = value;
        } else {
          podSelectorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder setPodSelector(
          io.kubernetes.client.proto.Meta.LabelSelector.Builder builderForValue) {
        if (podSelectorBuilder_ == null) {
          podSelector_ = builderForValue.build();
        } else {
          podSelectorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder mergePodSelector(io.kubernetes.client.proto.Meta.LabelSelector value) {
        if (podSelectorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            podSelector_ != null &&
            podSelector_ != io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance()) {
            getPodSelectorBuilder().mergeFrom(value);
          } else {
            podSelector_ = value;
          }
        } else {
          podSelectorBuilder_.mergeFrom(value);
        }
        if (podSelector_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder clearPodSelector() {
        bitField0_ = (bitField0_ & ~0x00000001);
        podSelector_ = null;
        if (podSelectorBuilder_ != null) {
          podSelectorBuilder_.dispose();
          podSelectorBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.LabelSelector.Builder getPodSelectorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPodSelectorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getPodSelectorOrBuilder() {
        if (podSelectorBuilder_ != null) {
          return podSelectorBuilder_.getMessageOrBuilder();
        } else {
          return podSelector_ == null ?
              io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
        }
      }
      /**
       * <pre>
       * podSelector is a label selector which selects pods. This field follows standard label
       * selector semantics; if present but empty, it selects all pods.
       *
       * If namespaceSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the Namespaces selected by NamespaceSelector.
       * Otherwise it selects the pods matching podSelector in the policy's own namespace.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder> 
          getPodSelectorFieldBuilder() {
        if (podSelectorBuilder_ == null) {
          podSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder>(
                  getPodSelector(),
                  getParentForChildren(),
                  isClean());
          podSelector_ = null;
        }
        return podSelectorBuilder_;
      }

      private io.kubernetes.client.proto.Meta.LabelSelector namespaceSelector_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder> namespaceSelectorBuilder_;
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       * @return Whether the namespaceSelector field is set.
       */
      public boolean hasNamespaceSelector() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       * @return The namespaceSelector.
       */
      public io.kubernetes.client.proto.Meta.LabelSelector getNamespaceSelector() {
        if (namespaceSelectorBuilder_ == null) {
          return namespaceSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : namespaceSelector_;
        } else {
          return namespaceSelectorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      public Builder setNamespaceSelector(io.kubernetes.client.proto.Meta.LabelSelector value) {
        if (namespaceSelectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          namespaceSelector_ = value;
        } else {
          namespaceSelectorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      public Builder setNamespaceSelector(
          io.kubernetes.client.proto.Meta.LabelSelector.Builder builderForValue) {
        if (namespaceSelectorBuilder_ == null) {
          namespaceSelector_ = builderForValue.build();
        } else {
          namespaceSelectorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      public Builder mergeNamespaceSelector(io.kubernetes.client.proto.Meta.LabelSelector value) {
        if (namespaceSelectorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            namespaceSelector_ != null &&
            namespaceSelector_ != io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance()) {
            getNamespaceSelectorBuilder().mergeFrom(value);
          } else {
            namespaceSelector_ = value;
          }
        } else {
          namespaceSelectorBuilder_.mergeFrom(value);
        }
        if (namespaceSelector_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      public Builder clearNamespaceSelector() {
        bitField0_ = (bitField0_ & ~0x00000002);
        namespaceSelector_ = null;
        if (namespaceSelectorBuilder_ != null) {
          namespaceSelectorBuilder_.dispose();
          namespaceSelectorBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      public io.kubernetes.client.proto.Meta.LabelSelector.Builder getNamespaceSelectorBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getNamespaceSelectorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      public io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getNamespaceSelectorOrBuilder() {
        if (namespaceSelectorBuilder_ != null) {
          return namespaceSelectorBuilder_.getMessageOrBuilder();
        } else {
          return namespaceSelector_ == null ?
              io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : namespaceSelector_;
        }
      }
      /**
       * <pre>
       * namespaceSelector selects namespaces using cluster-scoped labels. This field follows
       * standard label selector semantics; if present but empty, it selects all namespaces.
       *
       * If podSelector is also set, then the NetworkPolicyPeer as a whole selects
       * the pods matching podSelector in the namespaces selected by namespaceSelector.
       * Otherwise it selects all pods in the namespaces selected by namespaceSelector.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector namespaceSelector = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder> 
          getNamespaceSelectorFieldBuilder() {
        if (namespaceSelectorBuilder_ == null) {
          namespaceSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder>(
                  getNamespaceSelector(),
                  getParentForChildren(),
                  isClean());
          namespaceSelector_ = null;
        }
        return namespaceSelectorBuilder_;
      }

      private io.kubernetes.client.proto.V1Networking.IPBlock ipBlock_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IPBlock, io.kubernetes.client.proto.V1Networking.IPBlock.Builder, io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder> ipBlockBuilder_;
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       * @return Whether the ipBlock field is set.
       */
      public boolean hasIpBlock() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       * @return The ipBlock.
       */
      public io.kubernetes.client.proto.V1Networking.IPBlock getIpBlock() {
        if (ipBlockBuilder_ == null) {
          return ipBlock_ == null ? io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance() : ipBlock_;
        } else {
          return ipBlockBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      public Builder setIpBlock(io.kubernetes.client.proto.V1Networking.IPBlock value) {
        if (ipBlockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ipBlock_ = value;
        } else {
          ipBlockBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      public Builder setIpBlock(
          io.kubernetes.client.proto.V1Networking.IPBlock.Builder builderForValue) {
        if (ipBlockBuilder_ == null) {
          ipBlock_ = builderForValue.build();
        } else {
          ipBlockBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      public Builder mergeIpBlock(io.kubernetes.client.proto.V1Networking.IPBlock value) {
        if (ipBlockBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            ipBlock_ != null &&
            ipBlock_ != io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance()) {
            getIpBlockBuilder().mergeFrom(value);
          } else {
            ipBlock_ = value;
          }
        } else {
          ipBlockBuilder_.mergeFrom(value);
        }
        if (ipBlock_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      public Builder clearIpBlock() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ipBlock_ = null;
        if (ipBlockBuilder_ != null) {
          ipBlockBuilder_.dispose();
          ipBlockBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IPBlock.Builder getIpBlockBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getIpBlockFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder getIpBlockOrBuilder() {
        if (ipBlockBuilder_ != null) {
          return ipBlockBuilder_.getMessageOrBuilder();
        } else {
          return ipBlock_ == null ?
              io.kubernetes.client.proto.V1Networking.IPBlock.getDefaultInstance() : ipBlock_;
        }
      }
      /**
       * <pre>
       * ipBlock defines policy on a particular IPBlock. If this field is set then
       * neither of the other fields can be.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.api.networking.v1.IPBlock ipBlock = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.V1Networking.IPBlock, io.kubernetes.client.proto.V1Networking.IPBlock.Builder, io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder> 
          getIpBlockFieldBuilder() {
        if (ipBlockBuilder_ == null) {
          ipBlockBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.V1Networking.IPBlock, io.kubernetes.client.proto.V1Networking.IPBlock.Builder, io.kubernetes.client.proto.V1Networking.IPBlockOrBuilder>(
                  getIpBlock(),
                  getParentForChildren(),
                  isClean());
          ipBlock_ = null;
        }
        return ipBlockBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicyPeer)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyPeer)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicyPeer>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicyPeer>() {
      @java.lang.Override
      public NetworkPolicyPeer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicyPeer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicyPeer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPeer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicyPortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicyPort)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
     * If not specified, this field defaults to TCP.
     * +optional
     * </pre>
     *
     * <code>optional string protocol = 1;</code>
     * @return Whether the protocol field is set.
     */
    boolean hasProtocol();
    /**
     * <pre>
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
     * If not specified, this field defaults to TCP.
     * +optional
     * </pre>
     *
     * <code>optional string protocol = 1;</code>
     * @return The protocol.
     */
    java.lang.String getProtocol();
    /**
     * <pre>
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
     * If not specified, this field defaults to TCP.
     * +optional
     * </pre>
     *
     * <code>optional string protocol = 1;</code>
     * @return The bytes for protocol.
     */
    com.google.protobuf.ByteString
        getProtocolBytes();

    /**
     * <pre>
     * port represents the port on the given protocol. This can either be a numerical or named
     * port on a pod. If this field is not provided, this matches all port names and
     * numbers.
     * If present, only traffic on the specified protocol AND port will be matched.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
     * @return Whether the port field is set.
     */
    boolean hasPort();
    /**
     * <pre>
     * port represents the port on the given protocol. This can either be a numerical or named
     * port on a pod. If this field is not provided, this matches all port names and
     * numbers.
     * If present, only traffic on the specified protocol AND port will be matched.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
     * @return The port.
     */
    io.kubernetes.client.proto.IntStr.IntOrString getPort();
    /**
     * <pre>
     * port represents the port on the given protocol. This can either be a numerical or named
     * port on a pod. If this field is not provided, this matches all port names and
     * numbers.
     * If present, only traffic on the specified protocol AND port will be matched.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
     */
    io.kubernetes.client.proto.IntStr.IntOrStringOrBuilder getPortOrBuilder();

    /**
     * <pre>
     * endPort indicates that the range of ports from port to endPort if set, inclusive,
     * should be allowed by the policy. This field cannot be defined if the port field
     * is not defined or if the port field is defined as a named (string) port.
     * The endPort must be equal or greater than port.
     * +optional
     * </pre>
     *
     * <code>optional int32 endPort = 3;</code>
     * @return Whether the endPort field is set.
     */
    boolean hasEndPort();
    /**
     * <pre>
     * endPort indicates that the range of ports from port to endPort if set, inclusive,
     * should be allowed by the policy. This field cannot be defined if the port field
     * is not defined or if the port field is defined as a named (string) port.
     * The endPort must be equal or greater than port.
     * +optional
     * </pre>
     *
     * <code>optional int32 endPort = 3;</code>
     * @return The endPort.
     */
    int getEndPort();
  }
  /**
   * <pre>
   * NetworkPolicyPort describes a port to allow traffic on
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyPort}
   */
  public static final class NetworkPolicyPort extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicyPort)
      NetworkPolicyPortOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicyPort.class.getName());
    }
    // Use NetworkPolicyPort.newBuilder() to construct.
    private NetworkPolicyPort(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicyPort() {
      protocol_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder.class);
    }

    private int bitField0_;
    public static final int PROTOCOL_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object protocol_ = "";
    /**
     * <pre>
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
     * If not specified, this field defaults to TCP.
     * +optional
     * </pre>
     *
     * <code>optional string protocol = 1;</code>
     * @return Whether the protocol field is set.
     */
    @java.lang.Override
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
     * If not specified, this field defaults to TCP.
     * +optional
     * </pre>
     *
     * <code>optional string protocol = 1;</code>
     * @return The protocol.
     */
    @java.lang.Override
    public java.lang.String getProtocol() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          protocol_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
     * If not specified, this field defaults to TCP.
     * +optional
     * </pre>
     *
     * <code>optional string protocol = 1;</code>
     * @return The bytes for protocol.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProtocolBytes() {
      java.lang.Object ref = protocol_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        protocol_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PORT_FIELD_NUMBER = 2;
    private io.kubernetes.client.proto.IntStr.IntOrString port_;
    /**
     * <pre>
     * port represents the port on the given protocol. This can either be a numerical or named
     * port on a pod. If this field is not provided, this matches all port names and
     * numbers.
     * If present, only traffic on the specified protocol AND port will be matched.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
     * @return Whether the port field is set.
     */
    @java.lang.Override
    public boolean hasPort() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * port represents the port on the given protocol. This can either be a numerical or named
     * port on a pod. If this field is not provided, this matches all port names and
     * numbers.
     * If present, only traffic on the specified protocol AND port will be matched.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
     * @return The port.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.IntStr.IntOrString getPort() {
      return port_ == null ? io.kubernetes.client.proto.IntStr.IntOrString.getDefaultInstance() : port_;
    }
    /**
     * <pre>
     * port represents the port on the given protocol. This can either be a numerical or named
     * port on a pod. If this field is not provided, this matches all port names and
     * numbers.
     * If present, only traffic on the specified protocol AND port will be matched.
     * +optional
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.IntStr.IntOrStringOrBuilder getPortOrBuilder() {
      return port_ == null ? io.kubernetes.client.proto.IntStr.IntOrString.getDefaultInstance() : port_;
    }

    public static final int ENDPORT_FIELD_NUMBER = 3;
    private int endPort_ = 0;
    /**
     * <pre>
     * endPort indicates that the range of ports from port to endPort if set, inclusive,
     * should be allowed by the policy. This field cannot be defined if the port field
     * is not defined or if the port field is defined as a named (string) port.
     * The endPort must be equal or greater than port.
     * +optional
     * </pre>
     *
     * <code>optional int32 endPort = 3;</code>
     * @return Whether the endPort field is set.
     */
    @java.lang.Override
    public boolean hasEndPort() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * endPort indicates that the range of ports from port to endPort if set, inclusive,
     * should be allowed by the policy. This field cannot be defined if the port field
     * is not defined or if the port field is defined as a named (string) port.
     * The endPort must be equal or greater than port.
     * +optional
     * </pre>
     *
     * <code>optional int32 endPort = 3;</code>
     * @return The endPort.
     */
    @java.lang.Override
    public int getEndPort() {
      return endPort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, protocol_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getPort());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, endPort_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, protocol_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPort());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, endPort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyPort)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicyPort other = (io.kubernetes.client.proto.V1Networking.NetworkPolicyPort) obj;

      if (hasProtocol() != other.hasProtocol()) return false;
      if (hasProtocol()) {
        if (!getProtocol()
            .equals(other.getProtocol())) return false;
      }
      if (hasPort() != other.hasPort()) return false;
      if (hasPort()) {
        if (!getPort()
            .equals(other.getPort())) return false;
      }
      if (hasEndPort() != other.hasEndPort()) return false;
      if (hasEndPort()) {
        if (getEndPort()
            != other.getEndPort()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProtocol()) {
        hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + getProtocol().hashCode();
      }
      if (hasPort()) {
        hash = (37 * hash) + PORT_FIELD_NUMBER;
        hash = (53 * hash) + getPort().hashCode();
      }
      if (hasEndPort()) {
        hash = (37 * hash) + ENDPORT_FIELD_NUMBER;
        hash = (53 * hash) + getEndPort();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicyPort prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicyPort describes a port to allow traffic on
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicyPort}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicyPort)
        io.kubernetes.client.proto.V1Networking.NetworkPolicyPortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.class, io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPortFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        protocol_ = "";
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        endPort_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyPort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicyPort result = new io.kubernetes.client.proto.V1Networking.NetworkPolicyPort(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicyPort result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.protocol_ = protocol_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.port_ = portBuilder_ == null
              ? port_
              : portBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.endPort_ = endPort_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicyPort) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicyPort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicyPort other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicyPort.getDefaultInstance()) return this;
        if (other.hasProtocol()) {
          protocol_ = other.protocol_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasPort()) {
          mergePort(other.getPort());
        }
        if (other.hasEndPort()) {
          setEndPort(other.getEndPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                protocol_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getPortFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                endPort_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object protocol_ = "";
      /**
       * <pre>
       * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
       * If not specified, this field defaults to TCP.
       * +optional
       * </pre>
       *
       * <code>optional string protocol = 1;</code>
       * @return Whether the protocol field is set.
       */
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
       * If not specified, this field defaults to TCP.
       * +optional
       * </pre>
       *
       * <code>optional string protocol = 1;</code>
       * @return The protocol.
       */
      public java.lang.String getProtocol() {
        java.lang.Object ref = protocol_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            protocol_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
       * If not specified, this field defaults to TCP.
       * +optional
       * </pre>
       *
       * <code>optional string protocol = 1;</code>
       * @return The bytes for protocol.
       */
      public com.google.protobuf.ByteString
          getProtocolBytes() {
        java.lang.Object ref = protocol_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          protocol_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
       * If not specified, this field defaults to TCP.
       * +optional
       * </pre>
       *
       * <code>optional string protocol = 1;</code>
       * @param value The protocol to set.
       * @return This builder for chaining.
       */
      public Builder setProtocol(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        protocol_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
       * If not specified, this field defaults to TCP.
       * +optional
       * </pre>
       *
       * <code>optional string protocol = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearProtocol() {
        protocol_ = getDefaultInstance().getProtocol();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match.
       * If not specified, this field defaults to TCP.
       * +optional
       * </pre>
       *
       * <code>optional string protocol = 1;</code>
       * @param value The bytes for protocol to set.
       * @return This builder for chaining.
       */
      public Builder setProtocolBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        protocol_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private io.kubernetes.client.proto.IntStr.IntOrString port_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.IntStr.IntOrString, io.kubernetes.client.proto.IntStr.IntOrString.Builder, io.kubernetes.client.proto.IntStr.IntOrStringOrBuilder> portBuilder_;
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       * @return Whether the port field is set.
       */
      public boolean hasPort() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       * @return The port.
       */
      public io.kubernetes.client.proto.IntStr.IntOrString getPort() {
        if (portBuilder_ == null) {
          return port_ == null ? io.kubernetes.client.proto.IntStr.IntOrString.getDefaultInstance() : port_;
        } else {
          return portBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      public Builder setPort(io.kubernetes.client.proto.IntStr.IntOrString value) {
        if (portBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          port_ = value;
        } else {
          portBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      public Builder setPort(
          io.kubernetes.client.proto.IntStr.IntOrString.Builder builderForValue) {
        if (portBuilder_ == null) {
          port_ = builderForValue.build();
        } else {
          portBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      public Builder mergePort(io.kubernetes.client.proto.IntStr.IntOrString value) {
        if (portBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            port_ != null &&
            port_ != io.kubernetes.client.proto.IntStr.IntOrString.getDefaultInstance()) {
            getPortBuilder().mergeFrom(value);
          } else {
            port_ = value;
          }
        } else {
          portBuilder_.mergeFrom(value);
        }
        if (port_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        port_ = null;
        if (portBuilder_ != null) {
          portBuilder_.dispose();
          portBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      public io.kubernetes.client.proto.IntStr.IntOrString.Builder getPortBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPortFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      public io.kubernetes.client.proto.IntStr.IntOrStringOrBuilder getPortOrBuilder() {
        if (portBuilder_ != null) {
          return portBuilder_.getMessageOrBuilder();
        } else {
          return port_ == null ?
              io.kubernetes.client.proto.IntStr.IntOrString.getDefaultInstance() : port_;
        }
      }
      /**
       * <pre>
       * port represents the port on the given protocol. This can either be a numerical or named
       * port on a pod. If this field is not provided, this matches all port names and
       * numbers.
       * If present, only traffic on the specified protocol AND port will be matched.
       * +optional
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.util.intstr.IntOrString port = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.IntStr.IntOrString, io.kubernetes.client.proto.IntStr.IntOrString.Builder, io.kubernetes.client.proto.IntStr.IntOrStringOrBuilder> 
          getPortFieldBuilder() {
        if (portBuilder_ == null) {
          portBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.IntStr.IntOrString, io.kubernetes.client.proto.IntStr.IntOrString.Builder, io.kubernetes.client.proto.IntStr.IntOrStringOrBuilder>(
                  getPort(),
                  getParentForChildren(),
                  isClean());
          port_ = null;
        }
        return portBuilder_;
      }

      private int endPort_ ;
      /**
       * <pre>
       * endPort indicates that the range of ports from port to endPort if set, inclusive,
       * should be allowed by the policy. This field cannot be defined if the port field
       * is not defined or if the port field is defined as a named (string) port.
       * The endPort must be equal or greater than port.
       * +optional
       * </pre>
       *
       * <code>optional int32 endPort = 3;</code>
       * @return Whether the endPort field is set.
       */
      @java.lang.Override
      public boolean hasEndPort() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * endPort indicates that the range of ports from port to endPort if set, inclusive,
       * should be allowed by the policy. This field cannot be defined if the port field
       * is not defined or if the port field is defined as a named (string) port.
       * The endPort must be equal or greater than port.
       * +optional
       * </pre>
       *
       * <code>optional int32 endPort = 3;</code>
       * @return The endPort.
       */
      @java.lang.Override
      public int getEndPort() {
        return endPort_;
      }
      /**
       * <pre>
       * endPort indicates that the range of ports from port to endPort if set, inclusive,
       * should be allowed by the policy. This field cannot be defined if the port field
       * is not defined or if the port field is defined as a named (string) port.
       * The endPort must be equal or greater than port.
       * +optional
       * </pre>
       *
       * <code>optional int32 endPort = 3;</code>
       * @param value The endPort to set.
       * @return This builder for chaining.
       */
      public Builder setEndPort(int value) {

        endPort_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * endPort indicates that the range of ports from port to endPort if set, inclusive,
       * should be allowed by the policy. This field cannot be defined if the port field
       * is not defined or if the port field is defined as a named (string) port.
       * The endPort must be equal or greater than port.
       * +optional
       * </pre>
       *
       * <code>optional int32 endPort = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endPort_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicyPort)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicyPort)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicyPort DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicyPort();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicyPort>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicyPort>() {
      @java.lang.Override
      public NetworkPolicyPort parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicyPort> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicyPort> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyPort getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPolicySpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.NetworkPolicySpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * podSelector selects the pods to which this NetworkPolicy object applies.
     * The array of ingress rules is applied to any pods selected by this field.
     * Multiple network policies can select the same set of pods. In this case,
     * the ingress rules for each are combined additively.
     * This field is NOT optional and follows standard label selector semantics.
     * An empty podSelector matches all pods in this namespace.
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return Whether the podSelector field is set.
     */
    boolean hasPodSelector();
    /**
     * <pre>
     * podSelector selects the pods to which this NetworkPolicy object applies.
     * The array of ingress rules is applied to any pods selected by this field.
     * Multiple network policies can select the same set of pods. In this case,
     * the ingress rules for each are combined additively.
     * This field is NOT optional and follows standard label selector semantics.
     * An empty podSelector matches all pods in this namespace.
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return The podSelector.
     */
    io.kubernetes.client.proto.Meta.LabelSelector getPodSelector();
    /**
     * <pre>
     * podSelector selects the pods to which this NetworkPolicy object applies.
     * The array of ingress rules is applied to any pods selected by this field.
     * Multiple network policies can select the same set of pods. In this case,
     * the ingress rules for each are combined additively.
     * This field is NOT optional and follows standard label selector semantics.
     * An empty podSelector matches all pods in this namespace.
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     */
    io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getPodSelectorOrBuilder();

    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule> 
        getIngressList();
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule getIngress(int index);
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    int getIngressCount();
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder> 
        getIngressOrBuilderList();
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder getIngressOrBuilder(
        int index);

    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule> 
        getEgressList();
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule getEgress(int index);
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    int getEgressCount();
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder> 
        getEgressOrBuilderList();
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder getEgressOrBuilder(
        int index);

    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @return A list containing the policyTypes.
     */
    java.util.List<java.lang.String>
        getPolicyTypesList();
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @return The count of policyTypes.
     */
    int getPolicyTypesCount();
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @param index The index of the element to return.
     * @return The policyTypes at the given index.
     */
    java.lang.String getPolicyTypes(int index);
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the policyTypes at the given index.
     */
    com.google.protobuf.ByteString
        getPolicyTypesBytes(int index);
  }
  /**
   * <pre>
   * NetworkPolicySpec provides the specification of a NetworkPolicy
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicySpec}
   */
  public static final class NetworkPolicySpec extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.NetworkPolicySpec)
      NetworkPolicySpecOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        NetworkPolicySpec.class.getName());
    }
    // Use NetworkPolicySpec.newBuilder() to construct.
    private NetworkPolicySpec(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPolicySpec() {
      ingress_ = java.util.Collections.emptyList();
      egress_ = java.util.Collections.emptyList();
      policyTypes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.class, io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder.class);
    }

    private int bitField0_;
    public static final int PODSELECTOR_FIELD_NUMBER = 1;
    private io.kubernetes.client.proto.Meta.LabelSelector podSelector_;
    /**
     * <pre>
     * podSelector selects the pods to which this NetworkPolicy object applies.
     * The array of ingress rules is applied to any pods selected by this field.
     * Multiple network policies can select the same set of pods. In this case,
     * the ingress rules for each are combined additively.
     * This field is NOT optional and follows standard label selector semantics.
     * An empty podSelector matches all pods in this namespace.
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return Whether the podSelector field is set.
     */
    @java.lang.Override
    public boolean hasPodSelector() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * podSelector selects the pods to which this NetworkPolicy object applies.
     * The array of ingress rules is applied to any pods selected by this field.
     * Multiple network policies can select the same set of pods. In this case,
     * the ingress rules for each are combined additively.
     * This field is NOT optional and follows standard label selector semantics.
     * An empty podSelector matches all pods in this namespace.
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     * @return The podSelector.
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.LabelSelector getPodSelector() {
      return podSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
    }
    /**
     * <pre>
     * podSelector selects the pods to which this NetworkPolicy object applies.
     * The array of ingress rules is applied to any pods selected by this field.
     * Multiple network policies can select the same set of pods. In this case,
     * the ingress rules for each are combined additively.
     * This field is NOT optional and follows standard label selector semantics.
     * An empty podSelector matches all pods in this namespace.
     * </pre>
     *
     * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getPodSelectorOrBuilder() {
      return podSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
    }

    public static final int INGRESS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule> ingress_;
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule> getIngressList() {
      return ingress_;
    }
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder> 
        getIngressOrBuilderList() {
      return ingress_;
    }
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    @java.lang.Override
    public int getIngressCount() {
      return ingress_.size();
    }
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule getIngress(int index) {
      return ingress_.get(index);
    }
    /**
     * <pre>
     * ingress is a list of ingress rules to be applied to the selected pods.
     * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
     * (and cluster policy otherwise allows the traffic), OR if the traffic source is
     * the pod's local node, OR if the traffic matches at least one ingress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy does not allow any traffic (and serves
     * solely to ensure that the pods it selects are isolated by default)
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder getIngressOrBuilder(
        int index) {
      return ingress_.get(index);
    }

    public static final int EGRESS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule> egress_;
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    @java.lang.Override
    public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule> getEgressList() {
      return egress_;
    }
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder> 
        getEgressOrBuilderList() {
      return egress_;
    }
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    @java.lang.Override
    public int getEgressCount() {
      return egress_.size();
    }
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule getEgress(int index) {
      return egress_.get(index);
    }
    /**
     * <pre>
     * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
     * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
     * otherwise allows the traffic), OR if the traffic matches at least one egress rule
     * across all of the NetworkPolicy objects whose podSelector matches the pod. If
     * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
     * solely to ensure that the pods it selects are isolated by default).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
     */
    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder getEgressOrBuilder(
        int index) {
      return egress_.get(index);
    }

    public static final int POLICYTYPES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList policyTypes_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @return A list containing the policyTypes.
     */
    public com.google.protobuf.ProtocolStringList
        getPolicyTypesList() {
      return policyTypes_;
    }
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @return The count of policyTypes.
     */
    public int getPolicyTypesCount() {
      return policyTypes_.size();
    }
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @param index The index of the element to return.
     * @return The policyTypes at the given index.
     */
    public java.lang.String getPolicyTypes(int index) {
      return policyTypes_.get(index);
    }
    /**
     * <pre>
     * policyTypes is a list of rule types that the NetworkPolicy relates to.
     * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
     * If this field is not specified, it will default based on the existence of ingress or egress rules;
     * policies that contain an egress section are assumed to affect egress, and all policies
     * (whether or not they contain an ingress section) are assumed to affect ingress.
     * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
     * Likewise, if you want to write a policy that specifies that no egress is allowed,
     * you must specify a policyTypes value that include "Egress" (since such a policy would not include
     * an egress section and would otherwise default to just [ "Ingress" ]).
     * This field is beta-level in 1.8
     * +optional
     * +listType=atomic
     * </pre>
     *
     * <code>repeated string policyTypes = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the policyTypes at the given index.
     */
    public com.google.protobuf.ByteString
        getPolicyTypesBytes(int index) {
      return policyTypes_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPodSelector());
      }
      for (int i = 0; i < ingress_.size(); i++) {
        output.writeMessage(2, ingress_.get(i));
      }
      for (int i = 0; i < egress_.size(); i++) {
        output.writeMessage(3, egress_.get(i));
      }
      for (int i = 0; i < policyTypes_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, policyTypes_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPodSelector());
      }
      for (int i = 0; i < ingress_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, ingress_.get(i));
      }
      for (int i = 0; i < egress_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, egress_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < policyTypes_.size(); i++) {
          dataSize += computeStringSizeNoTag(policyTypes_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPolicyTypesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicySpec)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.NetworkPolicySpec other = (io.kubernetes.client.proto.V1Networking.NetworkPolicySpec) obj;

      if (hasPodSelector() != other.hasPodSelector()) return false;
      if (hasPodSelector()) {
        if (!getPodSelector()
            .equals(other.getPodSelector())) return false;
      }
      if (!getIngressList()
          .equals(other.getIngressList())) return false;
      if (!getEgressList()
          .equals(other.getEgressList())) return false;
      if (!getPolicyTypesList()
          .equals(other.getPolicyTypesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPodSelector()) {
        hash = (37 * hash) + PODSELECTOR_FIELD_NUMBER;
        hash = (53 * hash) + getPodSelector().hashCode();
      }
      if (getIngressCount() > 0) {
        hash = (37 * hash) + INGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getIngressList().hashCode();
      }
      if (getEgressCount() > 0) {
        hash = (37 * hash) + EGRESS_FIELD_NUMBER;
        hash = (53 * hash) + getEgressList().hashCode();
      }
      if (getPolicyTypesCount() > 0) {
        hash = (37 * hash) + POLICYTYPES_FIELD_NUMBER;
        hash = (53 * hash) + getPolicyTypesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.NetworkPolicySpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPolicySpec provides the specification of a NetworkPolicy
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.NetworkPolicySpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.NetworkPolicySpec)
        io.kubernetes.client.proto.V1Networking.NetworkPolicySpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.class, io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPodSelectorFieldBuilder();
          getIngressFieldBuilder();
          getEgressFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        podSelector_ = null;
        if (podSelectorBuilder_ != null) {
          podSelectorBuilder_.dispose();
          podSelectorBuilder_ = null;
        }
        if (ingressBuilder_ == null) {
          ingress_ = java.util.Collections.emptyList();
        } else {
          ingress_ = null;
          ingressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (egressBuilder_ == null) {
          egress_ = java.util.Collections.emptyList();
        } else {
          egress_ = null;
          egressBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        policyTypes_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec build() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicySpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec buildPartial() {
        io.kubernetes.client.proto.V1Networking.NetworkPolicySpec result = new io.kubernetes.client.proto.V1Networking.NetworkPolicySpec(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(io.kubernetes.client.proto.V1Networking.NetworkPolicySpec result) {
        if (ingressBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            ingress_ = java.util.Collections.unmodifiableList(ingress_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.ingress_ = ingress_;
        } else {
          result.ingress_ = ingressBuilder_.build();
        }
        if (egressBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            egress_ = java.util.Collections.unmodifiableList(egress_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.egress_ = egress_;
        } else {
          result.egress_ = egressBuilder_.build();
        }
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.NetworkPolicySpec result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.podSelector_ = podSelectorBuilder_ == null
              ? podSelector_
              : podSelectorBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          policyTypes_.makeImmutable();
          result.policyTypes_ = policyTypes_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.NetworkPolicySpec) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.NetworkPolicySpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.NetworkPolicySpec other) {
        if (other == io.kubernetes.client.proto.V1Networking.NetworkPolicySpec.getDefaultInstance()) return this;
        if (other.hasPodSelector()) {
          mergePodSelector(other.getPodSelector());
        }
        if (ingressBuilder_ == null) {
          if (!other.ingress_.isEmpty()) {
            if (ingress_.isEmpty()) {
              ingress_ = other.ingress_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureIngressIsMutable();
              ingress_.addAll(other.ingress_);
            }
            onChanged();
          }
        } else {
          if (!other.ingress_.isEmpty()) {
            if (ingressBuilder_.isEmpty()) {
              ingressBuilder_.dispose();
              ingressBuilder_ = null;
              ingress_ = other.ingress_;
              bitField0_ = (bitField0_ & ~0x00000002);
              ingressBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIngressFieldBuilder() : null;
            } else {
              ingressBuilder_.addAllMessages(other.ingress_);
            }
          }
        }
        if (egressBuilder_ == null) {
          if (!other.egress_.isEmpty()) {
            if (egress_.isEmpty()) {
              egress_ = other.egress_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureEgressIsMutable();
              egress_.addAll(other.egress_);
            }
            onChanged();
          }
        } else {
          if (!other.egress_.isEmpty()) {
            if (egressBuilder_.isEmpty()) {
              egressBuilder_.dispose();
              egressBuilder_ = null;
              egress_ = other.egress_;
              bitField0_ = (bitField0_ & ~0x00000004);
              egressBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEgressFieldBuilder() : null;
            } else {
              egressBuilder_.addAllMessages(other.egress_);
            }
          }
        }
        if (!other.policyTypes_.isEmpty()) {
          if (policyTypes_.isEmpty()) {
            policyTypes_ = other.policyTypes_;
            bitField0_ |= 0x00000008;
          } else {
            ensurePolicyTypesIsMutable();
            policyTypes_.addAll(other.policyTypes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPodSelectorFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.parser(),
                        extensionRegistry);
                if (ingressBuilder_ == null) {
                  ensureIngressIsMutable();
                  ingress_.add(m);
                } else {
                  ingressBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule m =
                    input.readMessage(
                        io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.parser(),
                        extensionRegistry);
                if (egressBuilder_ == null) {
                  ensureEgressIsMutable();
                  egress_.add(m);
                } else {
                  egressBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensurePolicyTypesIsMutable();
                policyTypes_.add(bs);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private io.kubernetes.client.proto.Meta.LabelSelector podSelector_;
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder> podSelectorBuilder_;
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       * @return Whether the podSelector field is set.
       */
      public boolean hasPodSelector() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       * @return The podSelector.
       */
      public io.kubernetes.client.proto.Meta.LabelSelector getPodSelector() {
        if (podSelectorBuilder_ == null) {
          return podSelector_ == null ? io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
        } else {
          return podSelectorBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder setPodSelector(io.kubernetes.client.proto.Meta.LabelSelector value) {
        if (podSelectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          podSelector_ = value;
        } else {
          podSelectorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder setPodSelector(
          io.kubernetes.client.proto.Meta.LabelSelector.Builder builderForValue) {
        if (podSelectorBuilder_ == null) {
          podSelector_ = builderForValue.build();
        } else {
          podSelectorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder mergePodSelector(io.kubernetes.client.proto.Meta.LabelSelector value) {
        if (podSelectorBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            podSelector_ != null &&
            podSelector_ != io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance()) {
            getPodSelectorBuilder().mergeFrom(value);
          } else {
            podSelector_ = value;
          }
        } else {
          podSelectorBuilder_.mergeFrom(value);
        }
        if (podSelector_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public Builder clearPodSelector() {
        bitField0_ = (bitField0_ & ~0x00000001);
        podSelector_ = null;
        if (podSelectorBuilder_ != null) {
          podSelectorBuilder_.dispose();
          podSelectorBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.LabelSelector.Builder getPodSelectorBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPodSelectorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      public io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder getPodSelectorOrBuilder() {
        if (podSelectorBuilder_ != null) {
          return podSelectorBuilder_.getMessageOrBuilder();
        } else {
          return podSelector_ == null ?
              io.kubernetes.client.proto.Meta.LabelSelector.getDefaultInstance() : podSelector_;
        }
      }
      /**
       * <pre>
       * podSelector selects the pods to which this NetworkPolicy object applies.
       * The array of ingress rules is applied to any pods selected by this field.
       * Multiple network policies can select the same set of pods. In this case,
       * the ingress rules for each are combined additively.
       * This field is NOT optional and follows standard label selector semantics.
       * An empty podSelector matches all pods in this namespace.
       * </pre>
       *
       * <code>optional .k8s.io.apimachinery.pkg.apis.meta.v1.LabelSelector podSelector = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder> 
          getPodSelectorFieldBuilder() {
        if (podSelectorBuilder_ == null) {
          podSelectorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              io.kubernetes.client.proto.Meta.LabelSelector, io.kubernetes.client.proto.Meta.LabelSelector.Builder, io.kubernetes.client.proto.Meta.LabelSelectorOrBuilder>(
                  getPodSelector(),
                  getParentForChildren(),
                  isClean());
          podSelector_ = null;
        }
        return podSelectorBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule> ingress_ =
        java.util.Collections.emptyList();
      private void ensureIngressIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          ingress_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule>(ingress_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder> ingressBuilder_;

      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule> getIngressList() {
        if (ingressBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ingress_);
        } else {
          return ingressBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public int getIngressCount() {
        if (ingressBuilder_ == null) {
          return ingress_.size();
        } else {
          return ingressBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule getIngress(int index) {
        if (ingressBuilder_ == null) {
          return ingress_.get(index);
        } else {
          return ingressBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder setIngress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.set(index, value);
          onChanged();
        } else {
          ingressBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder setIngress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.set(index, builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder addIngress(io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.add(value);
          onChanged();
        } else {
          ingressBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder addIngress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule value) {
        if (ingressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIngressIsMutable();
          ingress_.add(index, value);
          onChanged();
        } else {
          ingressBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder addIngress(
          io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.add(builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder addIngress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder builderForValue) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.add(index, builderForValue.build());
          onChanged();
        } else {
          ingressBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder addAllIngress(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule> values) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ingress_);
          onChanged();
        } else {
          ingressBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder clearIngress() {
        if (ingressBuilder_ == null) {
          ingress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          ingressBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public Builder removeIngress(int index) {
        if (ingressBuilder_ == null) {
          ensureIngressIsMutable();
          ingress_.remove(index);
          onChanged();
        } else {
          ingressBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder getIngressBuilder(
          int index) {
        return getIngressFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder getIngressOrBuilder(
          int index) {
        if (ingressBuilder_ == null) {
          return ingress_.get(index);  } else {
          return ingressBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder> 
           getIngressOrBuilderList() {
        if (ingressBuilder_ != null) {
          return ingressBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ingress_);
        }
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder addIngressBuilder() {
        return getIngressFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.getDefaultInstance());
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder addIngressBuilder(
          int index) {
        return getIngressFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.getDefaultInstance());
      }
      /**
       * <pre>
       * ingress is a list of ingress rules to be applied to the selected pods.
       * Traffic is allowed to a pod if there are no NetworkPolicies selecting the pod
       * (and cluster policy otherwise allows the traffic), OR if the traffic source is
       * the pod's local node, OR if the traffic matches at least one ingress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy does not allow any traffic (and serves
       * solely to ensure that the pods it selects are isolated by default)
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyIngressRule ingress = 2;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder> 
           getIngressBuilderList() {
        return getIngressFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder> 
          getIngressFieldBuilder() {
        if (ingressBuilder_ == null) {
          ingressBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRule.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyIngressRuleOrBuilder>(
                  ingress_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          ingress_ = null;
        }
        return ingressBuilder_;
      }

      private java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule> egress_ =
        java.util.Collections.emptyList();
      private void ensureEgressIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          egress_ = new java.util.ArrayList<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule>(egress_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder> egressBuilder_;

      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule> getEgressList() {
        if (egressBuilder_ == null) {
          return java.util.Collections.unmodifiableList(egress_);
        } else {
          return egressBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public int getEgressCount() {
        if (egressBuilder_ == null) {
          return egress_.size();
        } else {
          return egressBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule getEgress(int index) {
        if (egressBuilder_ == null) {
          return egress_.get(index);
        } else {
          return egressBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder setEgress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule value) {
        if (egressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEgressIsMutable();
          egress_.set(index, value);
          onChanged();
        } else {
          egressBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder setEgress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder builderForValue) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.set(index, builderForValue.build());
          onChanged();
        } else {
          egressBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder addEgress(io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule value) {
        if (egressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEgressIsMutable();
          egress_.add(value);
          onChanged();
        } else {
          egressBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder addEgress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule value) {
        if (egressBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEgressIsMutable();
          egress_.add(index, value);
          onChanged();
        } else {
          egressBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder addEgress(
          io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder builderForValue) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.add(builderForValue.build());
          onChanged();
        } else {
          egressBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder addEgress(
          int index, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder builderForValue) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.add(index, builderForValue.build());
          onChanged();
        } else {
          egressBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder addAllEgress(
          java.lang.Iterable<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule> values) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, egress_);
          onChanged();
        } else {
          egressBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder clearEgress() {
        if (egressBuilder_ == null) {
          egress_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          egressBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public Builder removeEgress(int index) {
        if (egressBuilder_ == null) {
          ensureEgressIsMutable();
          egress_.remove(index);
          onChanged();
        } else {
          egressBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder getEgressBuilder(
          int index) {
        return getEgressFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder getEgressOrBuilder(
          int index) {
        if (egressBuilder_ == null) {
          return egress_.get(index);  } else {
          return egressBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public java.util.List<? extends io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder> 
           getEgressOrBuilderList() {
        if (egressBuilder_ != null) {
          return egressBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(egress_);
        }
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder addEgressBuilder() {
        return getEgressFieldBuilder().addBuilder(
            io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.getDefaultInstance());
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder addEgressBuilder(
          int index) {
        return getEgressFieldBuilder().addBuilder(
            index, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.getDefaultInstance());
      }
      /**
       * <pre>
       * egress is a list of egress rules to be applied to the selected pods. Outgoing traffic
       * is allowed if there are no NetworkPolicies selecting the pod (and cluster policy
       * otherwise allows the traffic), OR if the traffic matches at least one egress rule
       * across all of the NetworkPolicy objects whose podSelector matches the pod. If
       * this field is empty then this NetworkPolicy limits all outgoing traffic (and serves
       * solely to ensure that the pods it selects are isolated by default).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated .k8s.io.api.networking.v1.NetworkPolicyEgressRule egress = 3;</code>
       */
      public java.util.List<io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder> 
           getEgressBuilderList() {
        return getEgressFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder> 
          getEgressFieldBuilder() {
        if (egressBuilder_ == null) {
          egressBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRule.Builder, io.kubernetes.client.proto.V1Networking.NetworkPolicyEgressRuleOrBuilder>(
                  egress_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          egress_ = null;
        }
        return egressBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList policyTypes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensurePolicyTypesIsMutable() {
        if (!policyTypes_.isModifiable()) {
          policyTypes_ = new com.google.protobuf.LazyStringArrayList(policyTypes_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @return A list containing the policyTypes.
       */
      public com.google.protobuf.ProtocolStringList
          getPolicyTypesList() {
        policyTypes_.makeImmutable();
        return policyTypes_;
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @return The count of policyTypes.
       */
      public int getPolicyTypesCount() {
        return policyTypes_.size();
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @param index The index of the element to return.
       * @return The policyTypes at the given index.
       */
      public java.lang.String getPolicyTypes(int index) {
        return policyTypes_.get(index);
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the policyTypes at the given index.
       */
      public com.google.protobuf.ByteString
          getPolicyTypesBytes(int index) {
        return policyTypes_.getByteString(index);
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @param index The index to set the value at.
       * @param value The policyTypes to set.
       * @return This builder for chaining.
       */
      public Builder setPolicyTypes(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePolicyTypesIsMutable();
        policyTypes_.set(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @param value The policyTypes to add.
       * @return This builder for chaining.
       */
      public Builder addPolicyTypes(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePolicyTypesIsMutable();
        policyTypes_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @param values The policyTypes to add.
       * @return This builder for chaining.
       */
      public Builder addAllPolicyTypes(
          java.lang.Iterable<java.lang.String> values) {
        ensurePolicyTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, policyTypes_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPolicyTypes() {
        policyTypes_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * policyTypes is a list of rule types that the NetworkPolicy relates to.
       * Valid options are ["Ingress"], ["Egress"], or ["Ingress", "Egress"].
       * If this field is not specified, it will default based on the existence of ingress or egress rules;
       * policies that contain an egress section are assumed to affect egress, and all policies
       * (whether or not they contain an ingress section) are assumed to affect ingress.
       * If you want to write an egress-only policy, you must explicitly specify policyTypes [ "Egress" ].
       * Likewise, if you want to write a policy that specifies that no egress is allowed,
       * you must specify a policyTypes value that include "Egress" (since such a policy would not include
       * an egress section and would otherwise default to just [ "Ingress" ]).
       * This field is beta-level in 1.8
       * +optional
       * +listType=atomic
       * </pre>
       *
       * <code>repeated string policyTypes = 4;</code>
       * @param value The bytes of the policyTypes to add.
       * @return This builder for chaining.
       */
      public Builder addPolicyTypesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePolicyTypesIsMutable();
        policyTypes_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.NetworkPolicySpec)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.NetworkPolicySpec)
    private static final io.kubernetes.client.proto.V1Networking.NetworkPolicySpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.NetworkPolicySpec();
    }

    public static io.kubernetes.client.proto.V1Networking.NetworkPolicySpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPolicySpec>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPolicySpec>() {
      @java.lang.Override
      public NetworkPolicySpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPolicySpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPolicySpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.NetworkPolicySpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ServiceBackendPortOrBuilder extends
      // @@protoc_insertion_point(interface_extends:k8s.io.api.networking.v1.ServiceBackendPort)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * name is the name of the port on the Service.
     * This is a mutually exclusive setting with "Number".
     * +optional
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * name is the name of the port on the Service.
     * This is a mutually exclusive setting with "Number".
     * +optional
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * name is the name of the port on the Service.
     * This is a mutually exclusive setting with "Number".
     * +optional
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * number is the numerical port number (e.g. 80) on the Service.
     * This is a mutually exclusive setting with "Name".
     * +optional
     * </pre>
     *
     * <code>optional int32 number = 2;</code>
     * @return Whether the number field is set.
     */
    boolean hasNumber();
    /**
     * <pre>
     * number is the numerical port number (e.g. 80) on the Service.
     * This is a mutually exclusive setting with "Name".
     * +optional
     * </pre>
     *
     * <code>optional int32 number = 2;</code>
     * @return The number.
     */
    int getNumber();
  }
  /**
   * <pre>
   * ServiceBackendPort is the service port being referenced.
   * </pre>
   *
   * Protobuf type {@code k8s.io.api.networking.v1.ServiceBackendPort}
   */
  public static final class ServiceBackendPort extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:k8s.io.api.networking.v1.ServiceBackendPort)
      ServiceBackendPortOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        ServiceBackendPort.class.getName());
    }
    // Use ServiceBackendPort.newBuilder() to construct.
    private ServiceBackendPort(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ServiceBackendPort() {
      name_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_ServiceBackendPort_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_ServiceBackendPort_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.kubernetes.client.proto.V1Networking.ServiceBackendPort.class, io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * name is the name of the port on the Service.
     * This is a mutually exclusive setting with "Number".
     * +optional
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * name is the name of the port on the Service.
     * This is a mutually exclusive setting with "Number".
     * +optional
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * name is the name of the port on the Service.
     * This is a mutually exclusive setting with "Number".
     * +optional
     * </pre>
     *
     * <code>optional string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUMBER_FIELD_NUMBER = 2;
    private int number_ = 0;
    /**
     * <pre>
     * number is the numerical port number (e.g. 80) on the Service.
     * This is a mutually exclusive setting with "Name".
     * +optional
     * </pre>
     *
     * <code>optional int32 number = 2;</code>
     * @return Whether the number field is set.
     */
    @java.lang.Override
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * number is the numerical port number (e.g. 80) on the Service.
     * This is a mutually exclusive setting with "Name".
     * +optional
     * </pre>
     *
     * <code>optional int32 number = 2;</code>
     * @return The number.
     */
    @java.lang.Override
    public int getNumber() {
      return number_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, number_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, number_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.kubernetes.client.proto.V1Networking.ServiceBackendPort)) {
        return super.equals(obj);
      }
      io.kubernetes.client.proto.V1Networking.ServiceBackendPort other = (io.kubernetes.client.proto.V1Networking.ServiceBackendPort) obj;

      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (hasNumber() != other.hasNumber()) return false;
      if (hasNumber()) {
        if (getNumber()
            != other.getNumber()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasNumber()) {
        hash = (37 * hash) + NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getNumber();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.kubernetes.client.proto.V1Networking.ServiceBackendPort prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ServiceBackendPort is the service port being referenced.
     * </pre>
     *
     * Protobuf type {@code k8s.io.api.networking.v1.ServiceBackendPort}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:k8s.io.api.networking.v1.ServiceBackendPort)
        io.kubernetes.client.proto.V1Networking.ServiceBackendPortOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_ServiceBackendPort_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_ServiceBackendPort_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.kubernetes.client.proto.V1Networking.ServiceBackendPort.class, io.kubernetes.client.proto.V1Networking.ServiceBackendPort.Builder.class);
      }

      // Construct using io.kubernetes.client.proto.V1Networking.ServiceBackendPort.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        name_ = "";
        number_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.kubernetes.client.proto.V1Networking.internal_static_k8s_io_api_networking_v1_ServiceBackendPort_descriptor;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.ServiceBackendPort getDefaultInstanceForType() {
        return io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance();
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.ServiceBackendPort build() {
        io.kubernetes.client.proto.V1Networking.ServiceBackendPort result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.kubernetes.client.proto.V1Networking.ServiceBackendPort buildPartial() {
        io.kubernetes.client.proto.V1Networking.ServiceBackendPort result = new io.kubernetes.client.proto.V1Networking.ServiceBackendPort(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(io.kubernetes.client.proto.V1Networking.ServiceBackendPort result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.number_ = number_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.kubernetes.client.proto.V1Networking.ServiceBackendPort) {
          return mergeFrom((io.kubernetes.client.proto.V1Networking.ServiceBackendPort)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.kubernetes.client.proto.V1Networking.ServiceBackendPort other) {
        if (other == io.kubernetes.client.proto.V1Networking.ServiceBackendPort.getDefaultInstance()) return this;
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasNumber()) {
          setNumber(other.getNumber());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                number_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * name is the name of the port on the Service.
       * This is a mutually exclusive setting with "Number".
       * +optional
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * name is the name of the port on the Service.
       * This is a mutually exclusive setting with "Number".
       * +optional
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * name is the name of the port on the Service.
       * This is a mutually exclusive setting with "Number".
       * +optional
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * name is the name of the port on the Service.
       * This is a mutually exclusive setting with "Number".
       * +optional
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is the name of the port on the Service.
       * This is a mutually exclusive setting with "Number".
       * +optional
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * name is the name of the port on the Service.
       * This is a mutually exclusive setting with "Number".
       * +optional
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int number_ ;
      /**
       * <pre>
       * number is the numerical port number (e.g. 80) on the Service.
       * This is a mutually exclusive setting with "Name".
       * +optional
       * </pre>
       *
       * <code>optional int32 number = 2;</code>
       * @return Whether the number field is set.
       */
      @java.lang.Override
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * number is the numerical port number (e.g. 80) on the Service.
       * This is a mutually exclusive setting with "Name".
       * +optional
       * </pre>
       *
       * <code>optional int32 number = 2;</code>
       * @return The number.
       */
      @java.lang.Override
      public int getNumber() {
        return number_;
      }
      /**
       * <pre>
       * number is the numerical port number (e.g. 80) on the Service.
       * This is a mutually exclusive setting with "Name".
       * +optional
       * </pre>
       *
       * <code>optional int32 number = 2;</code>
       * @param value The number to set.
       * @return This builder for chaining.
       */
      public Builder setNumber(int value) {

        number_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * number is the numerical port number (e.g. 80) on the Service.
       * This is a mutually exclusive setting with "Name".
       * +optional
       * </pre>
       *
       * <code>optional int32 number = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        number_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:k8s.io.api.networking.v1.ServiceBackendPort)
    }

    // @@protoc_insertion_point(class_scope:k8s.io.api.networking.v1.ServiceBackendPort)
    private static final io.kubernetes.client.proto.V1Networking.ServiceBackendPort DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.kubernetes.client.proto.V1Networking.ServiceBackendPort();
    }

    public static io.kubernetes.client.proto.V1Networking.ServiceBackendPort getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ServiceBackendPort>
        PARSER = new com.google.protobuf.AbstractParser<ServiceBackendPort>() {
      @java.lang.Override
      public ServiceBackendPort parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ServiceBackendPort> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ServiceBackendPort> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.kubernetes.client.proto.V1Networking.ServiceBackendPort getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_HTTPIngressPath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_HTTPIngressPath_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IPBlock_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IPBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_Ingress_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_Ingress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressBackend_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressBackend_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressClass_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressClass_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressClassList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressClassList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressClassSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressClassSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressPortStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressPortStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressRule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressRuleValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressRuleValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressServiceBackend_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressServiceBackend_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_IngressTLS_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_IngressTLS_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicyList_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicyList_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_k8s_io_api_networking_v1_ServiceBackendPort_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_k8s_io_api_networking_v1_ServiceBackendPort_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(k8s.io/api/networking/v1/generated.pro" +
      "to\022\030k8s.io.api.networking.v1\032\"k8s.io/api" +
      "/core/v1/generated.proto\0324k8s.io/apimach" +
      "inery/pkg/apis/meta/v1/generated.proto\032/" +
      "k8s.io/apimachinery/pkg/runtime/generate" +
      "d.proto\0326k8s.io/apimachinery/pkg/runtime" +
      "/schema/generated.proto\0323k8s.io/apimachi" +
      "nery/pkg/util/intstr/generated.proto\"l\n\017" +
      "HTTPIngressPath\022\014\n\004path\030\001 \001(\t\022\020\n\010pathTyp" +
      "e\030\003 \001(\t\0229\n\007backend\030\002 \001(\0132(.k8s.io.api.ne" +
      "tworking.v1.IngressBackend\"P\n\024HTTPIngres" +
      "sRuleValue\0228\n\005paths\030\001 \003(\0132).k8s.io.api.n" +
      "etworking.v1.HTTPIngressPath\"\'\n\007IPBlock\022" +
      "\014\n\004cidr\030\001 \001(\t\022\016\n\006except\030\002 \003(\t\"\273\001\n\007Ingres" +
      "s\022B\n\010metadata\030\001 \001(\01320.k8s.io.apimachiner" +
      "y.pkg.apis.meta.v1.ObjectMeta\0223\n\004spec\030\002 " +
      "\001(\0132%.k8s.io.api.networking.v1.IngressSp" +
      "ec\0227\n\006status\030\003 \001(\0132\'.k8s.io.api.networki" +
      "ng.v1.IngressStatus\"\223\001\n\016IngressBackend\022@" +
      "\n\007service\030\004 \001(\0132/.k8s.io.api.networking." +
      "v1.IngressServiceBackend\022?\n\010resource\030\003 \001" +
      "(\0132-.k8s.io.api.core.v1.TypedLocalObject" +
      "Reference\"\214\001\n\014IngressClass\022B\n\010metadata\030\001" +
      " \001(\01320.k8s.io.apimachinery.pkg.apis.meta" +
      ".v1.ObjectMeta\0228\n\004spec\030\002 \001(\0132*.k8s.io.ap" +
      "i.networking.v1.IngressClassSpec\"\213\001\n\020Ing" +
      "ressClassList\022@\n\010metadata\030\001 \001(\0132..k8s.io" +
      ".apimachinery.pkg.apis.meta.v1.ListMeta\022" +
      "5\n\005items\030\002 \003(\0132&.k8s.io.api.networking.v" +
      "1.IngressClass\"q\n\037IngressClassParameters" +
      "Reference\022\020\n\010aPIGroup\030\001 \001(\t\022\014\n\004kind\030\002 \001(" +
      "\t\022\014\n\004name\030\003 \001(\t\022\r\n\005scope\030\004 \001(\t\022\021\n\tnamesp" +
      "ace\030\005 \001(\t\"u\n\020IngressClassSpec\022\022\n\ncontrol" +
      "ler\030\001 \001(\t\022M\n\nparameters\030\002 \001(\01329.k8s.io.a" +
      "pi.networking.v1.IngressClassParametersR" +
      "eference\"\201\001\n\013IngressList\022@\n\010metadata\030\001 \001" +
      "(\0132..k8s.io.apimachinery.pkg.apis.meta.v" +
      "1.ListMeta\0220\n\005items\030\002 \003(\0132!.k8s.io.api.n" +
      "etworking.v1.Ingress\"v\n\032IngressLoadBalan" +
      "cerIngress\022\n\n\002ip\030\001 \001(\t\022\020\n\010hostname\030\002 \001(\t" +
      "\022:\n\005ports\030\004 \003(\0132+.k8s.io.api.networking." +
      "v1.IngressPortStatus\"b\n\031IngressLoadBalan" +
      "cerStatus\022E\n\007ingress\030\001 \003(\01324.k8s.io.api." +
      "networking.v1.IngressLoadBalancerIngress" +
      "\"B\n\021IngressPortStatus\022\014\n\004port\030\001 \001(\005\022\020\n\010p" +
      "rotocol\030\002 \001(\t\022\r\n\005error\030\003 \001(\t\"a\n\013IngressR" +
      "ule\022\014\n\004host\030\001 \001(\t\022D\n\020ingressRuleValue\030\002 " +
      "\001(\0132*.k8s.io.api.networking.v1.IngressRu" +
      "leValue\"P\n\020IngressRuleValue\022<\n\004http\030\001 \001(" +
      "\0132..k8s.io.api.networking.v1.HTTPIngress" +
      "RuleValue\"a\n\025IngressServiceBackend\022\014\n\004na" +
      "me\030\001 \001(\t\022:\n\004port\030\002 \001(\0132,.k8s.io.api.netw" +
      "orking.v1.ServiceBackendPort\"\322\001\n\013Ingress" +
      "Spec\022\030\n\020ingressClassName\030\004 \001(\t\022@\n\016defaul" +
      "tBackend\030\001 \001(\0132(.k8s.io.api.networking.v" +
      "1.IngressBackend\0221\n\003tls\030\002 \003(\0132$.k8s.io.a" +
      "pi.networking.v1.IngressTLS\0224\n\005rules\030\003 \003" +
      "(\0132%.k8s.io.api.networking.v1.IngressRul" +
      "e\"Z\n\rIngressStatus\022I\n\014loadBalancer\030\001 \001(\013" +
      "23.k8s.io.api.networking.v1.IngressLoadB" +
      "alancerStatus\"/\n\nIngressTLS\022\r\n\005hosts\030\001 \003" +
      "(\t\022\022\n\nsecretName\030\002 \001(\t\"\216\001\n\rNetworkPolicy" +
      "\022B\n\010metadata\030\001 \001(\01320.k8s.io.apimachinery" +
      ".pkg.apis.meta.v1.ObjectMeta\0229\n\004spec\030\002 \001" +
      "(\0132+.k8s.io.api.networking.v1.NetworkPol" +
      "icySpec\"\216\001\n\027NetworkPolicyEgressRule\022:\n\005p" +
      "orts\030\001 \003(\0132+.k8s.io.api.networking.v1.Ne" +
      "tworkPolicyPort\0227\n\002to\030\002 \003(\0132+.k8s.io.api" +
      ".networking.v1.NetworkPolicyPeer\"\221\001\n\030Net" +
      "workPolicyIngressRule\022:\n\005ports\030\001 \003(\0132+.k" +
      "8s.io.api.networking.v1.NetworkPolicyPor" +
      "t\0229\n\004from\030\002 \003(\0132+.k8s.io.api.networking." +
      "v1.NetworkPolicyPeer\"\215\001\n\021NetworkPolicyLi" +
      "st\022@\n\010metadata\030\001 \001(\0132..k8s.io.apimachine" +
      "ry.pkg.apis.meta.v1.ListMeta\0226\n\005items\030\002 " +
      "\003(\0132\'.k8s.io.api.networking.v1.NetworkPo" +
      "licy\"\341\001\n\021NetworkPolicyPeer\022H\n\013podSelecto" +
      "r\030\001 \001(\01323.k8s.io.apimachinery.pkg.apis.m" +
      "eta.v1.LabelSelector\022N\n\021namespaceSelecto" +
      "r\030\002 \001(\01323.k8s.io.apimachinery.pkg.apis.m" +
      "eta.v1.LabelSelector\0222\n\007ipBlock\030\003 \001(\0132!." +
      "k8s.io.api.networking.v1.IPBlock\"v\n\021Netw" +
      "orkPolicyPort\022\020\n\010protocol\030\001 \001(\t\022>\n\004port\030" +
      "\002 \001(\01320.k8s.io.apimachinery.pkg.util.int" +
      "str.IntOrString\022\017\n\007endPort\030\003 \001(\005\"\372\001\n\021Net" +
      "workPolicySpec\022H\n\013podSelector\030\001 \001(\01323.k8" +
      "s.io.apimachinery.pkg.apis.meta.v1.Label" +
      "Selector\022C\n\007ingress\030\002 \003(\01322.k8s.io.api.n" +
      "etworking.v1.NetworkPolicyIngressRule\022A\n" +
      "\006egress\030\003 \003(\01321.k8s.io.api.networking.v1" +
      ".NetworkPolicyEgressRule\022\023\n\013policyTypes\030" +
      "\004 \003(\t\"2\n\022ServiceBackendPort\022\014\n\004name\030\001 \001(" +
      "\t\022\016\n\006number\030\002 \001(\005BD\n\032io.kubernetes.clien" +
      "t.protoB\014V1NetworkingZ\030k8s.io/api/networ" +
      "king/v1"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.kubernetes.client.proto.V1.getDescriptor(),
          io.kubernetes.client.proto.Meta.getDescriptor(),
          io.kubernetes.client.proto.Runtime.getDescriptor(),
          io.kubernetes.client.proto.RuntimeSchema.getDescriptor(),
          io.kubernetes.client.proto.IntStr.getDescriptor(),
        });
    internal_static_k8s_io_api_networking_v1_HTTPIngressPath_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_k8s_io_api_networking_v1_HTTPIngressPath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_HTTPIngressPath_descriptor,
        new java.lang.String[] { "Path", "PathType", "Backend", });
    internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_HTTPIngressRuleValue_descriptor,
        new java.lang.String[] { "Paths", });
    internal_static_k8s_io_api_networking_v1_IPBlock_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_k8s_io_api_networking_v1_IPBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IPBlock_descriptor,
        new java.lang.String[] { "Cidr", "Except", });
    internal_static_k8s_io_api_networking_v1_Ingress_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_k8s_io_api_networking_v1_Ingress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_Ingress_descriptor,
        new java.lang.String[] { "Metadata", "Spec", "Status", });
    internal_static_k8s_io_api_networking_v1_IngressBackend_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_k8s_io_api_networking_v1_IngressBackend_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressBackend_descriptor,
        new java.lang.String[] { "Service", "Resource", });
    internal_static_k8s_io_api_networking_v1_IngressClass_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_k8s_io_api_networking_v1_IngressClass_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressClass_descriptor,
        new java.lang.String[] { "Metadata", "Spec", });
    internal_static_k8s_io_api_networking_v1_IngressClassList_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_k8s_io_api_networking_v1_IngressClassList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressClassList_descriptor,
        new java.lang.String[] { "Metadata", "Items", });
    internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressClassParametersReference_descriptor,
        new java.lang.String[] { "APIGroup", "Kind", "Name", "Scope", "Namespace", });
    internal_static_k8s_io_api_networking_v1_IngressClassSpec_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_k8s_io_api_networking_v1_IngressClassSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressClassSpec_descriptor,
        new java.lang.String[] { "Controller", "Parameters", });
    internal_static_k8s_io_api_networking_v1_IngressList_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_k8s_io_api_networking_v1_IngressList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressList_descriptor,
        new java.lang.String[] { "Metadata", "Items", });
    internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressLoadBalancerIngress_descriptor,
        new java.lang.String[] { "Ip", "Hostname", "Ports", });
    internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressLoadBalancerStatus_descriptor,
        new java.lang.String[] { "Ingress", });
    internal_static_k8s_io_api_networking_v1_IngressPortStatus_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_k8s_io_api_networking_v1_IngressPortStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressPortStatus_descriptor,
        new java.lang.String[] { "Port", "Protocol", "Error", });
    internal_static_k8s_io_api_networking_v1_IngressRule_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_k8s_io_api_networking_v1_IngressRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressRule_descriptor,
        new java.lang.String[] { "Host", "IngressRuleValue", });
    internal_static_k8s_io_api_networking_v1_IngressRuleValue_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_k8s_io_api_networking_v1_IngressRuleValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressRuleValue_descriptor,
        new java.lang.String[] { "Http", });
    internal_static_k8s_io_api_networking_v1_IngressServiceBackend_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_k8s_io_api_networking_v1_IngressServiceBackend_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressServiceBackend_descriptor,
        new java.lang.String[] { "Name", "Port", });
    internal_static_k8s_io_api_networking_v1_IngressSpec_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_k8s_io_api_networking_v1_IngressSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressSpec_descriptor,
        new java.lang.String[] { "IngressClassName", "DefaultBackend", "Tls", "Rules", });
    internal_static_k8s_io_api_networking_v1_IngressStatus_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_k8s_io_api_networking_v1_IngressStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressStatus_descriptor,
        new java.lang.String[] { "LoadBalancer", });
    internal_static_k8s_io_api_networking_v1_IngressTLS_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_k8s_io_api_networking_v1_IngressTLS_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_IngressTLS_descriptor,
        new java.lang.String[] { "Hosts", "SecretName", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicy_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_k8s_io_api_networking_v1_NetworkPolicy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicy_descriptor,
        new java.lang.String[] { "Metadata", "Spec", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicyEgressRule_descriptor,
        new java.lang.String[] { "Ports", "To", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicyIngressRule_descriptor,
        new java.lang.String[] { "Ports", "From", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicyList_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_k8s_io_api_networking_v1_NetworkPolicyList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicyList_descriptor,
        new java.lang.String[] { "Metadata", "Items", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicyPeer_descriptor,
        new java.lang.String[] { "PodSelector", "NamespaceSelector", "IpBlock", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicyPort_descriptor,
        new java.lang.String[] { "Protocol", "Port", "EndPort", });
    internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_NetworkPolicySpec_descriptor,
        new java.lang.String[] { "PodSelector", "Ingress", "Egress", "PolicyTypes", });
    internal_static_k8s_io_api_networking_v1_ServiceBackendPort_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_k8s_io_api_networking_v1_ServiceBackendPort_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_k8s_io_api_networking_v1_ServiceBackendPort_descriptor,
        new java.lang.String[] { "Name", "Number", });
    descriptor.resolveAllFeaturesImmutable();
    io.kubernetes.client.proto.V1.getDescriptor();
    io.kubernetes.client.proto.Meta.getDescriptor();
    io.kubernetes.client.proto.Runtime.getDescriptor();
    io.kubernetes.client.proto.RuntimeSchema.getDescriptor();
    io.kubernetes.client.proto.IntStr.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
