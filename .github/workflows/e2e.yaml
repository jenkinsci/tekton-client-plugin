name: E2E Tests

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'
  push:
    branches: [main]
    paths-ignore:
      - 'README.md'
      - 'docs/**'
      - '*.md'

env:
  TEKTON_VERSION: v1.0.0
  KIND_VERSION: v0.20.0
  KUBECTL_VERSION: v1.28.0
  JAVA_VERSION: 21
  KIND_CLUSTER_NAME: tekton-e2e-test

jobs:
# ─────────────────────────────────────────────────────────────
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4

    - name: Set up Temurin ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}
        cache: maven

    - name: Run unit tests
      run: |
        mvn -B -ntp -q clean test -Dtest="!*E2ETest*" -Djava.awt.headless=true

    - name: Upload surefire reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: unit-test-reports
        path: target/surefire-reports/**
# ─────────────────────────────────────────────────────────────
  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4

    - name: Set up Temurin ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.JAVA_VERSION }}
        cache: maven

    # ---------- Install Kind + kubectl ----------
    - name: Install Kind & kubectl
      run: |
        curl -Lo kind https://kind.sigs.k8s.io/dl/${KIND_VERSION}/kind-linux-amd64
        chmod +x kind && sudo mv kind /usr/local/bin/
        curl -Lo kubectl https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
        chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        kind --version && kubectl version --client

    # ---------- Create Kind cluster ----------
    - name: Create Kind cluster
      run: |
        cat <<EOF | kind create cluster --name "${KIND_CLUSTER_NAME}" --wait 5m --config=-
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
          extraPortMappings:
          - containerPort: 30080
            hostPort: 30080
            protocol: TCP
          - containerPort: 30443
            hostPort: 30443
            protocol: TCP
        EOF

    # ---------- Install Tekton ----------
    - name: Install Tekton Pipelines ${{ env.TEKTON_VERSION }}
      run: |
        kubectl apply -f https://storage.googleapis.com/tekton-releases/pipeline/previous/${TEKTON_VERSION}/release.yaml
        kubectl rollout status deployment/tekton-pipelines-controller -n tekton-pipelines --timeout=300s
        kubectl rollout status deployment/tekton-pipelines-webhook   -n tekton-pipelines --timeout=300s

    # ---------- Build plugin (skip tests) ----------
    - name: Build Jenkins plugin
      run: mvn -B -ntp -q clean package -DskipTests -Djava.awt.headless=true

    # ---------- Run E2E tests ----------
    - name: Run E2E tests
      env:
        KUBECONFIG: ${{ github.workspace }}/kind-kubeconfig
      run: |
        kind export kubeconfig --name "${KIND_CLUSTER_NAME}" --kubeconfig "${KUBECONFIG}"
        mvn -B -ntp test -Dtest="*E2ETest*" -Djenkins.test.mode=true

    # ---------- Dump diagnostics on failure ----------
    - name: Dump cluster diagnostics
      if: failure()
      run: |
        kubectl get pods -A
        kubectl logs -n tekton-pipelines deployment/tekton-pipelines-controller --tail=100 || true
        kubectl logs -n tekton-pipelines deployment/tekton-pipelines-webhook   --tail=100 || true
        find target/surefire-reports -name '*.txt' -exec echo "=== {} ===" \; -exec cat {} \;

    # ---------- Upload E2E artifacts ----------
    - name: Upload E2E reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-reports
        path: target/surefire-reports/**

    # ---------- Cleanup ----------
    - name: Delete Kind cluster
      if: always()
      run: kind delete cluster --name "${KIND_CLUSTER_NAME}" || true
