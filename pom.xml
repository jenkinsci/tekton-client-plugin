<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jenkins-ci.plugins</groupId>
        <artifactId>plugin</artifactId>
        <version>4.17</version>
        <relativePath />
    </parent>

    <groupId>org.waveywaves.jenkins.plugins</groupId>
    <artifactId>tekton-client</artifactId>
    <version>1.0-alpha2-SNAPSHOT</version>
    <name>Tekton Client Plugin</name>
    <description>Tekton is a Cloud Native CI/CD tool for Kubernetes. This plugin helps in the creation and manipulation of Tekton Resources on you Kubernetes cluster and helps drive your operations from your Jenkins Server itself without having to carry them out from the Command Line Interface or any other User Interface.</description>
    <packaging>hpi</packaging>
    <url>https://github.com/jenkinsci/tekton-client-plugin</url>

    <scm>
        <connection>scm:git:https://github.com/jenkinsci/tekton-client-plugin.git</connection>
        <developerConnection>scm:git:https://github.com/jenkinsci/tekton-client-plugin.git</developerConnection>
        <url>https://github.com/jenkinsci/tekton-client-plugin</url>
        <tag>${scmTag}</tag>
    </scm>

    <properties>
        <!-- Baseline Jenkins version you use to build the plugin. Users must have this version or newer to run. -->
        <jenkins.version>2.249.1</jenkins.version>
        <java.level>8</java.level>
        <pipeline-model-definition.version>1.6.0</pipeline-model-definition.version>
        <revision>1.0-alpha1</revision>
        <changelist>SNAPSHOT</changelist>
        <jenkins-test-harness.version>2.34</jenkins-test-harness.version>
        <kubernetes-server-mock.version>5.0.1</kubernetes-server-mock.version>
        <tekton-client.version>5.2.1</tekton-client.version>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <mockwebserver.version>0.1.8</mockwebserver.version>
        <junit-jupiter-engine.version>5.6.2</junit-jupiter-engine.version>
        <jx-pipeline.version>0.0.114</jx-pipeline.version>
    </properties>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>waveywaves</id>
            <name>Vibhav Bobade</name>
        </developer>
    </developers>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.30</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>tekton-client</artifactId>
            <version>${tekton-client.version}</version>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-server-mock</artifactId>
            <version>${kubernetes-server-mock.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- test plugins for running locally via: mvn hpi:run -->
        <dependency>
          <groupId>org.jenkins-ci.plugins</groupId>
          <artifactId>git</artifactId>
        </dependency>
        <dependency>
          <groupId>org.jenkins-ci.plugins.workflow</groupId>
          <artifactId>workflow-aggregator</artifactId>
          <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.jenkins-ci.plugins</groupId>
            <artifactId>jackson2-api</artifactId>
        </dependency>

        <dependency>
          <groupId>org.assertj</groupId>
          <artifactId>assertj-core</artifactId>
          <version>3.19.0</version>
          <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
      <dependencies>
        <dependency>
          <groupId>io.jenkins.tools.bom</groupId>
          <artifactId>bom-2.249.x</artifactId>
          <version>26</version>
          <scope>import</scope>
          <type>pom</type>
        </dependency>
          <dependency>
              <groupId>org.apache.commons</groupId>
              <artifactId>commons-lang3</artifactId>
              <version>3.10</version>
          </dependency>
          <dependency>
              <groupId>org.jenkins-ci.plugins</groupId>
              <artifactId>jackson2-api</artifactId>
              <version>2.12.1</version>
          </dependency>
          <dependency>
              <groupId>com.fasterxml.jackson.module</groupId>
              <artifactId>jackson-module-jaxb-annotations</artifactId>
              <version>2.12.1</version>
          </dependency>
      </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </repository>
        <repository>
            <id>tags</id>
            <name>Custom Tags</name>
            <url>https://raw.githubusercontent.com/t-wanl/Jenkins-Dynamic-Databinding-UI-Control-Library/master/jar/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>repo.jenkins-ci.org</id>
            <url>https://repo.jenkins-ci.org/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M5</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <check />
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!-- optional profile to download the jx-pipeline-effective binaries for each platform -->
        <profile>
            <id>download-binaries</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>3.0.0</version>
                        <executions>
                            <execution>
                                <phase>generate-resources</phase>
                                <configuration>

                                    <target>
                                        <echo message="downloading the jx-pipeline binaries"/>

                                        <delete dir="target/jxp"/>
                                        <delete dir="src/main/resources/org/waveywaves/jenkins/plugins/tekton/client/jxp"/>

                                        <mkdir dir="target/jxp"/>
                                        <mkdir dir="src/main/resources/org/waveywaves/jenkins/plugins/tekton/client/jxp/mac"/>

                                        <get src="https://github.com/jenkins-x/jx-pipeline/releases/download/v${jx-pipeline.version}/jx-pipeline-effective-darwin-amd64.tar.gz"
                                             dest="target/jxp/mac.tar.gz"/>
                                        <get src="https://github.com/jenkins-x/jx-pipeline/releases/download/v${jx-pipeline.version}/jx-pipeline-effective-linux-amd64.tar.gz"
                                             dest="target/jxp/linux.tar.gz"/>
                                        <get src="https://github.com/jenkins-x/jx-pipeline/releases/download/v${jx-pipeline.version}/jx-pipeline-effective-windows-amd64.zip"
                                             dest="target/jxp/windows.zip"/>

                                        <untar compression="gzip" src="target/jxp/mac.tar.gz"
                                               dest="src/main/resources/org/waveywaves/jenkins/plugins/tekton/client/jxp/mac"/>
                                        <untar compression="gzip" src="target/jxp/linux.tar.gz"
                                               dest="src/main/resources/org/waveywaves/jenkins/plugins/tekton/client/jxp/linux"/>
                                        <unzip src="target/jxp/windows.zip"
                                               dest="src/main/resources/org/waveywaves/jenkins/plugins/tekton/client/jxp/windows"/>

                                        <!-- lets remove any docs we don't need -->
                                        <delete>
                                            <fileset dir="src/main/resources/org/waveywaves/jenkins/plugins/tekton/client/jxp"
                                                     includes="**/*.md"/>
                                        </delete>
                                    </target>

                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
